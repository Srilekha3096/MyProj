{"version":3,"file":"static/js/131.4275a42e.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/Accordion/AccordionContext.js","../node_modules/@mui/material/Accordion/accordionClasses.js","../node_modules/@mui/material/Accordion/Accordion.js","../node_modules/@mui/material/AccordionSummary/accordionSummaryClasses.js","../node_modules/@mui/material/AccordionSummary/AccordionSummary.js","../node_modules/@mui/material/AccordionDetails/accordionDetailsClasses.js","../node_modules/@mui/material/AccordionDetails/AccordionDetails.js","app/pages/settings/Preferences/TransactionSeries.js","app/pages/settings/Setting.js","app/shared/ReuseComponents/ErpDialogBoxes.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\n\n/**\n * @ignore - internal component.\n * @type {React.Context<{} | {expanded: boolean, disabled: boolean, toggle: () => void}>}\n */\nconst AccordionContext = /*#__PURE__*/React.createContext({});\nif (process.env.NODE_ENV !== 'production') {\n  AccordionContext.displayName = 'AccordionContext';\n}\nexport default AccordionContext;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getAccordionUtilityClass(slot) {\n  return generateUtilityClass('MuiAccordion', slot);\n}\nconst accordionClasses = generateUtilityClasses('MuiAccordion', ['root', 'rounded', 'expanded', 'disabled', 'gutters', 'region']);\nexport default accordionClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"defaultExpanded\", \"disabled\", \"disableGutters\", \"expanded\", \"onChange\", \"square\", \"slots\", \"slotProps\", \"TransitionComponent\", \"TransitionProps\"];\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '../zero-styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport Collapse from '../Collapse';\nimport Paper from '../Paper';\nimport AccordionContext from './AccordionContext';\nimport useControlled from '../utils/useControlled';\nimport useSlot from '../utils/useSlot';\nimport accordionClasses, { getAccordionUtilityClass } from './accordionClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    square,\n    expanded,\n    disabled,\n    disableGutters\n  } = ownerState;\n  const slots = {\n    root: ['root', !square && 'rounded', expanded && 'expanded', disabled && 'disabled', !disableGutters && 'gutters'],\n    region: ['region']\n  };\n  return composeClasses(slots, getAccordionUtilityClass, classes);\n};\nconst AccordionRoot = styled(Paper, {\n  name: 'MuiAccordion',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${accordionClasses.region}`]: styles.region\n    }, styles.root, !ownerState.square && styles.rounded, !ownerState.disableGutters && styles.gutters];\n  }\n})(({\n  theme\n}) => {\n  const transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return {\n    position: 'relative',\n    transition: theme.transitions.create(['margin'], transition),\n    overflowAnchor: 'none',\n    // Keep the same scrolling position\n    '&::before': {\n      position: 'absolute',\n      left: 0,\n      top: -1,\n      right: 0,\n      height: 1,\n      content: '\"\"',\n      opacity: 1,\n      backgroundColor: (theme.vars || theme).palette.divider,\n      transition: theme.transitions.create(['opacity', 'background-color'], transition)\n    },\n    '&:first-of-type': {\n      '&::before': {\n        display: 'none'\n      }\n    },\n    [`&.${accordionClasses.expanded}`]: {\n      '&::before': {\n        opacity: 0\n      },\n      '&:first-of-type': {\n        marginTop: 0\n      },\n      '&:last-of-type': {\n        marginBottom: 0\n      },\n      '& + &': {\n        '&::before': {\n          display: 'none'\n        }\n      }\n    },\n    [`&.${accordionClasses.disabled}`]: {\n      backgroundColor: (theme.vars || theme).palette.action.disabledBackground\n    }\n  };\n}, ({\n  theme\n}) => ({\n  variants: [{\n    props: props => !props.square,\n    style: {\n      borderRadius: 0,\n      '&:first-of-type': {\n        borderTopLeftRadius: (theme.vars || theme).shape.borderRadius,\n        borderTopRightRadius: (theme.vars || theme).shape.borderRadius\n      },\n      '&:last-of-type': {\n        borderBottomLeftRadius: (theme.vars || theme).shape.borderRadius,\n        borderBottomRightRadius: (theme.vars || theme).shape.borderRadius,\n        // Fix a rendering issue on Edge\n        '@supports (-ms-ime-align: auto)': {\n          borderBottomLeftRadius: 0,\n          borderBottomRightRadius: 0\n        }\n      }\n    }\n  }, {\n    props: props => !props.disableGutters,\n    style: {\n      [`&.${accordionClasses.expanded}`]: {\n        margin: '16px 0'\n      }\n    }\n  }]\n}));\nconst Accordion = /*#__PURE__*/React.forwardRef(function Accordion(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiAccordion'\n  });\n  const {\n      children: childrenProp,\n      className,\n      defaultExpanded = false,\n      disabled = false,\n      disableGutters = false,\n      expanded: expandedProp,\n      onChange,\n      square = false,\n      slots = {},\n      slotProps = {},\n      TransitionComponent: TransitionComponentProp,\n      TransitionProps: TransitionPropsProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [expanded, setExpandedState] = useControlled({\n    controlled: expandedProp,\n    default: defaultExpanded,\n    name: 'Accordion',\n    state: 'expanded'\n  });\n  const handleChange = React.useCallback(event => {\n    setExpandedState(!expanded);\n    if (onChange) {\n      onChange(event, !expanded);\n    }\n  }, [expanded, onChange, setExpandedState]);\n  const [summary, ...children] = React.Children.toArray(childrenProp);\n  const contextValue = React.useMemo(() => ({\n    expanded,\n    disabled,\n    disableGutters,\n    toggle: handleChange\n  }), [expanded, disabled, disableGutters, handleChange]);\n  const ownerState = _extends({}, props, {\n    square,\n    disabled,\n    disableGutters,\n    expanded\n  });\n  const classes = useUtilityClasses(ownerState);\n  const backwardCompatibleSlots = _extends({\n    transition: TransitionComponentProp\n  }, slots);\n  const backwardCompatibleSlotProps = _extends({\n    transition: TransitionPropsProp\n  }, slotProps);\n  const [TransitionSlot, transitionProps] = useSlot('transition', {\n    elementType: Collapse,\n    externalForwardedProps: {\n      slots: backwardCompatibleSlots,\n      slotProps: backwardCompatibleSlotProps\n    },\n    ownerState\n  });\n  return /*#__PURE__*/_jsxs(AccordionRoot, _extends({\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState,\n    square: square\n  }, other, {\n    children: [/*#__PURE__*/_jsx(AccordionContext.Provider, {\n      value: contextValue,\n      children: summary\n    }), /*#__PURE__*/_jsx(TransitionSlot, _extends({\n      in: expanded,\n      timeout: \"auto\"\n    }, transitionProps, {\n      children: /*#__PURE__*/_jsx(\"div\", {\n        \"aria-labelledby\": summary.props.id,\n        id: summary.props['aria-controls'],\n        role: \"region\",\n        className: classes.region,\n        children: children\n      })\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Accordion.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node.isRequired, props => {\n    const summary = React.Children.toArray(props.children)[0];\n    if (isFragment(summary)) {\n      return new Error(\"MUI: The Accordion doesn't accept a Fragment as a child. \" + 'Consider providing an array instead.');\n    }\n    if (! /*#__PURE__*/React.isValidElement(summary)) {\n      return new Error('MUI: Expected the first child of Accordion to be a valid element.');\n    }\n    return null;\n  }),\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, expands the accordion by default.\n   * @default false\n   */\n  defaultExpanded: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, it removes the margin between two expanded accordion items and the increase of height.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * If `true`, expands the accordion, otherwise collapse it.\n   * Setting this prop enables control over the accordion.\n   */\n  expanded: PropTypes.bool,\n  /**\n   * Callback fired when the expand/collapse state is changed.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback. **Warning**: This is a generic event not a change event.\n   * @param {boolean} expanded The `expanded` state of the accordion.\n   */\n  onChange: PropTypes.func,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    transition: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    transition: PropTypes.elementType\n  }),\n  /**\n   * If `true`, rounded corners are disabled.\n   * @default false\n   */\n  square: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @deprecated Use `slots.transition` instead. This prop will be removed in v7. [How to migrate](/material-ui/migration/migrating-from-deprecated-apis/).\n   */\n  TransitionComponent: PropTypes.elementType,\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.\n   * @deprecated Use `slotProps.transition` instead. This prop will be removed in v7. [How to migrate](/material-ui/migration/migrating-from-deprecated-apis/).\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default Accordion;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getAccordionSummaryUtilityClass(slot) {\n  return generateUtilityClass('MuiAccordionSummary', slot);\n}\nconst accordionSummaryClasses = generateUtilityClasses('MuiAccordionSummary', ['root', 'expanded', 'focusVisible', 'disabled', 'gutters', 'contentGutters', 'content', 'expandIconWrapper']);\nexport default accordionSummaryClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"expandIcon\", \"focusVisibleClassName\", \"onClick\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '../zero-styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport ButtonBase from '../ButtonBase';\nimport AccordionContext from '../Accordion/AccordionContext';\nimport accordionSummaryClasses, { getAccordionSummaryUtilityClass } from './accordionSummaryClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    expanded,\n    disabled,\n    disableGutters\n  } = ownerState;\n  const slots = {\n    root: ['root', expanded && 'expanded', disabled && 'disabled', !disableGutters && 'gutters'],\n    focusVisible: ['focusVisible'],\n    content: ['content', expanded && 'expanded', !disableGutters && 'contentGutters'],\n    expandIconWrapper: ['expandIconWrapper', expanded && 'expanded']\n  };\n  return composeClasses(slots, getAccordionSummaryUtilityClass, classes);\n};\nconst AccordionSummaryRoot = styled(ButtonBase, {\n  name: 'MuiAccordionSummary',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme\n}) => {\n  const transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return {\n    display: 'flex',\n    minHeight: 48,\n    padding: theme.spacing(0, 2),\n    transition: theme.transitions.create(['min-height', 'background-color'], transition),\n    [`&.${accordionSummaryClasses.focusVisible}`]: {\n      backgroundColor: (theme.vars || theme).palette.action.focus\n    },\n    [`&.${accordionSummaryClasses.disabled}`]: {\n      opacity: (theme.vars || theme).palette.action.disabledOpacity\n    },\n    [`&:hover:not(.${accordionSummaryClasses.disabled})`]: {\n      cursor: 'pointer'\n    },\n    variants: [{\n      props: props => !props.disableGutters,\n      style: {\n        [`&.${accordionSummaryClasses.expanded}`]: {\n          minHeight: 64\n        }\n      }\n    }]\n  };\n});\nconst AccordionSummaryContent = styled('div', {\n  name: 'MuiAccordionSummary',\n  slot: 'Content',\n  overridesResolver: (props, styles) => styles.content\n})(({\n  theme\n}) => ({\n  display: 'flex',\n  flexGrow: 1,\n  margin: '12px 0',\n  variants: [{\n    props: props => !props.disableGutters,\n    style: {\n      transition: theme.transitions.create(['margin'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      [`&.${accordionSummaryClasses.expanded}`]: {\n        margin: '20px 0'\n      }\n    }\n  }]\n}));\nconst AccordionSummaryExpandIconWrapper = styled('div', {\n  name: 'MuiAccordionSummary',\n  slot: 'ExpandIconWrapper',\n  overridesResolver: (props, styles) => styles.expandIconWrapper\n})(({\n  theme\n}) => ({\n  display: 'flex',\n  color: (theme.vars || theme).palette.action.active,\n  transform: 'rotate(0deg)',\n  transition: theme.transitions.create('transform', {\n    duration: theme.transitions.duration.shortest\n  }),\n  [`&.${accordionSummaryClasses.expanded}`]: {\n    transform: 'rotate(180deg)'\n  }\n}));\nconst AccordionSummary = /*#__PURE__*/React.forwardRef(function AccordionSummary(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiAccordionSummary'\n  });\n  const {\n      children,\n      className,\n      expandIcon,\n      focusVisibleClassName,\n      onClick\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    disabled = false,\n    disableGutters,\n    expanded,\n    toggle\n  } = React.useContext(AccordionContext);\n  const handleChange = event => {\n    if (toggle) {\n      toggle(event);\n    }\n    if (onClick) {\n      onClick(event);\n    }\n  };\n  const ownerState = _extends({}, props, {\n    expanded,\n    disabled,\n    disableGutters\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(AccordionSummaryRoot, _extends({\n    focusRipple: false,\n    disableRipple: true,\n    disabled: disabled,\n    component: \"div\",\n    \"aria-expanded\": expanded,\n    className: clsx(classes.root, className),\n    focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n    onClick: handleChange,\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: [/*#__PURE__*/_jsx(AccordionSummaryContent, {\n      className: classes.content,\n      ownerState: ownerState,\n      children: children\n    }), expandIcon && /*#__PURE__*/_jsx(AccordionSummaryExpandIconWrapper, {\n      className: classes.expandIconWrapper,\n      ownerState: ownerState,\n      children: expandIcon\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? AccordionSummary.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The icon to display as the expand indicator.\n   */\n  expandIcon: PropTypes.node,\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default AccordionSummary;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getAccordionDetailsUtilityClass(slot) {\n  return generateUtilityClass('MuiAccordionDetails', slot);\n}\nconst accordionDetailsClasses = generateUtilityClasses('MuiAccordionDetails', ['root']);\nexport default accordionDetailsClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '../zero-styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { getAccordionDetailsUtilityClass } from './accordionDetailsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getAccordionDetailsUtilityClass, classes);\n};\nconst AccordionDetailsRoot = styled('div', {\n  name: 'MuiAccordionDetails',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(1, 2, 2)\n}));\nconst AccordionDetails = /*#__PURE__*/React.forwardRef(function AccordionDetails(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiAccordionDetails'\n  });\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(AccordionDetailsRoot, _extends({\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? AccordionDetails.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default AccordionDetails;","import JumboContentLayoutMain from \"@jumbo/components/JumboContentLayout/JumboContentLayoutMain\";\r\nimport Div from \"@jumbo/shared/Div\";\r\nimport {\r\n  Accordion,\r\n  AccordionDetails,\r\n  AccordionSummary,\r\n  Autocomplete,\r\n  Button,\r\n  ButtonGroup,\r\n  Card,\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport React, { Suspense, useEffect, useState } from \"react\";\r\nimport Setting from \"../Setting\";\r\nimport settingServices from \"app/services/setting-api-services\";\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"app/services/auth-services\";\r\nimport { toast } from \"react-toastify\";\r\nimport { FaSave } from \"react-icons/fa\";\r\nimport { TiCancel } from \"react-icons/ti\";\r\nimport \"../Setting.css\";\r\nimport { RiArrowDownSFill } from \"react-icons/ri\";\r\nimport { MdPlayArrow } from \"react-icons/md\";\r\nimport { ErpConfirmDialogBox } from \"app/shared/ReuseComponents/ErpDialogBoxes\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchUserRolePermissions, selectedUserRolePermissions } from \"app/redux/actions/fetchUserRolePermissions\";\r\nimport { ERPCustomLoader } from \"app/shared/ReuseComponents/StyledComponents\";\r\n\r\n\r\n\r\n\r\nconst seriesType = [\"Automatic\", \"Manual\"];\r\n\r\n\r\nconst TransactionSeries = () => {\r\n  const token = localStorage.getItem(\"accesstoken\");\r\n\r\n  const header = {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n      \"Content-Type\": \"application/json\",\r\n      Accept: \"application/json\",\r\n    },\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n  const { userRolePermissions, formPermissions, modulePermissions } = useSelector(selectedUserRolePermissions);\r\n\r\n\r\n  const [showCreatePage, setShowCreatePage] = useState(true);\r\n  const [showUpdatePage, setShowUpdatePage] = useState(false);\r\n  const [id, setId] = useState(0);\r\n  const [transactionSeriesName, setTransactionSeriesName] = useState();\r\n  const [creditNotePre, setCreditNotePre] = useState();\r\n  const [journalVoucherPre, setJournalVoucherPre] = useState();\r\n  const [cashVoucherPre, setCashVoucherPre] = useState();\r\n  const [bankVoucherPre, setBankVoucherPre] = useState();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [openBox, setOpenBox] = useState(false);\r\n\r\n\r\n  const [purchasePre, setPurchasePre] = useState([\r\n    {\r\n      Form_Name: \"Purchase Request\",\r\n      Type: \"\",\r\n      Prefix: \"\",\r\n      Start_Number: \"\",\r\n      Suffix: \"\"\r\n    },\r\n    {\r\n      Form_Name: \"Purchase Order\",\r\n      Type: \"\",\r\n      Prefix: \"\",\r\n      Start_Number: \"\",\r\n      Suffix: \"\"\r\n    },\r\n    {\r\n      Form_Name: \"RFQ\",\r\n      Type: \"\",\r\n      Prefix: \"\",\r\n      Start_Number: \"\",\r\n      Suffix: \"\"\r\n    },\r\n    {\r\n      Form_Name: \"Supplier Quotation\",\r\n      Type: \"\",\r\n      Prefix: \"\",\r\n      Start_Number: \"\",\r\n      Suffix: \"\"\r\n    },\r\n    {\r\n      Form_Name: \"Purchase Catalogue\",\r\n      Type: \"\",\r\n      Prefix: \"\",\r\n      Start_Number: \"\",\r\n      Suffix: \"\"\r\n    },\r\n    {\r\n      Form_Name: \"Supplier\",\r\n      Type: \"\",\r\n      Prefix: \"\",\r\n      Start_Number: \"\",\r\n      Suffix: \"\"\r\n    },\r\n    {\r\n      Form_Name: \"PO Amendment\",\r\n      Type: \"\",\r\n      Prefix: \"\",\r\n      Start_Number: \"\",\r\n      Suffix: \"\"\r\n    },\r\n    {\r\n      Form_Name: \"PO Cancellation\",\r\n      Type: \"\",\r\n      Prefix: \"\",\r\n      Start_Number: \"\",\r\n      Suffix: \"\"\r\n    },\r\n  ]);\r\n\r\n  const [inventoryPre, setInventoryPre] = useState([\r\n    {\r\n      Form_Name: \"Material Request\",\r\n      Type: \"\",\r\n      Prefix: \"\",\r\n      Start_Number: \"\",\r\n      Suffix: \"\"\r\n    },\r\n    {\r\n      Form_Name: \"Material Receipt\",\r\n      Type: \"\",\r\n      Prefix: \"\",\r\n      Start_Number: \"\",\r\n      Suffix: \"\"\r\n    },\r\n    {\r\n      Form_Name: \"Material Issue\",\r\n      Type: \"\",\r\n      Prefix: \"\",\r\n      Start_Number: \"\",\r\n      Suffix: \"\"\r\n    },\r\n    {\r\n      Form_Name: \"Material Return\",\r\n      Type: \"\",\r\n      Prefix: \"\",\r\n      Start_Number: \"\",\r\n      Suffix: \"\"\r\n    },\r\n    {\r\n      Form_Name: \"Material Transfer\",\r\n      Type: \"\",\r\n      Prefix: \"\",\r\n      Start_Number: \"\",\r\n      Suffix: \"\"\r\n    },\r\n    {\r\n      Form_Name: \"Store Adjustment\",\r\n      Type: \"\",\r\n      Prefix: \"\",\r\n      Start_Number: \"\",\r\n      Suffix: \"\"\r\n    },\r\n    {\r\n      Form_Name: \"Store\",\r\n      Type: \"\",\r\n      Prefix: \"\",\r\n      Start_Number: \"\",\r\n      Suffix: \"\"\r\n    },\r\n  ]);\r\n\r\n  const [budgetPre, setBudgetPre] = useState([\r\n    {\r\n      Form_Name: \"BU Budget\",\r\n      Type: \"\",\r\n      Prefix: \"\",\r\n      Start_Number: \"\",\r\n      Suffix: \"\"\r\n    },\r\n    {\r\n      Form_Name: \"Consolidated Budget\",\r\n      Type: \"\",\r\n      Prefix: \"\",\r\n      Start_Number: \"\",\r\n      Suffix: \"\"\r\n    },\r\n    {\r\n      Form_Name: \"Central Budget\",\r\n      Type: \"\",\r\n      Prefix: \"\",\r\n      Start_Number: \"\",\r\n      Suffix: \"\"\r\n    },\r\n    {\r\n      Form_Name: \"Costcenter Budget\",\r\n      Type: \"\",\r\n      Prefix: \"\",\r\n      Start_Number: \"\",\r\n      Suffix: \"\"\r\n    },\r\n    {\r\n      Form_Name: \"Expense Budget\",\r\n      Type: \"\",\r\n      Prefix: \"\",\r\n      Start_Number: \"\",\r\n      Suffix: \"\"\r\n    },\r\n  ]);\r\n\r\n  const [salesPre, setSalesPre] = useState([\r\n    {\r\n      Form_Name: \"Service Person\",\r\n      Type: \"\",\r\n      Prefix: \"\",\r\n      Start_Number: \"\",\r\n      Suffix: \"\"\r\n    },\r\n    {\r\n      Form_Name: \"Refund\",\r\n      Type: \"\",\r\n      Prefix: \"\",\r\n      Start_Number: \"\",\r\n      Suffix: \"\"\r\n    },\r\n  ]);\r\n\r\n  const [hrPre, setHrPre] = useState([\r\n    {\r\n      Form_Name: \"Employee\",\r\n      Type: \"\",\r\n      Prefix: \"\",\r\n      Start_Number: \"\",\r\n      Suffix: \"\"\r\n    },\r\n    {\r\n      Form_Name: \"Department\",\r\n      Type: \"\",\r\n      Prefix: \"\",\r\n      Start_Number: \"\",\r\n      Suffix: \"\"\r\n    },\r\n    {\r\n      Form_Name: \"Designation\",\r\n      Type: \"\",\r\n      Prefix: \"\",\r\n      Start_Number: \"\",\r\n      Suffix: \"\"\r\n    },\r\n    {\r\n      Form_Name: \"Cadre Level\",\r\n      Type: \"\",\r\n      Prefix: \"\",\r\n      Start_Number: \"\",\r\n      Suffix: \"\"\r\n    },\r\n    {\r\n      Form_Name: \"Territory\",\r\n      Type: \"\",\r\n      Prefix: \"\",\r\n      Start_Number: \"\",\r\n      Suffix: \"\"\r\n    },\r\n    {\r\n      Form_Name: \"Leave Type\",\r\n      Type: \"\",\r\n      Prefix: \"\",\r\n      Start_Number: \"\",\r\n      Suffix: \"\"\r\n    },\r\n    {\r\n      Form_Name: \"Timesheet\",\r\n      Type: \"\",\r\n      Prefix: \"\",\r\n      Start_Number: \"\",\r\n      Suffix: \"\"\r\n    },\r\n  ]);\r\n\r\n  const [servicePre, setServicePre] = useState([\r\n    {\r\n      Form_Name: \"Service Category\",\r\n      Type: \"\",\r\n      Prefix: \"\",\r\n      Start_Number: \"\",\r\n      Suffix: \"\"\r\n    },\r\n    {\r\n      Form_Name: \"Service\",\r\n      Type: \"\",\r\n      Prefix: \"\",\r\n      Start_Number: \"\",\r\n      Suffix: \"\"\r\n    },\r\n    {\r\n      Form_Name: \"Service Catelogue\",\r\n      Type: \"\",\r\n      Prefix: \"\",\r\n      Start_Number: \"\",\r\n      Suffix: \"\"\r\n    },\r\n    {\r\n      Form_Name: \"Roaster\",\r\n      Type: \"\",\r\n      Prefix: \"\",\r\n      Start_Number: \"\",\r\n      Suffix: \"\"\r\n    },\r\n  ]);\r\n\r\n  const [crmPre, setCrmPre] = useState([\r\n    {\r\n      Form_Name: \"Lead Contact\",\r\n      Type: \"\",\r\n      Prefix: \"\",\r\n      Start_Number: \"\",\r\n      Suffix: \"\"\r\n    },\r\n    {\r\n      Form_Name: \"Ticket\",\r\n      Type: \"\",\r\n      Prefix: \"\",\r\n      Start_Number: \"\",\r\n      Suffix: \"\"\r\n    },\r\n    {\r\n      Form_Name: \"Promotion\",\r\n      Type: \"\",\r\n      Prefix: \"\",\r\n      Start_Number: \"\",\r\n      Suffix: \"\"\r\n    },\r\n    {\r\n      Form_Name: \"Plan\",\r\n      Type: \"\",\r\n      Prefix: \"\",\r\n      Start_Number: \"\",\r\n      Suffix: \"\"\r\n    },\r\n  ]);\r\n\r\n  const [financePre, setFinancePre] = useState([\r\n    {\r\n      Form_Name: \"Chart of Account\",\r\n      Type: \"\",\r\n      Prefix: \"\",\r\n      Start_Number: \"\",\r\n      Suffix: \"\"\r\n    },\r\n    {\r\n      Form_Name: \"Voucher\",\r\n      Type: \"\",\r\n      Prefix: \"\",\r\n      Start_Number: \"\",\r\n      Suffix: \"\"\r\n    },\r\n    {\r\n      Form_Name: \"Contra Voucher\",\r\n      Type: \"\",\r\n      Prefix: \"\",\r\n      Start_Number: \"\",\r\n      Suffix: \"\"\r\n    },\r\n    {\r\n      Form_Name: \"Journal\",\r\n      Type: \"\",\r\n      Prefix: \"\",\r\n      Start_Number: \"\",\r\n      Suffix: \"\"\r\n    },\r\n  ]);\r\n\r\n\r\n  const partnerId = parseInt(localStorage.getItem(\"PartnerId\"));\r\n  const companyId = parseInt(localStorage.getItem(\"OrganizationId\"));\r\n\r\n  const getUser = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n\r\n      const response = await settingServices.getTransactionSeriesSettings(companyId, header);\r\n      const res = response;\r\n\r\n      var Id = res?.Created_By;\r\n      if (Id === 0) {\r\n        setShowCreatePage(true);\r\n        setShowUpdatePage(false);\r\n      } else {\r\n        setShowCreatePage(false);\r\n        setShowUpdatePage(true);\r\n\r\n\r\n        setId(res?.Transactionalseries_Id);\r\n        setTransactionSeriesName(res?.Transaction_Name);\r\n        setBankVoucherPre(res?.Bank_Vouchar);\r\n        setCashVoucherPre(res?.Cash_Vouchar);\r\n        setCreditNotePre(res?.Credit_Note);\r\n        setJournalVoucherPre(res?.Journal_vouchar);\r\n\r\n        setPurchasePre([\r\n          res?.Purchase_Request,\r\n          res?.Purchase_Order,\r\n          res?.RFQ,\r\n          res?.Supplier_Quotation,\r\n          res?.Purchase_Catalouge,\r\n          res?.Supplier,\r\n          res?.PO_Amendment,\r\n          res?.PO_Cancelation\r\n        ]);\r\n\r\n        setInventoryPre([\r\n          res?.Material_Request,\r\n          res?.Material_Receipt,\r\n          res?.Material_Issue,\r\n          res?.Material_Returns,\r\n          res?.Material_Transfer,\r\n          res?.Store_Adjustment,\r\n          res?.Stores\r\n        ]);\r\n\r\n        setBudgetPre([\r\n          res?.BU_Budget,\r\n          res?.Consolidated_Budget,\r\n          res?.Central_Budget,\r\n          res?.Costcenter_Budget,\r\n          res?.Expense_Budget\r\n        ]);\r\n\r\n        setSalesPre([\r\n          res?.Sales_Persion,\r\n          res?.Refund\r\n        ]);\r\n\r\n        setHrPre([\r\n          res?.Employee,\r\n          res?.Department,\r\n          res?.Designation,\r\n          res?.Cadre_Level,\r\n          res?.Teritory,\r\n          res?.Leave_Type,\r\n          res?.TimeSheet\r\n        ]);\r\n\r\n        setServicePre([\r\n          res?.Service_Category,\r\n          res?.Service,\r\n          res?.Service_Catelouge,\r\n          res?.Roaster\r\n        ]);\r\n\r\n        setCrmPre([\r\n          res?.Lead_Contact,\r\n          res?.Ticket,\r\n          res?.Promo,\r\n          res?.Plan\r\n        ]);\r\n\r\n        setFinancePre([\r\n          res?.Chartof_Account,\r\n          res?.Cash_Vouchar,\r\n          res?.Contra_Vouchar,\r\n          res?.Journal_vouchar\r\n        ]);\r\n      }\r\n\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      console.error(error);\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Call getUser when the component mounts\r\n  useEffect(() => {\r\n    getUser();\r\n  }, []);\r\n\r\n\r\n  const handleSubmitTransactionSeries = (e) => {\r\n    e.preventDefault();\r\n    if (!id) {\r\n      var payload = {\r\n        Transaction_Name: transactionSeriesName,\r\n        Credit_Note: creditNotePre,\r\n        Journal_vouchar: financePre[3],\r\n        Cash_Vouchar: financePre[1],\r\n        Bank_Vouchar: bankVoucherPre,\r\n        Purchase_Request: purchasePre[0],\r\n        Purchase_Order: purchasePre[1],\r\n        RFQ: purchasePre[2],\r\n        Supplier_Quotation: purchasePre[3],\r\n        Purchase_Catalouge: purchasePre[4],\r\n        Supplier: purchasePre[5],\r\n        PO_Amendment: purchasePre[6],\r\n        PO_Cancelation: purchasePre[7],\r\n        Material_Request: inventoryPre[0],\r\n        Material_Receipt: inventoryPre[1],\r\n        Material_Issue: inventoryPre[2],\r\n        Material_Returns: inventoryPre[3],\r\n        Material_Transfer: inventoryPre[4],\r\n        Store_Adjustment: inventoryPre[5],\r\n        Stores: inventoryPre[6],\r\n        BU_Budget: budgetPre[0],\r\n        Consolidated_Budget: budgetPre[1],\r\n        Central_Budget: budgetPre[2],\r\n        Costcenter_Budget: budgetPre[3],\r\n        Expense_Budget: budgetPre[4],\r\n        Sales_Persion: salesPre[0],\r\n        Refund: salesPre[1],\r\n        Employee: hrPre[0],\r\n        Department: hrPre[1],\r\n        Designation: hrPre[2],\r\n        Cadre_Level: hrPre[3],\r\n        Teritory: hrPre[4],\r\n        Leave_Type: hrPre[5],\r\n        TimeSheet: hrPre[6],\r\n        Service_Category: servicePre[0],\r\n        Service: servicePre[1],\r\n        Service_Catelouge: servicePre[2],\r\n        Roaster: servicePre[4],\r\n        Lead_Contact: crmPre[0],\r\n        Ticket: crmPre[1],\r\n        Promo: crmPre[2],\r\n        Plan: crmPre[3],\r\n        Chartof_Account: financePre[0],\r\n        Contra_Vouchar: financePre[2],\r\n        Partner_Id: parseInt(localStorage.getItem(\"PartnerId\")),\r\n        Company_Id: parseInt(localStorage.getItem(\"OrganizationId\")),\r\n        Created_By: parseInt(localStorage.getItem(\"UserId\")),\r\n        Updated_By: parseInt(localStorage.getItem(\"UserId\")),\r\n      };\r\n      axios\r\n        .post(`${BASE_URL}/Erpapp/TransactionalseriesCRUD/`, payload, header)\r\n        .then((res) => {\r\n          if (res?.data?.id && res?.status === 201) {\r\n            toast.success(\"Created Successfully\");\r\n            setId(res?.data?.Transactionalseries_Id)\r\n          } else {\r\n            toast.error(\"Enter valid Transaction Series details\");\r\n          }\r\n\r\n        }).catch((error) => {\r\n          console.log(error);\r\n          toast.error(error.message);\r\n        });\r\n    } else {\r\n      var payload = {\r\n        Transactionalseries_Id: id,\r\n        Transaction_Name: transactionSeriesName,\r\n        Credit_Note: creditNotePre,\r\n        Journal_vouchar: financePre[3],\r\n        Cash_Vouchar: financePre[1],\r\n        Bank_Vouchar: bankVoucherPre,\r\n        Purchase_Request: purchasePre[0],\r\n        Purchase_Order: purchasePre[1],\r\n        RFQ: purchasePre[2],\r\n        Supplier_Quotation: purchasePre[3],\r\n        Purchase_Catalouge: purchasePre[4],\r\n        Supplier: purchasePre[5],\r\n        PO_Amendment: purchasePre[6],\r\n        PO_Cancelation: purchasePre[7],\r\n        Material_Request: inventoryPre[0],\r\n        Material_Receipt: inventoryPre[1],\r\n        Material_Issue: inventoryPre[2],\r\n        Material_Returns: inventoryPre[3],\r\n        Material_Transfer: inventoryPre[4],\r\n        Store_Adjustment: inventoryPre[5],\r\n        Stores: inventoryPre[6],\r\n        BU_Budget: budgetPre[0],\r\n        Consolidated_Budget: budgetPre[1],\r\n        Central_Budget: budgetPre[2],\r\n        Costcenter_Budget: budgetPre[3],\r\n        Expense_Budget: budgetPre[4],\r\n        Sales_Persion: salesPre[0],\r\n        Refund: salesPre[1],\r\n        Employee: hrPre[0],\r\n        Department: hrPre[1],\r\n        Designation: hrPre[2],\r\n        Cadre_Level: hrPre[3],\r\n        Teritory: hrPre[4],\r\n        Leave_Type: hrPre[5],\r\n        TimeSheet: hrPre[6],\r\n        Service_Category: servicePre[0],\r\n        Service: servicePre[1],\r\n        Service_Catelouge: servicePre[2],\r\n        Roaster: servicePre[3],\r\n        Lead_Contact: crmPre[0],\r\n        Ticket: crmPre[1],\r\n        Promo: crmPre[2],\r\n        Plan: crmPre[3],\r\n        Chartof_Account: financePre[0],\r\n        Contra_Vouchar: financePre[2],\r\n        Partner_Id: parseInt(localStorage.getItem(\"PartnerId\")),\r\n        Company_Id: parseInt(localStorage.getItem(\"OrganizationId\")),\r\n        Created_By: parseInt(localStorage.getItem(\"UserId\")),\r\n        Updated_By: parseInt(localStorage.getItem(\"UserId\")),\r\n      };\r\n      axios\r\n        .put(`${BASE_URL}/Erpapp/TransactionalseriesCRUD/`, payload, header)\r\n        .then((res) => {\r\n          if (res?.status === 200 && res?.data?.id) {\r\n            toast.success(\"Updated Successfully\");\r\n          } else {\r\n            toast.error(\"Enter valid Transaction Series details\");\r\n          }\r\n        }).catch((error) => {\r\n          console.log(error);\r\n          toast.error(error.message)\r\n        });\r\n    }\r\n  };\r\n\r\n\r\n  const [expanded1, setExpanded1] = useState(false);\r\n  const [expanded2, setExpanded2] = useState(false);\r\n  const [expanded3, setExpanded3] = useState(false);\r\n  const [expanded4, setExpanded4] = useState(false);\r\n  const [expanded5, setExpanded5] = useState(false);\r\n  const [expanded6, setExpanded6] = useState(false);\r\n  const [expanded7, setExpanded7] = useState(false);\r\n  const [expanded8, setExpanded8] = useState(false);\r\n\r\n\r\n  const handleExpand1 = () => {\r\n    setExpanded1(!expanded1)\r\n    setExpanded2(false)\r\n    setExpanded3(false)\r\n    setExpanded4(false)\r\n    setExpanded5(false)\r\n    setExpanded6(false)\r\n    setExpanded7(false)\r\n    setExpanded8(false)\r\n  }\r\n  const handleExpand2 = () => {\r\n    setExpanded1(false)\r\n    setExpanded2(!expanded2)\r\n    setExpanded3(false)\r\n    setExpanded4(false)\r\n    setExpanded5(false)\r\n    setExpanded6(false)\r\n    setExpanded7(false)\r\n    setExpanded8(false)\r\n  }\r\n  const handleExpand3 = () => {\r\n    setExpanded1(false)\r\n    setExpanded2(false)\r\n    setExpanded3(!expanded3)\r\n    setExpanded4(false)\r\n    setExpanded5(false)\r\n    setExpanded6(false)\r\n    setExpanded7(false)\r\n    setExpanded8(false)\r\n  }\r\n  const handleExpand4 = () => {\r\n    setExpanded1(false)\r\n    setExpanded2(false)\r\n    setExpanded3(false)\r\n    setExpanded4(!expanded4)\r\n    setExpanded5(false)\r\n    setExpanded6(false)\r\n    setExpanded7(false)\r\n    setExpanded8(false)\r\n  }\r\n  const handleExpand5 = () => {\r\n    setExpanded1(false)\r\n    setExpanded2(false)\r\n    setExpanded3(false)\r\n    setExpanded4(false)\r\n    setExpanded5(!expanded5)\r\n    setExpanded6(false)\r\n    setExpanded7(false)\r\n    setExpanded8(false)\r\n  }\r\n  const handleExpand6 = () => {\r\n    setExpanded1(false)\r\n    setExpanded2(false)\r\n    setExpanded3(false)\r\n    setExpanded4(false)\r\n    setExpanded5(false)\r\n    setExpanded6(!expanded6)\r\n    setExpanded7(false)\r\n    setExpanded8(false)\r\n  }\r\n  const handleExpand7 = () => {\r\n    setExpanded1(false)\r\n    setExpanded2(false)\r\n    setExpanded3(false)\r\n    setExpanded4(false)\r\n    setExpanded5(false)\r\n    setExpanded6(false)\r\n    setExpanded7(!expanded7)\r\n    setExpanded8(false)\r\n  }\r\n  const handleExpand8 = () => {\r\n    setExpanded1(false)\r\n    setExpanded2(false)\r\n    setExpanded3(false)\r\n    setExpanded4(false)\r\n    setExpanded5(false)\r\n    setExpanded6(false)\r\n    setExpanded7(false)\r\n    setExpanded8(!expanded8)\r\n  }\r\n\r\n  const handleChangePurchase = (e, index, fieldName, newValue) => {\r\n\r\n    const newArray = [\r\n      ...purchasePre,\r\n      ...inventoryPre,\r\n      ...budgetPre,\r\n      ...salesPre,\r\n      ...hrPre,\r\n      ...servicePre,\r\n      ...crmPre,\r\n      ...financePre.flat(item => item.Prefix)\r\n    ];\r\n    console.log(\"newArray\", newArray)\r\n\r\n    const updatedPurchase = purchasePre?.map((purchase, i) => {\r\n      if (i !== index) {\r\n        return purchase;\r\n      }\r\n\r\n      const prefixExists = newArray?.some((item, i) => i !== index && item.Prefix === e.target.value);\r\n\r\n      if (prefixExists) {\r\n        toast.error(`Prefix \"${e.target.value}\" is already Used.`)\r\n        return { ...purchase, [e.target.name]: \"\" };\r\n      }\r\n\r\n\r\n      if (fieldName === \"Type\") {\r\n        if (newValue === \"Automatic\") {\r\n          return { ...purchase, [fieldName]: newValue };\r\n        } else {\r\n          return { ...purchase, [fieldName]: newValue, [\"Prefix\"]: \"\", [\"Start_Number\"]: \"\", [\"Suffix\"]: \"\" };\r\n        }\r\n      }\r\n\r\n      return { ...purchase, [e.target.name]: e.target.value };\r\n    });\r\n\r\n    setPurchasePre(updatedPurchase);\r\n    console.log(\"updatedPurchase\", updatedPurchase);\r\n  };\r\n\r\n  const handleChangeInventory = (e, index, fieldName, newValue) => {\r\n    const newArray = [\r\n      ...purchasePre,\r\n      ...inventoryPre,\r\n      ...budgetPre,\r\n      ...salesPre,\r\n      ...hrPre,\r\n      ...servicePre,\r\n      ...crmPre,\r\n      ...financePre.flat(item => item.Prefix)\r\n    ];\r\n    console.log(\"newArray\", newArray)\r\n    const updatedInventory = inventoryPre?.map((inventory, i) => {\r\n      if (i !== index) {\r\n        return inventory;\r\n      }\r\n      const prefixExists = newArray?.some((item, i) => i !== index && item.Prefix === e.target.value);\r\n\r\n      if (prefixExists) {\r\n        toast.error(`Prefix \"${e.target.value}\" is already Used.`)\r\n        return { ...inventory, [e.target.name]: \"\" };\r\n      }\r\n\r\n      if (fieldName === \"Type\") {\r\n        return { ...inventory, [fieldName]: newValue };\r\n      }\r\n\r\n      return { ...inventory, [e.target.name]: e.target.value };\r\n    });\r\n\r\n    setInventoryPre(updatedInventory);\r\n    console.log(\"updatedInventory\", updatedInventory);\r\n  }\r\n\r\n  const handleChangeBudget = (e, index, fieldName, newValue) => {\r\n    const newArray = [\r\n      ...purchasePre,\r\n      ...inventoryPre,\r\n      ...budgetPre,\r\n      ...salesPre,\r\n      ...hrPre,\r\n      ...servicePre,\r\n      ...crmPre,\r\n      ...financePre.flat(item => item.Prefix)\r\n    ];\r\n    console.log(\"newArray\", newArray)\r\n\r\n    const updatedBudget = budgetPre?.map((budget, i) => {\r\n      if (i !== index) {\r\n        return budget;\r\n      }\r\n      const prefixExists = newArray?.some((item, i) => i !== index && item.Prefix === e.target.value);\r\n\r\n      if (prefixExists) {\r\n        toast.error(`Prefix \"${e.target.value}\" is already Used.`)\r\n        return { ...budget, [e.target.name]: \"\" };\r\n      }\r\n\r\n      if (fieldName === \"Type\") {\r\n        return { ...budget, [fieldName]: newValue };\r\n      }\r\n\r\n      return { ...budget, [e.target.name]: e.target.value };\r\n    });\r\n\r\n    setBudgetPre(updatedBudget);\r\n    console.log(\"updatedBudget\", updatedBudget);\r\n  }\r\n\r\n  const handleChangeSales = (e, index, fieldName, newValue) => {\r\n    const newArray = [\r\n      ...purchasePre,\r\n      ...inventoryPre,\r\n      ...budgetPre,\r\n      ...salesPre,\r\n      ...hrPre,\r\n      ...servicePre,\r\n      ...crmPre,\r\n      ...financePre.flat(item => item.Prefix)\r\n    ];\r\n    console.log(\"newArray\", newArray)\r\n    const updatedSales = salesPre?.map((sale, i) => {\r\n      if (i !== index) {\r\n        return sale;\r\n      }\r\n\r\n      const prefixExists = newArray?.some((item, i) => i !== index && item.Prefix === e.target.value);\r\n\r\n      if (prefixExists) {\r\n        toast.error(`Prefix \"${e.target.value}\" is already Used.`)\r\n        return { ...sale, [e.target.name]: \"\" };\r\n      }\r\n\r\n      if (fieldName === \"Type\") {\r\n        return { ...sale, [fieldName]: newValue };\r\n      }\r\n\r\n      return { ...sale, [e.target.name]: e.target.value };\r\n    });\r\n\r\n    setSalesPre(updatedSales);\r\n    console.log(\"updatedSales\", updatedSales);\r\n  }\r\n\r\n  const handleChangeHR = (e, index, fieldName, newValue) => {\r\n    const newArray = [\r\n      ...purchasePre,\r\n      ...inventoryPre,\r\n      ...budgetPre,\r\n      ...salesPre,\r\n      ...hrPre,\r\n      ...servicePre,\r\n      ...crmPre,\r\n      ...financePre.flat(item => item.Prefix)\r\n    ];\r\n    console.log(\"newArray\", newArray)\r\n    const updatedHR = hrPre?.map((hr, i) => {\r\n      if (i !== index) {\r\n        return hr;\r\n      }\r\n      const prefixExists = newArray?.some((item, i) => i !== index && item.Prefix === e.target.value);\r\n\r\n      if (prefixExists) {\r\n        toast.error(`Prefix \"${e.target.value}\" is already Used.`)\r\n        return { ...hr, [e.target.name]: \"\" };\r\n      }\r\n\r\n      if (fieldName === \"Type\") {\r\n        return { ...hr, [fieldName]: newValue };\r\n      }\r\n\r\n      return { ...hr, [e.target.name]: e.target.value };\r\n    });\r\n\r\n    setHrPre(updatedHR);\r\n    console.log(\"updatedHR\", updatedHR);\r\n  }\r\n\r\n  const handleChangeService = (e, index, fieldName, newValue) => {\r\n    const newArray = [\r\n      ...purchasePre,\r\n      ...inventoryPre,\r\n      ...budgetPre,\r\n      ...salesPre,\r\n      ...hrPre,\r\n      ...servicePre,\r\n      ...crmPre,\r\n      ...financePre.flat(item => item.Prefix)\r\n    ];\r\n    console.log(\"newArray\", newArray)\r\n    const updatedService = servicePre?.map((service, i) => {\r\n      if (i !== index) {\r\n        return service;\r\n      }\r\n\r\n      const prefixExists = newArray?.some((item, i) => i !== index && item.Prefix === e.target.value);\r\n\r\n      if (prefixExists) {\r\n        toast.error(`Prefix \"${e.target.value}\" is already Used.`)\r\n        return { ...service, [e.target.name]: \"\" };\r\n      }\r\n      if (fieldName === \"Type\") {\r\n        return { ...service, [fieldName]: newValue };\r\n      }\r\n\r\n      return { ...service, [e.target.name]: e.target.value };\r\n    });\r\n\r\n    setServicePre(updatedService);\r\n    console.log(\"updatedService\", updatedService);\r\n  }\r\n\r\n  const handleChangeCRM = (e, index, fieldName, newValue) => {\r\n    const newArray = [\r\n      ...purchasePre,\r\n      ...inventoryPre,\r\n      ...budgetPre,\r\n      ...salesPre,\r\n      ...hrPre,\r\n      ...servicePre,\r\n      ...crmPre,\r\n      ...financePre.flat(item => item.Prefix)\r\n    ];\r\n    console.log(\"newArray\", newArray)\r\n    const updatedCRM = crmPre?.map((crm, i) => {\r\n      if (i !== index) {\r\n        return crm;\r\n      }\r\n      const prefixExists = newArray?.some((item, i) => i !== index && item.Prefix === e.target.value);\r\n\r\n      if (prefixExists) {\r\n        toast.error(`Prefix \"${e.target.value}\" is already Used.`)\r\n        return { ...crm, [e.target.name]: \"\" };\r\n      }\r\n      if (fieldName === \"Type\") {\r\n        return { ...crm, [fieldName]: newValue };\r\n      }\r\n\r\n      return { ...crm, [e.target.name]: e.target.value };\r\n    });\r\n\r\n    setCrmPre(updatedCRM);\r\n    console.log(\"updatedCRM\", updatedCRM);\r\n  }\r\n\r\n  const handleChangeFinance = (e, index, fieldName, newValue) => {\r\n    const newArray = [\r\n      ...purchasePre,\r\n      ...inventoryPre,\r\n      ...budgetPre,\r\n      ...salesPre,\r\n      ...hrPre,\r\n      ...servicePre,\r\n      ...crmPre,\r\n      ...financePre.flat(item => item.Prefix)\r\n    ];\r\n    console.log(\"newArray\", newArray)\r\n    const updatedFinance = financePre?.map((finance, i) => {\r\n      if (i !== index) {\r\n        return finance;\r\n      }\r\n      const prefixExists = newArray?.some((item, i) => i !== index && item.Prefix === e.target.value);\r\n\r\n      if (prefixExists) {\r\n        toast.error(`Prefix \"${e.target.value}\" is already Used.`)\r\n        return { ...finance, [e.target.name]: \"\" };\r\n      }\r\n\r\n      if (fieldName === \"Type\") {\r\n        return { ...finance, [fieldName]: newValue };\r\n      }\r\n\r\n      return { ...finance, [e.target.name]: e.target.value };\r\n    });\r\n\r\n    setFinancePre(updatedFinance);\r\n    console.log(\"updatedFinance\", updatedFinance);\r\n  }\r\n\r\n\r\n  const handleClick = () => {\r\n    setOpenBox(false);\r\n    setIsLoading(false);\r\n    getUser()\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchUserRolePermissions(token))\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <>\r\n      <JumboContentLayoutMain>\r\n        <Setting />\r\n        <Typography variant=\"h3\" sx={{ fontWeight: 600 }}>\r\n          Preferences\r\n        </Typography>\r\n        <Typography variant=\"h3\" sx={{ fontWeight: 500 }}>\r\n          Transaction Series\r\n        </Typography>\r\n\r\n        {isLoading ? (\r\n          <ERPCustomLoader />\r\n        ) : (\r\n          <form onSubmit={handleSubmitTransactionSeries}>\r\n            <Div sx={{ mt: 1, mb: 1, textAlign: \"right\" }}>\r\n              <ButtonGroup\r\n                aria-label=\"split button\"\r\n                disabled={Array.isArray(userRolePermissions) && (userRolePermissions || [])?.includes(id ? 242 : 241) ? false : true}\r\n                sx={{ mr: 2 }}\r\n              >\r\n                <Button className=\"plus-button\" type=\"submit\">\r\n                  {id ? \"Update\" : \"Save\"}\r\n                </Button>\r\n                <Button variant=\"contained\" className=\"icon-button\" sx={{ p: 1 }}>\r\n                  <FaSave size={18} />\r\n                </Button>\r\n              </ButtonGroup>\r\n\r\n              <ButtonGroup\r\n                aria-label=\"split button\"\r\n                onClick={() => {\r\n                  setOpenBox(true)\r\n                }}\r\n              >\r\n                <Button className=\"plus-button\">Cancel</Button>\r\n                <Button variant=\"contained\" className=\"icon-button\" sx={{ p: 1 }}>\r\n                  <TiCancel size={24} />\r\n                </Button>\r\n              </ButtonGroup>\r\n            </Div>\r\n\r\n            {/* Purchase */}\r\n            <Card\r\n              sx={{\r\n                mt: 1,\r\n                borderRadius: \"5px\",\r\n                boxShadow: \"0px 0px 10px 0px #d6dedf\"\r\n              }}\r\n            >\r\n              <Accordion expanded={expanded1}>\r\n                <AccordionSummary\r\n                  expandIcon={\r\n                    expanded1 ? (\r\n                      <RiArrowDownSFill size={24} />\r\n                    ) : (\r\n                      <MdPlayArrow />\r\n                    )\r\n                  }\r\n                  onClick={() => handleExpand1()}\r\n                  aria-controls=\"panel1bh-content\"\r\n                  id=\"panel1bh-header\"\r\n                  sx={{\r\n                    px: 3,\r\n                    flexDirection: \"row\",\r\n\r\n                    \"& .MuiAccordionSummary-content\": {\r\n                      alignItems: \"center\",\r\n\r\n                      \"&.Mui-expanded\": {\r\n                        margin: \"12px 0\",\r\n                      },\r\n                    },\r\n                    \".MuiAccordionSummary-expandIconWrapper\": {\r\n                      borderRadius: 1,\r\n                      border: 1,\r\n                      color: \"text.secondary\",\r\n                      borderColor: \"divider\",\r\n                      transform: \"none\",\r\n                      height: 28,\r\n                      width: 28,\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      mr: 1,\r\n\r\n                      \"&.Mui-expanded\": {\r\n                        transform: \"none\",\r\n                        color: \"primary.main\",\r\n                        borderColor: \"primary.main\",\r\n                      },\r\n\r\n                      \"& svg\": {\r\n                        fontSize: \"1rem\",\r\n                      },\r\n                    },\r\n                  }}\r\n                >\r\n                  <Div\r\n                    sx={{\r\n                      width: { xs: \"auto\", lg: \"26%\" },\r\n                      flexShrink: 0,\r\n                      px: 1,\r\n                      flex: { xs: \"1\", lg: \"0 1 auto\" },\r\n                    }}\r\n                  >\r\n                    <Typography\r\n                      variant={\"h3\"}\r\n                      mt={0.5}\r\n                      sx={{ color: expanded1 ? \"black\" : \"#00bfff\", fontWeight: 600 }}\r\n                    >\r\n                      Purchase\r\n                    </Typography>\r\n                  </Div>\r\n                </AccordionSummary>\r\n\r\n                <AccordionDetails\r\n                  sx={{\r\n                    borderTop: 1,\r\n                    borderColor: \"divider\",\r\n                    p: (theme) => theme.spacing(2, 2, 2, 2),\r\n                  }}\r\n                >\r\n                  <Grid container columns={12} rowGap={1} sx={{ p: 2 }}>\r\n                    {/* Title */}\r\n                    <Grid container columnSpacing={2} sx={{ mb: 2 }}\r\n                      style={{\r\n                        color: \"#00bfff\",\r\n                        backgroundColor: \"#FFF\",\r\n                        padding: \"10px 0px\",\r\n                        boxShadow: \"0px 1px 1px 0px #EBE6EC\",\r\n                        position: \"sticky\",\r\n                        top: -10,\r\n                        zIndex: 100,\r\n                      }}\r\n                    >\r\n                      <Grid item xl={3}>\r\n                        <Typography sx={{ fontSize: \"15px\", fontWeight: 500 }}>\r\n                          Transaction Name\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item xl={2}>\r\n                        <Typography sx={{ fontSize: \"15px\", fontWeight: 500 }}>\r\n                          Automatic / Manual\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item xl={2}>\r\n                        <Typography sx={{ fontSize: \"15px\", fontWeight: 500 }}>\r\n                          Prefix\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item xl={3}>\r\n                        <Typography sx={{ fontSize: \"15px\", fontWeight: 500 }}>\r\n                          Start Number\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item xl={2}>\r\n                        <Typography sx={{ fontSize: \"15px\", fontWeight: 500 }}>\r\n                          Suffix\r\n                        </Typography>\r\n                      </Grid>\r\n                    </Grid>\r\n\r\n                    {/* Purchase */}\r\n                    {purchasePre?.map((item, index) => {\r\n                      return (\r\n                        <Grid container columnSpacing={2}>\r\n                          <Grid item xl={3}>\r\n                            <Typography variant=\"h4\">\r\n                              {item?.Form_Name}\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xl={2}>\r\n                            <Autocomplete\r\n                              className=\"col-12 search-select\"\r\n                              name=\"Type\"\r\n                              options={seriesType}\r\n                              getOptionLabel={(option) => option || \"\"}\r\n                              value={item?.Type || null}\r\n                              onChange={(e, newValue) => handleChangePurchase(e, index, \"Type\", newValue)}\r\n                              isOptionEqualToValue={(option, value) =>\r\n                                option === value || value === \"\"\r\n                              }\r\n                              renderInput={(params) => <TextField {...params} placeholder=\"Choose (A / M)\" />}\r\n                            />\r\n                          </Grid>\r\n                          <Grid item xl={2}>\r\n                            <TextField\r\n                              className=\"input-box col-12\"\r\n                              name=\"Prefix\"\r\n                              placeholder=\"Prefix\"\r\n                              disabled={item?.Type === \"Automatic\" ? false : true}\r\n                              value={item?.Prefix}\r\n                              onChange={(e) => handleChangePurchase(e, index)}\r\n                              inputProps={{\r\n                                maxLength: 2,\r\n                                title: 'Please enter a maximum of 2 digits',\r\n                                style: { textTransform: \"uppercase\" }\r\n                              }}\r\n\r\n                            />\r\n                          </Grid>\r\n                          <Grid item xl={3}>\r\n                            <TextField\r\n                              className=\"input-box col-12\"\r\n                              name=\"Start_Number\"\r\n                              placeholder=\"Start Number\"\r\n                              disabled={item?.Type === \"Automatic\" ? false : true}\r\n                              value={item?.Start_Number}\r\n                              onChange={(e) => handleChangePurchase(e, index)}\r\n                              inputProps={{\r\n                                maxLength: 3,\r\n                                title: 'Please enter a maximum of 3 digits',\r\n\r\n                              }}\r\n                            />\r\n                          </Grid>\r\n                          <Grid item xl={2}>\r\n                            <TextField\r\n                              className=\"input-box col-12\"\r\n                              name=\"Suffix\"\r\n                              placeholder=\"Suffix\"\r\n                              disabled={item?.Type === \"Automatic\" ? false : true}\r\n                              value={item?.Suffix}\r\n                              onChange={(e) => handleChangePurchase(e, index)}\r\n                              inputProps={{\r\n                                maxLength: 5,\r\n                                title: 'Please enter a maximum of 5 digits',\r\n                              }}\r\n                            />\r\n                          </Grid>\r\n                        </Grid>\r\n                      )\r\n                    })\r\n                    }\r\n                  </Grid>\r\n                </AccordionDetails>\r\n              </Accordion>\r\n            </Card>\r\n\r\n            {/* Inventory */}\r\n            <Card\r\n              sx={{\r\n                mt: 1,\r\n                borderRadius: \"5px\",\r\n                boxShadow: \"0px 0px 10px 0px #d6dedf\"\r\n              }}\r\n            >\r\n              <Accordion expanded={expanded2}>\r\n                <AccordionSummary\r\n                  expandIcon={\r\n                    expanded2 ? (\r\n                      <RiArrowDownSFill size={24} />\r\n                    ) : (\r\n                      <MdPlayArrow />\r\n                    )\r\n                  }\r\n                  onClick={() => handleExpand2()}\r\n                  aria-controls=\"panel1bh-content\"\r\n                  id=\"panel1bh-header\"\r\n                  sx={{\r\n                    px: 3,\r\n                    flexDirection: \"row\",\r\n\r\n                    \"& .MuiAccordionSummary-content\": {\r\n                      alignItems: \"center\",\r\n\r\n                      \"&.Mui-expanded\": {\r\n                        margin: \"12px 0\",\r\n                      },\r\n                    },\r\n                    \".MuiAccordionSummary-expandIconWrapper\": {\r\n                      borderRadius: 1,\r\n                      border: 1,\r\n                      color: \"text.secondary\",\r\n                      borderColor: \"divider\",\r\n                      transform: \"none\",\r\n                      height: 28,\r\n                      width: 28,\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      mr: 1,\r\n\r\n                      \"&.Mui-expanded\": {\r\n                        transform: \"none\",\r\n                        color: \"primary.main\",\r\n                        borderColor: \"primary.main\",\r\n                      },\r\n\r\n                      \"& svg\": {\r\n                        fontSize: \"1rem\",\r\n                      },\r\n                    },\r\n                  }}\r\n                >\r\n                  <Div\r\n                    sx={{\r\n                      width: { xs: \"auto\", lg: \"26%\" },\r\n                      flexShrink: 0,\r\n                      px: 1,\r\n                      flex: { xs: \"1\", lg: \"0 1 auto\" },\r\n                    }}\r\n                  >\r\n                    <Typography\r\n                      variant={\"h3\"}\r\n                      mt={0.5}\r\n                      sx={{ color: expanded2 ? \"black\" : \"#00bfff\", fontWeight: 600 }}\r\n                    >\r\n                      Inventory\r\n                    </Typography>\r\n                  </Div>\r\n                </AccordionSummary>\r\n\r\n                <AccordionDetails\r\n                  sx={{\r\n                    borderTop: 1,\r\n                    borderColor: \"divider\",\r\n                    p: (theme) => theme.spacing(2, 2, 2, 2),\r\n                  }}\r\n                >\r\n                  <Grid container columns={12} rowGap={1} sx={{ p: 2 }}>\r\n\r\n                    {/* Title */}\r\n                    <Grid container columnSpacing={2} sx={{ mb: 2 }}\r\n                      style={{\r\n                        color: \"#00bfff\",\r\n                        backgroundColor: \"#FFF\",\r\n                        padding: \"10px 0px\",\r\n                        boxShadow: \"0px 1px 1px 0px #EBE6EC\",\r\n                        position: \"sticky\",\r\n                        top: -10,\r\n                        zIndex: 100,\r\n                      }}\r\n                    >\r\n                      <Grid item xl={3}>\r\n                        <Typography sx={{ fontSize: \"15px\", fontWeight: 500 }}>\r\n                          Transaction Name\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item xl={2}>\r\n                        <Typography sx={{ fontSize: \"15px\", fontWeight: 500 }}>\r\n                          Automatic / Manual\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item xl={2}>\r\n                        <Typography sx={{ fontSize: \"15px\", fontWeight: 500 }}>\r\n                          Prefix\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item xl={3}>\r\n                        <Typography sx={{ fontSize: \"15px\", fontWeight: 500 }}>\r\n                          Start Number\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item xl={2}>\r\n                        <Typography sx={{ fontSize: \"15px\", fontWeight: 500 }}>\r\n                          Suffix\r\n                        </Typography>\r\n                      </Grid>\r\n                    </Grid>\r\n\r\n\r\n                    {/* inventory */}\r\n                    {inventoryPre?.map((item, index) => {\r\n                      return (\r\n                        <Grid container columnSpacing={2}>\r\n                          <Grid item xl={3}>\r\n                            <Typography variant=\"h4\">\r\n                              {item?.Form_Name}\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xl={2}>\r\n                            <Autocomplete\r\n                              className=\"col-12 search-select\"\r\n                              name=\"Type\"\r\n                              options={seriesType}\r\n                              getOptionLabel={(option) => option || \"\"}\r\n                              value={item?.Type || null}\r\n                              onChange={(e, newValue) => handleChangeInventory(e, index, \"Type\", newValue)}\r\n                              isOptionEqualToValue={(option, value) =>\r\n                                option === value || value === \"\"\r\n                              }\r\n                              renderInput={(params) => <TextField {...params} placeholder=\"Choose (A / M)\" />}\r\n                            />\r\n                          </Grid>\r\n                          <Grid item xl={2}>\r\n                            <TextField\r\n                              className=\"input-box col-12\"\r\n                              name=\"Prefix\"\r\n                              placeholder=\"Prefix\"\r\n                              disabled={item?.Type === \"Automatic\" ? false : true}\r\n                              value={item?.Prefix}\r\n                              onChange={(e) => handleChangeInventory(e, index)}\r\n                              inputProps={{\r\n                                maxLength: 2,\r\n                                title: 'Please enter a maximum of 2 digits',\r\n                                style: { textTransform: \"uppercase\" }\r\n                              }}\r\n                            />\r\n                          </Grid>\r\n                          <Grid item xl={3}>\r\n                            <TextField\r\n                              className=\"input-box col-12\"\r\n                              name=\"Start_Number\"\r\n                              placeholder=\"Start Number\"\r\n                              disabled={item?.Type === \"Automatic\" ? false : true}\r\n                              value={item?.Start_Number}\r\n                              onChange={(e) => handleChangeInventory(e, index)}\r\n                              inputProps={{\r\n                                maxLength: 3,\r\n                                title: 'Please enter a maximum of 3 digits',\r\n                              }}\r\n                            />\r\n                          </Grid>\r\n                          <Grid item xl={2}>\r\n                            <TextField\r\n                              className=\"input-box col-12\"\r\n                              name=\"Suffix\"\r\n                              placeholder=\"Suffix\"\r\n                              disabled={item?.Type === \"Automatic\" ? false : true}\r\n                              value={item?.Suffix}\r\n                              onChange={(e) => handleChangeInventory(e, index)}\r\n                              inputProps={{\r\n                                maxLength: 4,\r\n                                title: 'Please enter a maximum of 4 digits',\r\n                              }}\r\n                            />\r\n                          </Grid>\r\n                        </Grid>\r\n                      )\r\n                    })}\r\n\r\n                  </Grid>\r\n                </AccordionDetails>\r\n              </Accordion>\r\n            </Card>\r\n\r\n            {/* Budget */}\r\n            <Card\r\n              sx={{\r\n                mt: 1,\r\n                borderRadius: \"5px\",\r\n                boxShadow: \"0px 0px 10px 0px #d6dedf\"\r\n              }}\r\n            >\r\n              <Accordion expanded={expanded3}>\r\n                <AccordionSummary\r\n                  expandIcon={\r\n                    expanded3 ? (\r\n                      <RiArrowDownSFill size={24} />\r\n                    ) : (\r\n                      <MdPlayArrow />\r\n                    )\r\n                  }\r\n                  onClick={() => handleExpand3()}\r\n                  aria-controls=\"panel1bh-content\"\r\n                  id=\"panel1bh-header\"\r\n                  sx={{\r\n                    px: 3,\r\n                    flexDirection: \"row\",\r\n\r\n                    \"& .MuiAccordionSummary-content\": {\r\n                      alignItems: \"center\",\r\n\r\n                      \"&.Mui-expanded\": {\r\n                        margin: \"12px 0\",\r\n                      },\r\n                    },\r\n                    \".MuiAccordionSummary-expandIconWrapper\": {\r\n                      borderRadius: 1,\r\n                      border: 1,\r\n                      color: \"text.secondary\",\r\n                      borderColor: \"divider\",\r\n                      transform: \"none\",\r\n                      height: 28,\r\n                      width: 28,\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      mr: 1,\r\n\r\n                      \"&.Mui-expanded\": {\r\n                        transform: \"none\",\r\n                        color: \"primary.main\",\r\n                        borderColor: \"primary.main\",\r\n                      },\r\n\r\n                      \"& svg\": {\r\n                        fontSize: \"1rem\",\r\n                      },\r\n                    },\r\n                  }}\r\n                >\r\n                  <Div\r\n                    sx={{\r\n                      width: { xs: \"auto\", lg: \"26%\" },\r\n                      flexShrink: 0,\r\n                      px: 1,\r\n                      flex: { xs: \"1\", lg: \"0 1 auto\" },\r\n                    }}\r\n                  >\r\n                    <Typography\r\n                      variant={\"h3\"}\r\n                      mt={0.5}\r\n                      sx={{ color: expanded3 ? \"black\" : \"#00bfff\", fontWeight: 600 }}\r\n                    >\r\n                      Budget\r\n                    </Typography>\r\n                  </Div>\r\n                </AccordionSummary>\r\n\r\n                <AccordionDetails\r\n                  sx={{\r\n                    borderTop: 1,\r\n                    borderColor: \"divider\",\r\n                    p: (theme) => theme.spacing(2, 2, 2, 2),\r\n                  }}\r\n                >\r\n                  <Grid container columns={12} rowGap={1} sx={{ p: 2 }}>\r\n\r\n                    {/* Title */}\r\n                    <Grid container columnSpacing={2} sx={{ mb: 2 }}\r\n                      style={{\r\n                        color: \"#00bfff\",\r\n                        backgroundColor: \"#FFF\",\r\n                        padding: \"10px 0px\",\r\n                        boxShadow: \"0px 1px 1px 0px #EBE6EC\",\r\n                        position: \"sticky\",\r\n                        top: -10,\r\n                        zIndex: 100,\r\n                      }}\r\n                    >\r\n                      <Grid item xl={3}>\r\n                        <Typography sx={{ fontSize: \"15px\", fontWeight: 500 }}>\r\n                          Transaction Name\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item xl={2}>\r\n                        <Typography sx={{ fontSize: \"15px\", fontWeight: 500 }}>\r\n                          Automatic / Manual\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item xl={2}>\r\n                        <Typography sx={{ fontSize: \"15px\", fontWeight: 500 }}>\r\n                          Prefix\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item xl={3}>\r\n                        <Typography sx={{ fontSize: \"15px\", fontWeight: 500 }}>\r\n                          Start Number\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item xl={2}>\r\n                        <Typography sx={{ fontSize: \"15px\", fontWeight: 500 }}>\r\n                          Suffix\r\n                        </Typography>\r\n                      </Grid>\r\n                    </Grid>\r\n\r\n\r\n                    {/* Budget */}\r\n                    {budgetPre?.map((item, index) => {\r\n                      return (\r\n                        <Grid container columnSpacing={2}>\r\n                          <Grid item xl={3}>\r\n                            <Typography variant=\"h4\">\r\n                              {item?.Form_Name}\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xl={2}>\r\n                            <Autocomplete\r\n                              className=\"col-12 search-select\"\r\n                              name=\"Type\"\r\n                              options={seriesType}\r\n                              getOptionLabel={(option) => option || \"\"}\r\n                              value={item?.Type || null}\r\n                              onChange={(e, newValue) => handleChangeBudget(e, index, \"Type\", newValue)}\r\n                              isOptionEqualToValue={(option, value) =>\r\n                                option === value || value === \"\"\r\n                              }\r\n                              renderInput={(params) => <TextField {...params} placeholder=\"Choose (A / M)\" />}\r\n                            />\r\n                          </Grid>\r\n                          <Grid item xl={2}>\r\n                            <TextField\r\n                              className=\"input-box col-12\"\r\n                              name=\"Prefix\"\r\n                              placeholder=\"Prefix\"\r\n                              disabled={item?.Type === \"Automatic\" ? false : true}\r\n                              value={item?.Prefix}\r\n                              onChange={(e) => handleChangeBudget(e, index)}\r\n                              inputProps={{\r\n                                maxLength: 3,\r\n                                title: 'Please enter a maximum of 3 digits',\r\n                              }}\r\n                            />\r\n                          </Grid>\r\n                          <Grid item xl={3}>\r\n                            <TextField\r\n                              className=\"input-box col-12\"\r\n                              name=\"Start_Number\"\r\n                              placeholder=\"Start Number\"\r\n                              disabled={item?.Type === \"Automatic\" ? false : true}\r\n                              value={item?.Start_Number}\r\n                              onChange={(e) => handleChangeBudget(e, index)}\r\n                              inputProps={{\r\n                                maxLength: 3,\r\n                                title: 'Please enter a maximum of 3 digits',\r\n                              }}\r\n                            />\r\n                          </Grid>\r\n                          <Grid item xl={2}>\r\n                            <TextField\r\n                              className=\"input-box col-12\"\r\n                              name=\"Suffix\"\r\n                              placeholder=\"Suffix\"\r\n                              disabled={item?.Type === \"Automatic\" ? false : true}\r\n                              value={item?.Suffix}\r\n                              onChange={(e) => handleChangeBudget(e, index)}\r\n                              inputProps={{\r\n                                maxLength: 4,\r\n                                title: 'Please enter a maximum of 4 digits',\r\n                              }}\r\n                            />\r\n                          </Grid>\r\n                        </Grid>\r\n                      )\r\n                    })}\r\n                  </Grid>\r\n                </AccordionDetails>\r\n              </Accordion>\r\n            </Card>\r\n\r\n            {/* Sales */}\r\n            <Card\r\n              sx={{\r\n                mt: 1,\r\n                borderRadius: \"5px\",\r\n                boxShadow: \"0px 0px 10px 0px #d6dedf\"\r\n              }}\r\n            >\r\n              <Accordion expanded={expanded4}>\r\n                <AccordionSummary\r\n                  expandIcon={\r\n                    expanded4 ? (\r\n                      <RiArrowDownSFill size={24} />\r\n                    ) : (\r\n                      <MdPlayArrow />\r\n                    )\r\n                  }\r\n                  onClick={() => handleExpand4()}\r\n                  aria-controls=\"panel1bh-content\"\r\n                  id=\"panel1bh-header\"\r\n                  sx={{\r\n                    px: 3,\r\n                    flexDirection: \"row\",\r\n\r\n                    \"& .MuiAccordionSummary-content\": {\r\n                      alignItems: \"center\",\r\n\r\n                      \"&.Mui-expanded\": {\r\n                        margin: \"12px 0\",\r\n                      },\r\n                    },\r\n                    \".MuiAccordionSummary-expandIconWrapper\": {\r\n                      borderRadius: 1,\r\n                      border: 1,\r\n                      color: \"text.secondary\",\r\n                      borderColor: \"divider\",\r\n                      transform: \"none\",\r\n                      height: 28,\r\n                      width: 28,\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      mr: 1,\r\n\r\n                      \"&.Mui-expanded\": {\r\n                        transform: \"none\",\r\n                        color: \"primary.main\",\r\n                        borderColor: \"primary.main\",\r\n                      },\r\n\r\n                      \"& svg\": {\r\n                        fontSize: \"1rem\",\r\n                      },\r\n                    },\r\n                  }}\r\n                >\r\n                  <Div\r\n                    sx={{\r\n                      width: { xs: \"auto\", lg: \"26%\" },\r\n                      flexShrink: 0,\r\n                      px: 1,\r\n                      flex: { xs: \"1\", lg: \"0 1 auto\" },\r\n                    }}\r\n                  >\r\n                    <Typography\r\n                      variant={\"h3\"}\r\n                      mt={0.5}\r\n                      sx={{ color: expanded4 ? \"black\" : \"#00bfff\", fontWeight: 600 }}\r\n                    >\r\n                      Sales\r\n                    </Typography>\r\n                  </Div>\r\n                </AccordionSummary>\r\n\r\n                <AccordionDetails\r\n                  sx={{\r\n                    borderTop: 1,\r\n                    borderColor: \"divider\",\r\n                    p: (theme) => theme.spacing(2, 2, 2, 2),\r\n                  }}\r\n                >\r\n                  <Grid container columns={12} rowGap={1} sx={{ p: 2 }}>\r\n\r\n                    {/* Title */}\r\n                    <Grid container columnSpacing={2} sx={{ mb: 2 }}\r\n                      style={{\r\n                        color: \"#00bfff\",\r\n                        backgroundColor: \"#FFF\",\r\n                        padding: \"10px 0px\",\r\n                        boxShadow: \"0px 1px 1px 0px #EBE6EC\",\r\n                        position: \"sticky\",\r\n                        top: -10,\r\n                        zIndex: 100,\r\n                      }}\r\n                    >\r\n                      <Grid item xl={3}>\r\n                        <Typography sx={{ fontSize: \"15px\", fontWeight: 500 }}>\r\n                          Transaction Name\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item xl={2}>\r\n                        <Typography sx={{ fontSize: \"15px\", fontWeight: 500 }}>\r\n                          Automatic / Manual\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item xl={2}>\r\n                        <Typography sx={{ fontSize: \"15px\", fontWeight: 500 }}>\r\n                          Prefix\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item xl={3}>\r\n                        <Typography sx={{ fontSize: \"15px\", fontWeight: 500 }}>\r\n                          Start Number\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item xl={2}>\r\n                        <Typography sx={{ fontSize: \"15px\", fontWeight: 500 }}>\r\n                          Suffix\r\n                        </Typography>\r\n                      </Grid>\r\n                    </Grid>\r\n\r\n\r\n                    {/* Sales */}\r\n                    {salesPre?.map((item, index) => {\r\n                      return (\r\n                        <Grid container columnSpacing={2}>\r\n                          <Grid item xl={3}>\r\n                            <Typography variant=\"h4\">\r\n                              {item?.Form_Name}\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xl={2}>\r\n                            <Autocomplete\r\n                              className=\"col-12 search-select\"\r\n                              name=\"Type\"\r\n                              options={seriesType}\r\n                              getOptionLabel={(option) => option || \"\"}\r\n                              value={item?.Type || null}\r\n                              onChange={(e, newValue) => handleChangeSales(e, index, \"Type\", newValue)}\r\n                              isOptionEqualToValue={(option, value) =>\r\n                                option === value || value === \"\"\r\n                              }\r\n                              renderInput={(params) => <TextField {...params} placeholder=\"Choose (A / M)\" />}\r\n                            />\r\n                          </Grid>\r\n                          <Grid item xl={2}>\r\n                            <TextField\r\n                              className=\"input-box col-12\"\r\n                              name=\"Prefix\"\r\n                              placeholder=\"Prefix\"\r\n                              disabled={item?.Type === \"Automatic\" ? false : true}\r\n                              value={item?.Prefix}\r\n                              onChange={(e) => handleChangeSales(e, index)}\r\n                              inputProps={{\r\n                                maxLength: 3,\r\n                                title: 'Please enter a maximum of 3 digits',\r\n                              }}\r\n                            />\r\n                          </Grid>\r\n                          <Grid item xl={3}>\r\n                            <TextField\r\n                              className=\"input-box col-12\"\r\n                              name=\"Start_Number\"\r\n                              placeholder=\"Start Number\"\r\n                              disabled={item?.Type === \"Automatic\" ? false : true}\r\n                              value={item?.Start_Number}\r\n                              onChange={(e) => handleChangeSales(e, index)}\r\n                              inputProps={{\r\n                                maxLength: 3,\r\n                                title: 'Please enter a maximum of 3 digits',\r\n                              }}\r\n                            />\r\n                          </Grid>\r\n                          <Grid item xl={2}>\r\n                            <TextField\r\n                              className=\"input-box col-12\"\r\n                              name=\"Suffix\"\r\n                              placeholder=\"Suffix\"\r\n                              disabled={item?.Type === \"Automatic\" ? false : true}\r\n                              value={item?.Suffix}\r\n                              onChange={(e) => handleChangeSales(e, index)}\r\n                              inputProps={{\r\n                                maxLength: 4,\r\n                                title: 'Please enter a maximum of 4 digits',\r\n                              }}\r\n                            />\r\n                          </Grid>\r\n                        </Grid>\r\n                      )\r\n                    })}\r\n                  </Grid>\r\n                </AccordionDetails>\r\n              </Accordion>\r\n            </Card>\r\n\r\n            {/* HR */}\r\n            <Card\r\n              sx={{\r\n                mt: 1,\r\n                borderRadius: \"5px\",\r\n                boxShadow: \"0px 0px 10px 0px #d6dedf\"\r\n              }}\r\n            >\r\n              <Accordion expanded={expanded5}>\r\n                <AccordionSummary\r\n                  expandIcon={\r\n                    expanded5 ? (\r\n                      <RiArrowDownSFill size={24} />\r\n                    ) : (\r\n                      <MdPlayArrow />\r\n                    )\r\n                  }\r\n                  onClick={() => handleExpand5()}\r\n                  aria-controls=\"panel1bh-content\"\r\n                  id=\"panel1bh-header\"\r\n                  sx={{\r\n                    px: 3,\r\n                    flexDirection: \"row\",\r\n\r\n                    \"& .MuiAccordionSummary-content\": {\r\n                      alignItems: \"center\",\r\n\r\n                      \"&.Mui-expanded\": {\r\n                        margin: \"12px 0\",\r\n                      },\r\n                    },\r\n                    \".MuiAccordionSummary-expandIconWrapper\": {\r\n                      borderRadius: 1,\r\n                      border: 1,\r\n                      color: \"text.secondary\",\r\n                      borderColor: \"divider\",\r\n                      transform: \"none\",\r\n                      height: 28,\r\n                      width: 28,\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      mr: 1,\r\n\r\n                      \"&.Mui-expanded\": {\r\n                        transform: \"none\",\r\n                        color: \"primary.main\",\r\n                        borderColor: \"primary.main\",\r\n                      },\r\n\r\n                      \"& svg\": {\r\n                        fontSize: \"1rem\",\r\n                      },\r\n                    },\r\n                  }}\r\n                >\r\n                  <Div\r\n                    sx={{\r\n                      width: { xs: \"auto\", lg: \"26%\" },\r\n                      flexShrink: 0,\r\n                      px: 1,\r\n                      flex: { xs: \"1\", lg: \"0 1 auto\" },\r\n                    }}\r\n                  >\r\n                    <Typography\r\n                      variant={\"h3\"}\r\n                      mt={0.5}\r\n                      sx={{ color: expanded5 ? \"black\" : \"#00bfff\", fontWeight: 600 }}\r\n                    >\r\n                      HR\r\n                    </Typography>\r\n                  </Div>\r\n                </AccordionSummary>\r\n\r\n                <AccordionDetails\r\n                  sx={{\r\n                    borderTop: 1,\r\n                    borderColor: \"divider\",\r\n                    p: (theme) => theme.spacing(2, 2, 2, 2),\r\n                  }}\r\n                >\r\n                  <Grid container columns={12} rowGap={1} sx={{ p: 2 }}>\r\n\r\n                    {/* Title */}\r\n                    <Grid container columnSpacing={2} sx={{ mb: 2 }}\r\n                      style={{\r\n                        color: \"#00bfff\",\r\n                        backgroundColor: \"#FFF\",\r\n                        padding: \"10px 0px\",\r\n                        boxShadow: \"0px 1px 1px 0px #EBE6EC\",\r\n                        position: \"sticky\",\r\n                        top: -10,\r\n                        zIndex: 100,\r\n                      }}\r\n                    >\r\n                      <Grid item xl={3}>\r\n                        <Typography sx={{ fontSize: \"15px\", fontWeight: 500 }}>\r\n                          Transaction Name\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item xl={2}>\r\n                        <Typography sx={{ fontSize: \"15px\", fontWeight: 500 }}>\r\n                          Automatic / Manual\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item xl={2}>\r\n                        <Typography sx={{ fontSize: \"15px\", fontWeight: 500 }}>\r\n                          Prefix\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item xl={3}>\r\n                        <Typography sx={{ fontSize: \"15px\", fontWeight: 500 }}>\r\n                          Start Number\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item xl={2}>\r\n                        <Typography sx={{ fontSize: \"15px\", fontWeight: 500 }}>\r\n                          Suffix\r\n                        </Typography>\r\n                      </Grid>\r\n                    </Grid>\r\n\r\n\r\n                    {/* HR */}\r\n                    {hrPre?.map((item, index) => {\r\n                      return (\r\n                        <Grid container columnSpacing={2}>\r\n                          <Grid item xl={3}>\r\n                            <Typography variant=\"h4\">\r\n                              {item?.Form_Name}\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xl={2}>\r\n                            <Autocomplete\r\n                              className=\"col-12 search-select\"\r\n                              name=\"Type\"\r\n                              options={seriesType}\r\n                              getOptionLabel={(option) => option || \"\"}\r\n                              value={item?.Type || null}\r\n                              onChange={(e, newValue) => handleChangeHR(e, index, \"Type\", newValue)}\r\n                              isOptionEqualToValue={(option, value) =>\r\n                                option === value || value === \"\"\r\n                              }\r\n                              renderInput={(params) => <TextField  {...params} placeholder=\"Choose (A / M)\" />}\r\n                            />\r\n                          </Grid>\r\n                          <Grid item xl={2}>\r\n                            <TextField\r\n                              className=\"input-box col-12\"\r\n                              name=\"Prefix\"\r\n                              placeholder=\"Prefix\"\r\n                              disabled={item?.Type === \"Automatic\" ? false : true}\r\n                              value={item?.Prefix}\r\n                              onChange={(e) => handleChangeHR(e, index)}\r\n                              inputProps={{\r\n                                maxLength: 3,\r\n                                title: 'Please enter a maximum of 3 digits',\r\n                              }}\r\n                            />\r\n                          </Grid>\r\n                          <Grid item xl={3}>\r\n                            <TextField\r\n                              className=\"input-box col-12\"\r\n                              name=\"Start_Number\"\r\n                              placeholder=\"Start Number\"\r\n                              disabled={item?.Type === \"Automatic\" ? false : true}\r\n                              value={item?.Start_Number}\r\n                              onChange={(e) => handleChangeHR(e, index)}\r\n                              inputProps={{\r\n                                maxLength: 3,\r\n                                title: 'Please enter a maximum of 3 digits',\r\n                              }}\r\n                            />\r\n                          </Grid>\r\n                          <Grid item xl={2}>\r\n                            <TextField\r\n                              className=\"input-box col-12\"\r\n                              name=\"Suffix\"\r\n                              placeholder=\"Suffix\"\r\n                              disabled={item?.Type === \"Automatic\" ? false : true}\r\n                              value={item?.Suffix}\r\n                              onChange={(e) => handleChangeHR(e, index)}\r\n                              inputProps={{\r\n                                maxLength: 4,\r\n                                title: 'Please enter a maximum of 4 digits',\r\n                              }}\r\n                            />\r\n                          </Grid>\r\n                        </Grid>\r\n                      )\r\n                    })}\r\n                  </Grid>\r\n                </AccordionDetails>\r\n              </Accordion>\r\n            </Card>\r\n\r\n            {/* Service */}\r\n            <Card\r\n              sx={{\r\n                mt: 1,\r\n                borderRadius: \"5px\",\r\n                boxShadow: \"0px 0px 10px 0px #d6dedf\"\r\n              }}\r\n            >\r\n              <Accordion expanded={expanded6}>\r\n                <AccordionSummary\r\n                  expandIcon={\r\n                    expanded6 ? (\r\n                      <RiArrowDownSFill size={24} />\r\n                    ) : (\r\n                      <MdPlayArrow />\r\n                    )\r\n                  }\r\n                  onClick={() => handleExpand6()}\r\n                  aria-controls=\"panel1bh-content\"\r\n                  id=\"panel1bh-header\"\r\n                  sx={{\r\n                    px: 3,\r\n                    flexDirection: \"row\",\r\n\r\n                    \"& .MuiAccordionSummary-content\": {\r\n                      alignItems: \"center\",\r\n\r\n                      \"&.Mui-expanded\": {\r\n                        margin: \"12px 0\",\r\n                      },\r\n                    },\r\n                    \".MuiAccordionSummary-expandIconWrapper\": {\r\n                      borderRadius: 1,\r\n                      border: 1,\r\n                      color: \"text.secondary\",\r\n                      borderColor: \"divider\",\r\n                      transform: \"none\",\r\n                      height: 28,\r\n                      width: 28,\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      mr: 1,\r\n\r\n                      \"&.Mui-expanded\": {\r\n                        transform: \"none\",\r\n                        color: \"primary.main\",\r\n                        borderColor: \"primary.main\",\r\n                      },\r\n\r\n                      \"& svg\": {\r\n                        fontSize: \"1rem\",\r\n                      },\r\n                    },\r\n                  }}\r\n                >\r\n                  <Div\r\n                    sx={{\r\n                      width: { xs: \"auto\", lg: \"26%\" },\r\n                      flexShrink: 0,\r\n                      px: 1,\r\n                      flex: { xs: \"1\", lg: \"0 1 auto\" },\r\n                    }}\r\n                  >\r\n                    <Typography\r\n                      variant={\"h3\"}\r\n                      mt={0.5}\r\n                      sx={{ color: expanded6 ? \"black\" : \"#00bfff\", fontWeight: 600 }}\r\n                    >\r\n                      Service\r\n                    </Typography>\r\n                  </Div>\r\n                </AccordionSummary>\r\n\r\n                <AccordionDetails\r\n                  sx={{\r\n                    borderTop: 1,\r\n                    borderColor: \"divider\",\r\n                    p: (theme) => theme.spacing(2, 2, 2, 2),\r\n                  }}\r\n                >\r\n                  <Grid container columns={12} rowGap={1} sx={{ p: 2 }}>\r\n                    {/* Title */}\r\n                    <Grid container columnSpacing={2} sx={{ mb: 2 }}\r\n                      style={{\r\n                        color: \"#00bfff\",\r\n                        backgroundColor: \"#FFF\",\r\n                        padding: \"10px 0px\",\r\n                        boxShadow: \"0px 1px 1px 0px #EBE6EC\",\r\n                        position: \"sticky\",\r\n                        top: -10,\r\n                        zIndex: 100,\r\n                      }}\r\n                    >\r\n                      <Grid item xl={3}>\r\n                        <Typography sx={{ fontSize: \"15px\", fontWeight: 500 }}>\r\n                          Transaction Name\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item xl={2}>\r\n                        <Typography sx={{ fontSize: \"15px\", fontWeight: 500 }}>\r\n                          Automatic / Manual\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item xl={2}>\r\n                        <Typography sx={{ fontSize: \"15px\", fontWeight: 500 }}>\r\n                          Prefix\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item xl={3}>\r\n                        <Typography sx={{ fontSize: \"15px\", fontWeight: 500 }}>\r\n                          Start Number\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item xl={2}>\r\n                        <Typography sx={{ fontSize: \"15px\", fontWeight: 500 }}>\r\n                          Suffix\r\n                        </Typography>\r\n                      </Grid>\r\n                    </Grid>\r\n\r\n                    {/* Service */}\r\n                    {servicePre?.map((item, index) => {\r\n                      return (\r\n                        <Grid container columnSpacing={2}>\r\n                          <Grid item xl={3}>\r\n                            <Typography variant=\"h4\">\r\n                              {item?.Form_Name}\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xl={2}>\r\n                            <Autocomplete\r\n                              className=\"col-12 search-select\"\r\n                              name=\"Type\"\r\n                              options={seriesType}\r\n                              getOptionLabel={(option) => option || \"\"}\r\n                              value={item?.Type || null}\r\n                              onChange={(e, newValue) => handleChangeService(e, index, \"Type\", newValue)}\r\n                              isOptionEqualToValue={(option, value) =>\r\n                                option === value || value === \"\"\r\n                              }\r\n                              renderInput={(params) => <TextField name=\"type\" {...params} placeholder=\"Choose (A / M)\" />}\r\n                            />\r\n                          </Grid>\r\n                          <Grid item xl={2}>\r\n                            <TextField\r\n                              className=\"input-box col-12\"\r\n                              name=\"Prefix\"\r\n                              placeholder=\"Prefix\"\r\n                              disabled={item?.Type === \"Automatic\" ? false : true}\r\n                              value={item?.Prefix}\r\n                              onChange={(e) => handleChangeService(e, index)}\r\n                              inputProps={{\r\n                                maxLength: 3,\r\n                                title: 'Please enter a maximum of 3 digits',\r\n                              }}\r\n                            />\r\n                          </Grid>\r\n                          <Grid item xl={3}>\r\n                            <TextField\r\n                              className=\"input-box col-12\"\r\n                              name=\"Start_Number\"\r\n                              placeholder=\"Start Number\"\r\n                              disabled={item?.Type === \"Automatic\" ? false : true}\r\n                              value={item?.Start_Number}\r\n                              onChange={(e) => handleChangeService(e, index)}\r\n                              inputProps={{\r\n                                maxLength: 3,\r\n                                title: 'Please enter a maximum of 3 digits',\r\n                              }}\r\n                            />\r\n                          </Grid>\r\n                          <Grid item xl={2}>\r\n                            <TextField\r\n                              className=\"input-box col-12\"\r\n                              name=\"Suffix\"\r\n                              placeholder=\"Suffix\"\r\n                              disabled={item?.Type === \"Automatic\" ? false : true}\r\n                              value={item?.Suffix}\r\n                              onChange={(e) => handleChangeService(e, index)}\r\n                              inputProps={{\r\n                                maxLength: 4,\r\n                                title: 'Please enter a maximum of 4 digits',\r\n                              }}\r\n                            />\r\n                          </Grid>\r\n                        </Grid>\r\n                      )\r\n                    })}\r\n                  </Grid>\r\n                </AccordionDetails>\r\n              </Accordion>\r\n            </Card>\r\n\r\n            {/* CRM */}\r\n            <Card\r\n              sx={{\r\n                mt: 1,\r\n                borderRadius: \"5px\",\r\n                boxShadow: \"0px 0px 10px 0px #d6dedf\"\r\n              }}\r\n            >\r\n              <Accordion expanded={expanded7}>\r\n                <AccordionSummary\r\n                  expandIcon={\r\n                    expanded7 ? (\r\n                      <RiArrowDownSFill size={24} />\r\n                    ) : (\r\n                      <MdPlayArrow />\r\n                    )\r\n                  }\r\n                  onClick={() => handleExpand7()}\r\n                  aria-controls=\"panel1bh-content\"\r\n                  id=\"panel1bh-header\"\r\n                  sx={{\r\n                    px: 3,\r\n                    flexDirection: \"row\",\r\n\r\n                    \"& .MuiAccordionSummary-content\": {\r\n                      alignItems: \"center\",\r\n\r\n                      \"&.Mui-expanded\": {\r\n                        margin: \"12px 0\",\r\n                      },\r\n                    },\r\n                    \".MuiAccordionSummary-expandIconWrapper\": {\r\n                      borderRadius: 1,\r\n                      border: 1,\r\n                      color: \"text.secondary\",\r\n                      borderColor: \"divider\",\r\n                      transform: \"none\",\r\n                      height: 28,\r\n                      width: 28,\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      mr: 1,\r\n\r\n                      \"&.Mui-expanded\": {\r\n                        transform: \"none\",\r\n                        color: \"primary.main\",\r\n                        borderColor: \"primary.main\",\r\n                      },\r\n\r\n                      \"& svg\": {\r\n                        fontSize: \"1rem\",\r\n                      },\r\n                    },\r\n                  }}\r\n                >\r\n                  <Div\r\n                    sx={{\r\n                      width: { xs: \"auto\", lg: \"26%\" },\r\n                      flexShrink: 0,\r\n                      px: 1,\r\n                      flex: { xs: \"1\", lg: \"0 1 auto\" },\r\n                    }}\r\n                  >\r\n                    <Typography\r\n                      variant={\"h3\"}\r\n                      mt={0.5}\r\n                      sx={{ color: expanded7 ? \"black\" : \"#00bfff\", fontWeight: 600 }}\r\n                    >\r\n                      CRM\r\n                    </Typography>\r\n                  </Div>\r\n                </AccordionSummary>\r\n\r\n                <AccordionDetails\r\n                  sx={{\r\n                    borderTop: 1,\r\n                    borderColor: \"divider\",\r\n                    p: (theme) => theme.spacing(2, 2, 2, 2),\r\n                  }}\r\n                >\r\n                  <Grid container columns={12} rowGap={1} sx={{ p: 2 }}>\r\n                    {/* Title */}\r\n                    <Grid container columnSpacing={2} sx={{ mb: 2 }}\r\n                      style={{\r\n                        color: \"#00bfff\",\r\n                        backgroundColor: \"#FFF\",\r\n                        padding: \"10px 0px\",\r\n                        boxShadow: \"0px 1px 1px 0px #EBE6EC\",\r\n                        position: \"sticky\",\r\n                        top: -10,\r\n                        zIndex: 100,\r\n                      }}\r\n                    >\r\n                      <Grid item xl={3}>\r\n                        <Typography sx={{ fontSize: \"15px\", fontWeight: 500 }}>\r\n                          Transaction Name\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item xl={2}>\r\n                        <Typography sx={{ fontSize: \"15px\", fontWeight: 500 }}>\r\n                          Automatic / Manual\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item xl={2}>\r\n                        <Typography sx={{ fontSize: \"15px\", fontWeight: 500 }}>\r\n                          Prefix\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item xl={3}>\r\n                        <Typography sx={{ fontSize: \"15px\", fontWeight: 500 }}>\r\n                          Start Number\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item xl={2}>\r\n                        <Typography sx={{ fontSize: \"15px\", fontWeight: 500 }}>\r\n                          Suffix\r\n                        </Typography>\r\n                      </Grid>\r\n                    </Grid>\r\n\r\n                    {/* CRM */}\r\n                    {crmPre?.map((item, index) => {\r\n                      return (\r\n                        <Grid container columnSpacing={2}>\r\n                          <Grid item xl={3}>\r\n                            <Typography variant=\"h4\">\r\n                              {item?.Form_Name}\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xl={2}>\r\n                            <Autocomplete\r\n                              className=\"col-12 search-select\"\r\n                              name=\"Type\"\r\n                              options={seriesType}\r\n                              getOptionLabel={(option) => option || \"\"}\r\n                              value={item?.Type || null}\r\n                              onChange={(e, newValue) => handleChangeCRM(e, index, \"Type\", newValue)}\r\n                              isOptionEqualToValue={(option, value) =>\r\n                                option === value || value === \"\"\r\n                              }\r\n                              renderInput={(params) => <TextField name=\"type\" {...params} placeholder=\"Choose (A / M)\" />}\r\n                            />\r\n                          </Grid>\r\n                          <Grid item xl={2}>\r\n                            <TextField\r\n                              className=\"input-box col-12\"\r\n                              name=\"Prefix\"\r\n                              placeholder=\"Prefix\"\r\n                              disabled={item?.Type === \"Automatic\" ? false : true}\r\n                              value={item?.Prefix}\r\n                              onChange={(e) => handleChangeCRM(e, index)}\r\n                              inputProps={{\r\n                                maxLength: 3,\r\n                                title: 'Please enter a maximum of 3 digits',\r\n                              }}\r\n                            />\r\n                          </Grid>\r\n                          <Grid item xl={3}>\r\n                            <TextField\r\n                              className=\"input-box col-12\"\r\n                              name=\"Start_Number\"\r\n                              placeholder=\"Start Number\"\r\n                              disabled={item?.Type === \"Automatic\" ? false : true}\r\n                              value={item?.Start_Number}\r\n                              onChange={(e) => handleChangeCRM(e, index)}\r\n                              inputProps={{\r\n                                maxLength: 3,\r\n                                title: 'Please enter a maximum of 3 digits',\r\n                              }}\r\n                            />\r\n                          </Grid>\r\n                          <Grid item xl={2}>\r\n                            <TextField\r\n                              className=\"input-box col-12\"\r\n                              name=\"Suffix\"\r\n                              placeholder=\"Suffix\"\r\n                              disabled={item?.Type === \"Automatic\" ? false : true}\r\n                              value={item?.Suffix}\r\n                              onChange={(e) => handleChangeCRM(e, index)}\r\n                              inputProps={{\r\n                                maxLength: 4,\r\n                                title: 'Please enter a maximum of 4 digits',\r\n                              }}\r\n                            />\r\n                          </Grid>\r\n                        </Grid>\r\n                      )\r\n                    })}\r\n                  </Grid>\r\n                </AccordionDetails>\r\n              </Accordion>\r\n            </Card>\r\n\r\n            {/* Finance */}\r\n            <Card\r\n              sx={{\r\n                mt: 1,\r\n                borderRadius: \"5px\",\r\n                boxShadow: \"0px 0px 10px 0px #d6dedf\"\r\n              }}\r\n            >\r\n              <Accordion expanded={expanded8}>\r\n                <AccordionSummary\r\n                  expandIcon={\r\n                    expanded8 ? (\r\n                      <RiArrowDownSFill size={24} />\r\n                    ) : (\r\n                      <MdPlayArrow />\r\n                    )\r\n                  }\r\n                  onClick={() => handleExpand8()}\r\n                  aria-controls=\"panel1bh-content\"\r\n                  id=\"panel1bh-header\"\r\n                  sx={{\r\n                    px: 3,\r\n                    flexDirection: \"row\",\r\n\r\n                    \"& .MuiAccordionSummary-content\": {\r\n                      alignItems: \"center\",\r\n\r\n                      \"&.Mui-expanded\": {\r\n                        margin: \"12px 0\",\r\n                      },\r\n                    },\r\n                    \".MuiAccordionSummary-expandIconWrapper\": {\r\n                      borderRadius: 1,\r\n                      border: 1,\r\n                      color: \"text.secondary\",\r\n                      borderColor: \"divider\",\r\n                      transform: \"none\",\r\n                      height: 28,\r\n                      width: 28,\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      mr: 1,\r\n\r\n                      \"&.Mui-expanded\": {\r\n                        transform: \"none\",\r\n                        color: \"primary.main\",\r\n                        borderColor: \"primary.main\",\r\n                      },\r\n\r\n                      \"& svg\": {\r\n                        fontSize: \"1rem\",\r\n                      },\r\n                    },\r\n                  }}\r\n                >\r\n                  <Div\r\n                    sx={{\r\n                      width: { xs: \"auto\", lg: \"26%\" },\r\n                      flexShrink: 0,\r\n                      px: 1,\r\n                      flex: { xs: \"1\", lg: \"0 1 auto\" },\r\n                    }}\r\n                  >\r\n                    <Typography\r\n                      variant={\"h3\"}\r\n                      mt={0.5}\r\n                      sx={{ color: expanded8 ? \"black\" : \"#00bfff\", fontWeight: 600 }}\r\n                    >\r\n                      Finance\r\n                    </Typography>\r\n                  </Div>\r\n                </AccordionSummary>\r\n\r\n                <AccordionDetails\r\n                  sx={{\r\n                    borderTop: 1,\r\n                    borderColor: \"divider\",\r\n                    p: (theme) => theme.spacing(2, 2, 2, 2),\r\n                  }}\r\n                >\r\n                  <Grid container columns={12} rowGap={1} sx={{ p: 2 }}>\r\n                    {/* Title */}\r\n                    <Grid container columnSpacing={2} sx={{ mb: 2 }}\r\n                      style={{\r\n                        color: \"#00bfff\",\r\n                        backgroundColor: \"#FFF\",\r\n                        padding: \"10px 0px\",\r\n                        boxShadow: \"0px 1px 1px 0px #EBE6EC\",\r\n                        position: \"sticky\",\r\n                        top: -10,\r\n                        zIndex: 100,\r\n                      }}\r\n                    >\r\n                      <Grid item xl={3}>\r\n                        <Typography sx={{ fontSize: \"15px\", fontWeight: 500 }}>\r\n                          Transaction Name\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item xl={2}>\r\n                        <Typography sx={{ fontSize: \"15px\", fontWeight: 500 }}>\r\n                          Automatic / Manual\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item xl={2}>\r\n                        <Typography sx={{ fontSize: \"15px\", fontWeight: 500 }}>\r\n                          Prefix\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item xl={3}>\r\n                        <Typography sx={{ fontSize: \"15px\", fontWeight: 500 }}>\r\n                          Start Number\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item xl={2}>\r\n                        <Typography sx={{ fontSize: \"15px\", fontWeight: 500 }}>\r\n                          Suffix\r\n                        </Typography>\r\n                      </Grid>\r\n                    </Grid>\r\n\r\n                    {/* Finance */}\r\n                    {financePre?.map((item, index) => {\r\n                      return (\r\n                        <Grid container columnSpacing={2}>\r\n                          <Grid item xl={3}>\r\n                            <Typography variant=\"h4\">\r\n                              {item?.Form_Name}\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xl={2}>\r\n                            <Autocomplete\r\n                              className=\"col-12 search-select\"\r\n                              name=\"Type\"\r\n                              options={seriesType}\r\n                              getOptionLabel={(option) => option || \"\"}\r\n                              value={item?.Type || null}\r\n                              onChange={(e, newValue) => handleChangeFinance(e, index, \"Type\", newValue)}\r\n                              isOptionEqualToValue={(option, value) =>\r\n                                option === value || value === \"\"\r\n                              }\r\n                              renderInput={(params) => <TextField name=\"type\" {...params} placeholder=\"Choose (A / M)\" />}\r\n                            />\r\n                          </Grid>\r\n                          <Grid item xl={2}>\r\n                            <TextField\r\n                              className=\"input-box col-12\"\r\n                              name=\"Prefix\"\r\n                              placeholder=\"Prefix\"\r\n                              disabled={item?.Type === \"Automatic\" ? false : true}\r\n                              value={item?.Prefix}\r\n                              onChange={(e) => handleChangeFinance(e, index)}\r\n                              inputProps={{\r\n                                maxLength: 3,\r\n                                title: 'Please enter a maximum of 3 digits',\r\n                              }}\r\n                            />\r\n                          </Grid>\r\n                          <Grid item xl={3}>\r\n                            <TextField\r\n                              className=\"input-box col-12\"\r\n                              name=\"Start_Number\"\r\n                              placeholder=\"Start Number\"\r\n                              disabled={item?.Type === \"Automatic\" ? false : true}\r\n                              value={item?.Start_Number}\r\n                              onChange={(e) => handleChangeFinance(e, index)}\r\n                              inputProps={{\r\n                                maxLength: 3,\r\n                                title: 'Please enter a maximum of 3 digits',\r\n                              }}\r\n                            />\r\n                          </Grid>\r\n                          <Grid item xl={2}>\r\n                            <TextField\r\n                              className=\"input-box col-12\"\r\n                              name=\"Suffix\"\r\n                              placeholder=\"Suffix\"\r\n                              disabled={item?.Type === \"Automatic\" ? false : true}\r\n                              value={item?.Suffix}\r\n                              onChange={(e) => handleChangeFinance(e, index)}\r\n                              inputProps={{\r\n                                maxLength: 4,\r\n                                title: 'Please enter a maximum of 4 digits',\r\n                              }}\r\n                            />\r\n                          </Grid>\r\n                        </Grid>\r\n                      )\r\n                    })}\r\n                  </Grid>\r\n                </AccordionDetails>\r\n              </Accordion>\r\n            </Card>\r\n          </form>\r\n        )}\r\n\r\n\r\n        <ErpConfirmDialogBox flag={openBox} setFlag={setOpenBox} handleClick={handleClick} content={\"You have done some changes. Onclicking the cancel button changed data will not be saved.\"} />\r\n\r\n      </JumboContentLayoutMain>\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TransactionSeries;\r\n","import React from 'react';\nimport { Typography } from '@mui/material';\nimport Div from \"@jumbo/shared/Div\";\nimport './Setting.css';\n\n\n\n\nconst Setting = () => {\n  return ( \n    <>\n      <Div>\n        {/* <img src='.\\images\\mainlogo-icon.jpg' width={30} height={30}></img> */}\n        <Typography variant='h1' sx={{ fontWeight: 800, mt: -2}}>Settings</Typography>\n      </Div>\n    </>\n    \n  )\n}\n\nexport default Setting;\n","import Div from '@jumbo/shared/Div'\r\nimport { Box, Button, ButtonGroup, Dialog, DialogActions, DialogContent, IconButton, Typography, styled, useMediaQuery, useTheme } from '@mui/material'\r\nimport React from 'react'\r\nimport { MdCheck, MdClear, MdClose, MdDelete } from 'react-icons/md'\r\nimport { TiCancel } from 'react-icons/ti'\r\n\r\n\r\nconst DialogBox = styled(Dialog)(({ theme }) => ({\r\n    '& .MuiDialog-paper': {\r\n        borderRadius: 5,\r\n        backgroundColor: theme.palette.background.default,\r\n        border: `1px solid ${theme.palette.divider}`,\r\n    },\r\n}));\r\n\r\nconst StyledIconButton = styled(IconButton)(({ theme }) => ({\r\n    color: theme.palette.error.main,\r\n    '&:hover': {\r\n        backgroundColor: theme.palette.error.light,\r\n        color: theme.palette.background.default,\r\n    },\r\n}));\r\n\r\nconst CustomTypography = styled(Typography)(({ theme }) => ({\r\n    padding: theme.spacing(0.5),\r\n    textAlign: 'left',\r\n    // backgroundColor: theme.palette.error.light,\r\n    // color: theme.palette.error.contrastText,\r\n    borderRadius: theme.shape.borderRadius,\r\n}));\r\n\r\n\r\nexport const ErpDeleteDialogBox = ({ flag, setFlag, handleClick, content, id, isMobile }) => {\r\n    const theme = useTheme();\r\n    const isMdUp = useMediaQuery(theme.breakpoints.down('md'));\r\n\r\n    return (\r\n        <DialogBox open={flag}\r\n            maxWidth={window.innerWidth <= 600 ? 'xs' : window.innerWidth <= 768 ? 'sm' : window.innerWidth <= 992 ? 'sm' : 'sm'}\r\n            fullWidth\r\n            onClose={() => setFlag(false)}\r\n        >\r\n            <DialogContent>\r\n                <Typography variant=\"h3\">\r\n                    {content}\r\n                    <span>&nbsp;</span>\r\n                    <span style={{ fontWeight: 700 }}>\r\n                        {\" \"}\r\n                        \"{id}\" ?\r\n                    </span>\r\n                </Typography>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                {isMobile ? isMobile : isMdUp ? (\r\n                    <>\r\n                        <Button variant=\"contained\" color={\"error\"} endIcon={<MdDelete />} onClick={handleClick}>\r\n                            Delete\r\n                        </Button>\r\n                        <Button variant=\"contained\" endIcon={<TiCancel />} onClick={() => setFlag(false)}>\r\n                            Cancel\r\n                        </Button>\r\n                    </>\r\n                ) :\r\n                    <Div className=\"buttons\">\r\n                        <ButtonGroup\r\n                            aria-label=\"split button\"\r\n                            onClick={handleClick}\r\n                            sx={{\r\n                                mt: { xs: 0.5, lg: 0 },\r\n                                mr: { xs: 0, md: 1 }\r\n                            }}\r\n                        >\r\n                            <Button className=\"plus-button\">\r\n                                Delete\r\n                            </Button>\r\n                            <Button variant=\"contained\" className=\"icon-button\">\r\n                                <MdDelete size={18} />\r\n                            </Button>\r\n                        </ButtonGroup>\r\n\r\n                        <ButtonGroup\r\n                            aria-label=\"split button\"\r\n                            onClick={() => setFlag(false)}\r\n                            sx={{\r\n                                mt: { xs: 0.5, lg: 0 },\r\n                                mr: { xs: 0, md: 1 }\r\n                            }}\r\n                        >\r\n                            <Button className=\"plus-button\">Cancel</Button>\r\n                            <Button variant=\"contained\" className=\"icon-button\">\r\n                                <TiCancel size={22} />\r\n                            </Button>\r\n                        </ButtonGroup>\r\n                    </Div>\r\n                }\r\n            </DialogActions>\r\n        </DialogBox>\r\n    )\r\n}\r\n\r\n\r\nexport const ErpConfirmDialogBox = ({ flag, setFlag, handleClick, content, isMobile }) => {\r\n    return (\r\n        <Dialog\r\n            open={flag}\r\n            maxWidth=\"sm\"\r\n            fullWidth\r\n        >\r\n            <DialogContent>\r\n                <Typography variant='h4'>\r\n                    {content}\r\n                </Typography>\r\n                <br />\r\n                <Typography variant='h4'>\r\n                    Do you want still to continue...\r\n                </Typography>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                {isMobile ? (\r\n                    <>\r\n                        <Button variant=\"contained\" color={\"error\"} endIcon={<MdCheck />} onClick={() => setFlag(false)} >\r\n                            Yes\r\n                        </Button>\r\n                        <Button variant=\"contained\" endIcon={<MdClear />} onClick={handleClick}>\r\n                            No\r\n                        </Button>\r\n                    </>\r\n                ) :\r\n                    <Div className=\"buttons\">\r\n                        <ButtonGroup\r\n                            aria-label=\"split button\"\r\n                            onClick={() => setFlag(false)}\r\n                            sx={{\r\n                                mt: { xs: 0.5, lg: 0 },\r\n                                mr: { xs: 0, md: 1 }\r\n                            }}\r\n                        >\r\n                            <Button className=\"plus-button\">\r\n                                Yes\r\n                            </Button>\r\n                            <Button variant=\"contained\" className=\"icon-button\">\r\n                                <MdCheck size={16} />\r\n                            </Button>\r\n                        </ButtonGroup>\r\n                        <ButtonGroup\r\n                            aria-label=\"split button\"\r\n                            onClick={handleClick}\r\n                            sx={{\r\n                                mt: { xs: 0.5, lg: 0 },\r\n                                mr: { xs: 0, md: 1 }\r\n                            }}\r\n                        >\r\n                            <Button className=\"plus-button\">\r\n                                No\r\n                            </Button>\r\n                            <Button variant=\"contained\" className=\"icon-button\">\r\n                                <MdClear size={16} />\r\n                            </Button>\r\n                        </ButtonGroup>\r\n                    </Div>\r\n                }\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\n\r\nexport const ErpStatusConfirmDialogBox = ({ flag, setFlag, handleClick, content, isMobile }) => {\r\n    return (\r\n        <Dialog\r\n            open={flag}\r\n            maxWidth=\"sm\"\r\n            fullWidth\r\n        >\r\n            <DialogContent>\r\n                <Typography variant='h4'>\r\n                    {content}\r\n                </Typography>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                {isMobile ? (\r\n                    <>\r\n                        <Button variant=\"contained\" color={\"error\"} endIcon={<MdCheck />} onClick={handleClick} >\r\n                            Yes\r\n                        </Button>\r\n                        <Button variant=\"contained\" endIcon={<MdClear />} onClick={() => setFlag(false)} >\r\n                            No\r\n                        </Button>\r\n                    </>\r\n                ) :\r\n                    <Div className=\"buttons\">\r\n                        <ButtonGroup\r\n                            aria-label=\"split button\"\r\n                            onClick={handleClick}\r\n                            sx={{\r\n                                mt: { xs: 0.5, lg: 0 },\r\n                                mr: { xs: 0, md: 1 }\r\n                            }}\r\n                        >\r\n                            <Button className=\"plus-button\">\r\n                                Yes\r\n                            </Button>\r\n                            <Button variant=\"contained\" className=\"icon-button\">\r\n                                <MdCheck size={16} />\r\n                            </Button>\r\n                        </ButtonGroup>\r\n                        <ButtonGroup\r\n                            aria-label=\"split button\"\r\n                            onClick={() => setFlag(false)}\r\n                            sx={{\r\n                                mt: { xs: 0.5, lg: 0 },\r\n                                mr: { xs: 0, md: 1 }\r\n                            }}\r\n                        >\r\n                            <Button className=\"plus-button\">\r\n                                No\r\n                            </Button>\r\n                            <Button variant=\"contained\" className=\"icon-button\">\r\n                                <MdClear size={16} />\r\n                            </Button>\r\n                        </ButtonGroup>\r\n                    </Div>\r\n                }\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\n\r\nexport const ErpAlertViewDialogBox = ({ flag, setFlag, isMobile }) => {\r\n    return (\r\n        <DialogBox\r\n            open={flag}\r\n            maxWidth=\"xs\"\r\n        // onClose={() => setFlag(false)} // Optional: You can enable this if you want the dialog to close on backdrop click.\r\n        >\r\n            <DialogContent>\r\n                <Div sx={{ p: 0, m: 0, mb: 2, display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\r\n                    <CustomTypography variant='h3'>\r\n                        Alert\r\n                    </CustomTypography>\r\n\r\n                    <StyledIconButton onClick={() => setFlag(false)} sx={{ p: 0.3 }}>\r\n                        <MdClose size={22} />\r\n                    </StyledIconButton>\r\n                </Div>\r\n                <Typography variant='h4' sx={{ color: 'text.secondary' }}>\r\n                    You don't have the permission to view this page.\r\n                </Typography>\r\n            </DialogContent>\r\n        </DialogBox>\r\n    )\r\n}\r\n\r\n\r\n"],"names":["React","getAccordionUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","AccordionRoot","styled","Paper","name","overridesResolver","props","styles","ownerState","concat","accordionClasses","region","root","square","rounded","disableGutters","gutters","_ref","theme","transition","duration","transitions","shortest","position","create","overflowAnchor","left","top","right","height","content","opacity","backgroundColor","vars","palette","divider","display","expanded","marginTop","marginBottom","disabled","action","disabledBackground","_ref2","variants","style","borderRadius","borderTopLeftRadius","shape","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","margin","inProps","ref","useDefaultProps","children","childrenProp","className","defaultExpanded","expandedProp","onChange","slots","slotProps","TransitionComponent","TransitionComponentProp","TransitionProps","TransitionPropsProp","other","_objectWithoutPropertiesLoose","setExpandedState","useControlled","controlled","default","state","handleChange","event","summary","toArray","contextValue","toggle","_extends","classes","composeClasses","useUtilityClasses","backwardCompatibleSlots","backwardCompatibleSlotProps","TransitionSlot","transitionProps","useSlot","elementType","Collapse","externalForwardedProps","_jsxs","clsx","_jsx","AccordionContext","Provider","value","in","timeout","id","role","getAccordionSummaryUtilityClass","AccordionSummaryRoot","ButtonBase","minHeight","padding","spacing","accordionSummaryClasses","focusVisible","focus","disabledOpacity","cursor","AccordionSummaryContent","flexGrow","AccordionSummaryExpandIconWrapper","expandIconWrapper","_ref3","color","active","transform","expandIcon","focusVisibleClassName","onClick","focusRipple","disableRipple","component","getAccordionDetailsUtilityClass","AccordionDetailsRoot","seriesType","TransactionSeries","token","localStorage","getItem","header","headers","Authorization","Accept","dispatch","useDispatch","userRolePermissions","formPermissions","modulePermissions","useSelector","selectedUserRolePermissions","showCreatePage","setShowCreatePage","useState","showUpdatePage","setShowUpdatePage","setId","transactionSeriesName","setTransactionSeriesName","creditNotePre","setCreditNotePre","journalVoucherPre","setJournalVoucherPre","cashVoucherPre","setCashVoucherPre","bankVoucherPre","setBankVoucherPre","isLoading","setIsLoading","openBox","setOpenBox","purchasePre","setPurchasePre","Form_Name","Type","Prefix","Start_Number","Suffix","inventoryPre","setInventoryPre","budgetPre","setBudgetPre","salesPre","setSalesPre","hrPre","setHrPre","servicePre","setServicePre","crmPre","setCrmPre","financePre","setFinancePre","companyId","parseInt","getUser","async","res","settingServices","getTransactionSeriesSettings","Created_By","Transactionalseries_Id","Transaction_Name","Bank_Vouchar","Cash_Vouchar","Credit_Note","Journal_vouchar","Purchase_Request","Purchase_Order","RFQ","Supplier_Quotation","Purchase_Catalouge","Supplier","PO_Amendment","PO_Cancelation","Material_Request","Material_Receipt","Material_Issue","Material_Returns","Material_Transfer","Store_Adjustment","Stores","BU_Budget","Consolidated_Budget","Central_Budget","Costcenter_Budget","Expense_Budget","Sales_Persion","Refund","Employee","Department","Designation","Cadre_Level","Teritory","Leave_Type","TimeSheet","Service_Category","Service","Service_Catelouge","Roaster","Lead_Contact","Ticket","Promo","Plan","Chartof_Account","Contra_Vouchar","error","console","useEffect","expanded1","setExpanded1","expanded2","setExpanded2","expanded3","setExpanded3","expanded4","setExpanded4","expanded5","setExpanded5","expanded6","setExpanded6","expanded7","setExpanded7","expanded8","setExpanded8","handleChangePurchase","e","index","fieldName","newValue","newArray","flat","item","log","updatedPurchase","map","purchase","i","prefixExists","some","target","toast","_objectSpread","handleChangeInventory","updatedInventory","inventory","handleChangeBudget","updatedBudget","budget","handleChangeSales","updatedSales","sale","handleChangeHR","updatedHR","hr","handleChangeService","updatedService","service","handleChangeCRM","updatedCRM","crm","handleChangeFinance","updatedFinance","finance","fetchUserRolePermissions","_Fragment","JumboContentLayoutMain","Setting","Typography","variant","sx","fontWeight","ERPCustomLoader","onSubmit","preventDefault","payload","Partner_Id","Company_Id","Updated_By","axios","BASE_URL","then","_res$data3","status","data","success","catch","message","_res$data","_res$data2","Div","mt","mb","textAlign","ButtonGroup","Array","isArray","includes","mr","Button","type","p","FaSave","size","TiCancel","Card","boxShadow","Accordion","AccordionSummary","RiArrowDownSFill","MdPlayArrow","px","flexDirection","alignItems","border","borderColor","width","justifyContent","fontSize","xs","lg","flexShrink","flex","AccordionDetails","borderTop","Grid","container","columns","rowGap","columnSpacing","zIndex","xl","Autocomplete","options","getOptionLabel","option","isOptionEqualToValue","renderInput","params","TextField","placeholder","inputProps","maxLength","title","textTransform","ErpConfirmDialogBox","flag","setFlag","handleClick","DialogBox","Dialog","background","StyledIconButton","IconButton","main","light","CustomTypography","ErpDeleteDialogBox","_ref4","isMobile","useTheme","isMdUp","useMediaQuery","breakpoints","down","open","maxWidth","window","innerWidth","fullWidth","onClose","DialogContent","DialogActions","endIcon","MdDelete","md","_ref5","MdCheck","MdClear","ErpAlertViewDialogBox","_ref7","m","MdClose"],"sourceRoot":""}