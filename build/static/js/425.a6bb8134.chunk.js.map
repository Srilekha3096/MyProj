{"version":3,"file":"static/js/425.a6bb8134.chunk.js","mappings":"mLAIA,MAuDA,EAvDoBA,IAAuB,IAAtB,aAAEC,GAAcD,EACnC,MAAOE,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,GACrCC,GAAYC,EAAAA,EAAAA,GAAc,KAAM,MAEhCC,EAAeA,KACfC,OAAOC,QAAUR,EACnBE,GAAa,GAEbA,GAAa,EACf,EAkBF,OARAO,EAAAA,EAAAA,YAAU,KACRF,OAAOG,iBAAiB,SAAUJ,GAE3B,KACLC,OAAOI,oBAAoB,SAAUL,EAAa,IAEnD,KAGDM,EAAAA,EAAAA,KAAA,OACEC,MAAO,CACLC,QAASb,EAAY,OAAS,OAC9Bc,eAAgB,SAChBC,WAAY,SACZC,SAAU,QACVC,OAAQd,EAAY,MAAQ,QAC5Be,MAAO,OACPC,OAAQ,MACRC,aAAc,MACdC,UAAW,wBACXC,QAAS,GACTC,MAAO,OACPC,OAAQ,OACRC,gBAAiB,QACjBC,MAAO,UACPC,WAAY,0BACZC,OAAQ,WAEVC,QAnCuBC,KACzBxB,OAAOyB,SAAS,CACdC,IAAK,EACLC,SAAU,UACV,EAgCAC,UAAU,uBAAsBC,UAEhCxB,EAAAA,EAAAA,KAACyB,EAAAA,IAAe,CAACC,KAAM,MACnB,C,4FC/CV,MAYA,EAZgBC,KAEZ3B,EAAAA,EAAAA,KAAA4B,EAAAA,SAAA,CAAAJ,UACExB,EAAAA,EAAAA,KAAC6B,EAAAA,EAAG,CAAAL,UAEFxB,EAAAA,EAAAA,KAAC8B,EAAAA,EAAU,CAACC,QAAQ,KAAKC,GAAI,CAAEC,WAAY,IAAKC,IAAK,GAAGV,SAAC,gB,8WCMjE,MAAMW,EAAY,CAChB,CAAEC,GAAI,EAAGC,OAAQ,UACjB,CAAED,GAAI,EAAGC,OAAQ,UA4WnB,EAzWqBlD,IAKd,IALe,gBACpBmD,EAAe,gBACfC,EAAe,gBACfC,EAAe,iBACfC,GACDtD,EACC,MAAMuD,EAAQC,aAAaC,QAAQ,gBAS5BC,EAAeC,IALJ,UAADC,OAAYL,IAKanD,EAAAA,EAAAA,UAAS,MAE5CyD,EAAcC,IAAmB1D,EAAAA,EAAAA,UAAS,KAC1C2D,EAAUC,IAAe5D,EAAAA,EAAAA,UAAS,KAClC6D,EAAiBC,IAAsB9D,EAAAA,EAAAA,UAAS,UAChD+D,EAAYC,IAAiBhE,EAAAA,EAAAA,UAAS,KACtCiE,EAAQC,IAAalE,EAAAA,EAAAA,YAItBmE,IAHeC,EAAAA,EAAAA,QAAO,MAGJlB,EAAiBmB,WAEnCC,EAAsBpB,EAAiBqB,cAC7CC,QAAQC,IAAI,sBAAuBH,GACnC,MAAMI,EAAyBxB,EAAiByB,iBAC1CC,EAAmB1B,EAAiB2B,YAE1CvE,EAAAA,EAAAA,YAAU,KACRsD,EAAYO,GACZT,EAAgBY,GAChBN,EAAcY,GACdd,EAAmBY,EAAuB,GACzC,CACDxB,EACAiB,EACAO,EACAJ,EACAM,IAGcE,MAAMC,KAAK,CAAEC,OAAQ,MAAO,CAACC,EAAGC,IAAMA,EAAI,IAuF1D,OACEC,EAAAA,EAAAA,MAAA9C,EAAAA,SAAA,CAAAJ,SAAA,EACExB,EAAAA,EAAAA,KAAC8B,EAAAA,EAAU,CAACC,QAAQ,KAAKC,GAAI,CAAEC,WAAY,KAAMT,SAAC,cAGlDxB,EAAAA,EAAAA,KAAC8B,EAAAA,EAAU,CAACC,QAAQ,KAAKC,GAAI,CAAEC,WAAY,KAAMT,SAAC,oFAKlDkD,EAAAA,EAAAA,MAAA,QAAMC,SArDoBC,IAG5B,GAFAA,EAAEC,iBAvBiBC,MACnB,MAAMC,EAAY,CAAC,EAgBnB,YAdiBC,IAAb9B,GAAuC,OAAbA,GAAkC,KAAbA,IACjD6B,EAAU7B,SAAW,0BAElBF,IACH+B,EAAU/B,aAAe,yBAEtBI,IACH2B,EAAU3B,gBAAkB,kCAEzBE,IACHyB,EAAUzB,WAAa,4BAGzBG,EAAUsB,GAC+B,IAAlCE,OAAOC,KAAKH,GAAWR,MAAY,EAQtCO,GAAgB,CAClB,IAAIK,EAAU,CACZ/C,GAAoB,OAAhBK,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBL,GACtBgD,gBAAiC,OAAhB3C,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkB2C,gBACnCC,WAAYC,SAAS3C,aAAaC,QAAQ,cAC1C2C,gBAAyB,OAARrC,QAAQ,IAARA,OAAQ,EAARA,EAAUd,GAC3BwB,UAAmB,OAARV,QAAQ,IAARA,OAAQ,EAARA,EAAUU,UACrBE,cAAed,EACfkB,iBAAkBd,EAClBgB,WAAYd,EACZkC,WAAYF,SAAS3C,aAAaC,QAAQ,mBAC1C6C,WAAYH,SAAS3C,aAAaC,QAAQ,WAC1C8C,WAAYJ,SAAS3C,aAAaC,QAAQ,YAE5C+C,IAAAA,IACO,GAAD5C,OAAI6C,EAAAA,GAAQ,6BAA6BT,EAAS,CACpDU,QAAS,CACPC,cAAc,UAAD/C,OAAYL,GACzB,eAAgB,mBAChBqD,OAAQ,sBAGXC,MAAMC,IACLlC,QAAQC,IAAIiC,GACRA,EAAIC,KAAK9D,IAAqB,MAAf6D,EAAIE,QACrBC,EAAAA,GAAMC,QAAQ,kCACd/D,GAAgB,GAChBC,GAAgB,GAChBC,IACAiB,EAAU,CAAC,IAEX2C,EAAAA,GAAME,MAAM,yCACd,IACCC,OAAOD,IACRvC,QAAQC,IAAIsC,GACZF,EAAAA,GAAME,MAAMA,EAAME,QAAQ,GAEhC,GAauChF,SAAA,EACnCxB,EAAAA,EAAAA,KAAC6B,EAAAA,EAAG,CAACG,GAAI,CAAEyE,UAAW,SAAUjF,UAC9BkD,EAAAA,EAAAA,MAACgC,EAAAA,GAAI,CAACC,WAAS,EAAC3E,GAAI,CAAEE,GAAI,EAAG0E,GAAI,CAAEC,GAAI,EAAGC,GAAI,IAAMtF,SAAA,EAClDkD,EAAAA,EAAAA,MAACgC,EAAAA,GAAI,CAACK,MAAI,EAACC,GAAI,GAAIzF,UAAU,MAAMS,GAAI,CAAEE,GAAI,GAAIV,SAAA,EAC/CkD,EAAAA,EAAAA,MAAC5C,EAAAA,EAAU,CAACP,UAAU,gCAAgCS,GAAI,CAAEE,GAAI,GAAIV,SAAA,CAAC,kBACrDxB,EAAAA,EAAAA,KAAA,QAAMuB,UAAU,WAAUC,SAAC,UAE3CkD,EAAAA,EAAAA,MAAC7C,EAAAA,EAAG,CAACN,UAAU,WAAUC,SAAA,EACvBxB,EAAAA,EAAAA,KAACiH,EAAAA,EAAS,CACR1F,UAAU,mBACV2F,KAAK,eACLC,MAAOnE,EACPoE,SAAWxC,GAAM3B,EAAgB2B,EAAEyC,OAAOF,OAC1CG,YAAY,gBACZvF,QAAQ,WACRwF,aAAa,SAEfvH,EAAAA,EAAAA,KAAC6B,EAAAA,EAAG,CAAC5B,MAAO,CAAEc,MAAO,OAAQS,UACzBwB,IAAsB,OAANQ,QAAM,IAANA,OAAM,EAANA,EAAQR,uBAKhC0B,EAAAA,EAAAA,MAACgC,EAAAA,GAAI,CAACK,MAAI,EAACC,GAAI,GAAIzF,UAAU,MAAMS,GAAI,CAAEE,GAAI,GAAIV,SAAA,EAC/CkD,EAAAA,EAAAA,MAAC5C,EAAAA,EAAU,CAACP,UAAU,gCAAgCS,GAAI,CAAEE,GAAI,GAAIV,SAAA,CAAC,qBAClDxB,EAAAA,EAAAA,KAAA,QAAMuB,UAAU,WAAUC,SAAC,UAE9CkD,EAAAA,EAAAA,MAAC7C,EAAAA,EAAG,CAACN,UAAU,WAAUC,SAAA,EACvBxB,EAAAA,EAAAA,KAACwH,EAAAA,EAAY,CACXjG,UAAU,uBACV2F,KAAK,kBACLO,eAAiBC,GACO,kBAAXA,EACFA,EAELA,GAAgB,OAANA,QAAM,IAANA,GAAAA,EAAQrF,OACP,OAANqF,QAAM,IAANA,OAAM,EAANA,EAAQrF,OAEV,GAETsF,QAASxF,EACTgF,MAAO/D,EACPgE,SAAUA,CAACxC,EAAGgD,KACZ7D,QAAQC,IAAI4D,GACZvE,EAA2B,OAARuE,QAAQ,IAARA,OAAQ,EAARA,EAAUvF,OAAO,EAgBtCwF,qBAAsBA,CAACH,EAAQP,KACvB,OAANO,QAAM,IAANA,OAAM,EAANA,EAAQrF,UAAW8E,GAAmB,KAAVA,EAE9BW,YAAcC,IACZ/H,EAAAA,EAAAA,KAACiH,EAAAA,GAASe,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACJD,GAAM,IACVT,YAAY,oBACZvF,QAAQ,WACRwF,aAAa,YAInBvH,EAAAA,EAAAA,KAAC6B,EAAAA,EAAG,CAAC5B,MAAO,CAAEc,MAAO,OAAQS,UACzB4B,IAAyB,OAANI,QAAM,IAANA,OAAM,EAANA,EAAQJ,0BAKnCsB,EAAAA,EAAAA,MAACgC,EAAAA,GAAI,CAACK,MAAI,EAACC,GAAI,GAAIzF,UAAU,MAAMS,GAAI,CAAEE,GAAI,GAAIV,SAAA,EAC/CkD,EAAAA,EAAAA,MAAC5C,EAAAA,EAAU,CAACP,UAAU,gCAAgCS,GAAI,CAAEE,GAAI,GAAIV,SAAA,CAAC,cACzDxB,EAAAA,EAAAA,KAAA,QAAMuB,UAAU,WAAUC,SAAC,UAGvCkD,EAAAA,EAAAA,MAAC7C,EAAAA,EAAG,CAACN,UAAU,WAAUC,SAAA,EACvBxB,EAAAA,EAAAA,KAACwH,EAAAA,EAAY,CACXjG,UAAU,uBACV2F,KAAK,WACLe,QArLKC,KACnBvC,IAAAA,IACO,GAAD5C,OAAI6C,EAAAA,GAAQ,6BAA6B,CAC3CC,QAAS,CACPC,cAAc,UAAD/C,OAAYL,GACzB,eAAgB,mBAChBqD,OAAQ,sBAGXC,MAAMC,IACLlC,QAAQC,IAAIiC,GACZnD,EAAiBmD,EAAIC,KAAKiC,QAAQ,IACjC5B,OAAOD,IACRvC,QAAQC,IAAIsC,EAAM,GAClB,EAwKUmB,eAAiBC,GACO,kBAAXA,EACFA,EAELA,GAAgB,OAANA,QAAM,IAANA,GAAAA,EAAQ9D,UACP,OAAN8D,QAAM,IAANA,OAAM,EAANA,EAAQ9D,UAEV,GAET+D,QAAS9E,EACTsE,MAAOjE,EACPkE,SAAUA,CAACxC,EAAGgD,KACZ7D,QAAQC,IAAI4D,GACZzE,EAAYyE,EAAS,EAEvBC,qBAAsBA,CAACH,EAAQP,KACvB,OAANO,QAAM,IAANA,OAAM,EAANA,EAAQ9D,aAAcuD,GAAmB,KAAVA,EAEjCW,YAAcC,IACZ/H,EAAAA,EAAAA,KAACiH,EAAAA,GAASe,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACJD,GAAM,IACVT,YAAY,YACZvF,QAAQ,WACRwF,aAAa,YAInBvH,EAAAA,EAAAA,KAAC6B,EAAAA,EAAG,CAAC5B,MAAO,CAAEc,MAAO,OAAQS,UACzB0B,IAAkB,OAANM,QAAM,IAANA,OAAM,EAANA,EAAQN,mBAa5BwB,EAAAA,EAAAA,MAACgC,EAAAA,GAAI,CAACK,MAAI,EAACC,GAAI,GAAIzF,UAAU,MAAMS,GAAI,CAAEE,GAAI,GAAIV,SAAA,EAC/CkD,EAAAA,EAAAA,MAAC5C,EAAAA,EAAU,CAACP,UAAU,gCAAgCS,GAAI,CAAEE,GAAI,GAAIV,SAAA,CAAC,iBACtDxB,EAAAA,EAAAA,KAAA,QAAMuB,UAAU,WAAUC,SAAC,UAkC1CkD,EAAAA,EAAAA,MAAC7C,EAAAA,EAAG,CAACN,UAAU,WAAUC,SAAA,EACvBxB,EAAAA,EAAAA,KAACiH,EAAAA,EAAS,CACR1F,UAAU,mBACV2F,KAAK,aACLC,MAAO7D,EACP8D,SAAWxC,GAAMrB,EAAcqB,EAAEyC,OAAOF,OACxCG,YAAY,eACZvF,QAAQ,WACRwF,aAAa,SAEfvH,EAAAA,EAAAA,KAAC6B,EAAAA,EAAG,CAAC5B,MAAO,CAAEc,MAAO,OAAQS,UACzB8B,IAAoB,OAANE,QAAM,IAANA,OAAM,EAANA,EAAQF,0BAQlCoB,EAAAA,EAAAA,MAAC7C,EAAAA,EAAG,CAACN,UAAU,UAAUS,GAAI,CAAEE,GAAI,GAAIV,SAAA,EACrCkD,EAAAA,EAAAA,MAAC0D,EAAAA,EAAW,CACV,aAAW,eACXC,KAAK,SACLrG,GAAI,CACFE,GAAI,CAAE8E,GAAI,GAAKsB,GAAI,GACnBC,GAAI,CAAEvB,GAAI,EAAGF,GAAI,IACjBtF,SAAA,EAEFxB,EAAAA,EAAAA,KAACwI,EAAAA,EAAM,CAACH,KAAK,SAAS9G,UAAU,cAAaC,SAAC,YAC9CxB,EAAAA,EAAAA,KAACwI,EAAAA,EAAM,CAACzG,QAAQ,YAAYR,UAAU,cAAaC,UACjDxB,EAAAA,EAAAA,KAACyI,EAAAA,IAAM,CAAC/G,KAAM,WAGlBgD,EAAAA,EAAAA,MAAC0D,EAAAA,EAAW,CAAC,aAAW,eACtBpG,GAAI,CACFE,GAAI,CAAE8E,GAAI,GAAKsB,GAAI,GACnBC,GAAI,CAAEvB,GAAI,EAAGF,GAAI,IAEnB5F,QAASA,KACPoB,GAAgB,GAChBC,GAAgB,GAChBkB,EAAU,CAAC,EAAE,EACbjC,SAAA,EACFxB,EAAAA,EAAAA,KAACwI,EAAAA,EAAM,CAACjH,UAAU,cAAaC,SAAC,YAChCxB,EAAAA,EAAAA,KAACwI,EAAAA,EAAM,CAACzG,QAAQ,YAAYR,UAAU,cAAaC,UACjDxB,EAAAA,EAAAA,KAAC0I,EAAAA,IAAQ,CAAChH,KAAM,kBAKvB,E,eC5WP,MAAMS,EAAY,CAChB,CAAEC,GAAI,EAAGC,OAAQ,SACjB,CAAED,GAAI,EAAGC,OAAQ,WA4WnB,EAzWuBlD,IAKhB,IALiB,gBACtBmD,EAAe,kBACfqG,EAAiB,gBACjBnG,EAAe,cACfoG,GACDzJ,EACC,MAAMuD,EAAQC,aAAaC,QAAQ,eAE7BiG,EAAS,CACbhD,QAAS,CACPC,cAAc,UAAD/C,OAAYL,GACzB,eAAgB,mBAChBqD,OAAQ,sBAILlD,EAAeC,IAAoBvD,EAAAA,EAAAA,UAAS,KAE5CyD,EAAcC,IAAmB1D,EAAAA,EAAAA,UAAS,KAC1C2D,EAAUC,IAAe5D,EAAAA,EAAAA,UAAS,KAClC6D,EAAiBC,IAAsB9D,EAAAA,EAAAA,UAAS,KAChDuJ,EAAQC,IAAaxJ,EAAAA,EAAAA,WAAS,IAC9ByJ,EAAQC,IAAa1J,EAAAA,EAAAA,WAAS,IAC9B+D,EAAYC,IAAiBhE,EAAAA,EAAAA,UAAS,KACtCiE,EAAQC,IAAalE,EAAAA,EAAAA,aAEPoE,EAAAA,EAAAA,QAAO,MAGZU,MAAMC,KAAK,CAAEC,OAAQ,MAAO,CAACC,EAAGC,IAAMA,EAAI,IA8E1D,OACEC,EAAAA,EAAAA,MAAA9C,EAAAA,SAAA,CAAAJ,SAAA,EAEExB,EAAAA,EAAAA,KAAC8B,EAAAA,EAAU,CAACC,QAAQ,KAAKC,GAAI,CAAEC,WAAY,KAAMT,SAAC,qBAGlDxB,EAAAA,EAAAA,KAAC8B,EAAAA,EAAU,CAACC,QAAQ,KAAKC,GAAI,CAAEC,WAAY,KAAMT,SAAC,oFAKlDxB,EAAAA,EAAAA,KAAC6B,EAAAA,EAAG,CAAAL,UACFkD,EAAAA,EAAAA,MAAA,QAAMC,SAvDkBC,IAM5B,GALAA,EAAEC,iBAtBiBC,MACnB,MAAMC,EAAY,CAAC,EAgBnB,YAdiBC,IAAb9B,GAAuC,OAAbA,GAAkC,KAAbA,IACjD6B,EAAU7B,SAAW,0BAElBF,IACH+B,EAAU/B,aAAe,yBAEtBI,IACH2B,EAAU3B,gBAAkB,kCAEzBE,IACHyB,EAAUzB,WAAa,4BAGzBG,EAAUsB,GAC+B,IAAlCE,OAAOC,KAAKH,GAAWR,MAAY,EAUtCO,GACF,GAAiB,OAAb8D,QAAa,IAAbA,GAAAA,EAAeM,MAAMC,IAAW,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKrF,iBAAkBd,IACtDoD,EAAAA,GAAMgD,QAAQ,YAADrG,OAAaC,EAAY,6BACjC,CACL,IAAImC,EAAU,CACZE,WAAYC,SAAS3C,aAAaC,QAAQ,cAC1C2C,gBAAiBrC,EAASd,GAC1BwB,UAAWV,EAASU,UACpBE,cAAed,EACfkB,iBAAkBd,EAClBgB,WAAYd,EACZkC,WAAYF,SAAS3C,aAAaC,QAAQ,mBAC1C6C,WAAYH,SAAS3C,aAAaC,QAAQ,WAC1C8C,WAAYJ,SAAS3C,aAAaC,QAAQ,WAC1CyG,aAAcC,EAAAA,IAEhB3D,IAAAA,KACQ,GAAD5C,OAAI6C,EAAAA,GAAQ,6BAA6BT,EAAS0D,GACtD7C,MAAMC,IAAS,IAADsD,EACbxF,QAAQC,IAAIiC,GACO,MAAfA,EAAIE,QAAqB,OAAHF,QAAG,IAAHA,GAAS,QAANsD,EAAHtD,EAAKC,YAAI,IAAAqD,GAATA,EAAWnH,IACnCgE,EAAAA,GAAMC,QAAQ,oCACdsC,GAAkB,GAClBrG,GAAgB,GAChBE,IACAiB,EAAU,CAAC,IAEX2C,EAAAA,GAAME,MAAM,yCACd,IACCC,OAAOD,IACRvC,QAAQC,IAAIsC,GACZF,EAAAA,GAAME,MAAMA,EAAME,QAAQ,GAEhC,CACF,EAeyChF,SAAA,EACnCxB,EAAAA,EAAAA,KAAC6B,EAAAA,EAAG,CAACG,GAAI,CAAEyE,UAAW,SAAUjF,UAC9BkD,EAAAA,EAAAA,MAACgC,EAAAA,GAAI,CAACC,WAAS,EAAC3E,GAAI,CAAEE,GAAI,EAAG0E,GAAI,CAAEC,GAAI,EAAGC,GAAI,IAAMtF,SAAA,EAClDkD,EAAAA,EAAAA,MAACgC,EAAAA,GAAI,CAACK,MAAI,EAACC,GAAI,GAAIzF,UAAU,MAAMS,GAAI,CAAEE,GAAI,GAAIV,SAAA,EAC/CkD,EAAAA,EAAAA,MAAC5C,EAAAA,EAAU,CAACP,UAAU,gCAAgCS,GAAI,CAAEE,GAAI,GAAIV,SAAA,CAAC,kBACrDxB,EAAAA,EAAAA,KAAA,QAAMuB,UAAU,WAAUC,SAAC,UAG3CkD,EAAAA,EAAAA,MAAC7C,EAAAA,EAAG,CAACN,UAAU,WAAUC,SAAA,EACvBxB,EAAAA,EAAAA,KAACiH,EAAAA,EAAS,CACR1F,UAAU,mBACV2F,KAAK,eACLC,MAAOnE,EACPoE,SAAWxC,GAAM3B,EAAgB2B,EAAEyC,OAAOF,OAC1CG,YAAY,gBACZvF,QAAQ,WACRwF,aAAa,SAEbvE,IACAhD,EAAAA,EAAAA,KAAC6B,EAAAA,EAAG,CAAC5B,MAAO,CAAEc,MAAO,OAAQS,SACpB,OAANgC,QAAM,IAANA,OAAM,EAANA,EAAQR,sBAMjB0B,EAAAA,EAAAA,MAACgC,EAAAA,GAAI,CAACK,MAAI,EAACC,GAAI,GAAIzF,UAAU,MAAMS,GAAI,CAAEE,GAAI,GAAIV,SAAA,EAC/CkD,EAAAA,EAAAA,MAAC5C,EAAAA,EAAU,CAACP,UAAU,gCAAgCS,GAAI,CAAEE,GAAI,GAAIV,SAAA,CAAC,qBAClDxB,EAAAA,EAAAA,KAAA,QAAMuB,UAAU,WAAUC,SAAC,UAE9CkD,EAAAA,EAAAA,MAAC7C,EAAAA,EAAG,CAACN,UAAU,WAAUC,SAAA,EACvBxB,EAAAA,EAAAA,KAACwH,EAAAA,EAAY,CACXjG,UAAU,uBACV2F,KAAK,kBACLO,eAAiBC,GACO,kBAAXA,EACFA,EAELA,GAAgB,OAANA,QAAM,IAANA,GAAAA,EAAQrF,OACP,OAANqF,QAAM,IAANA,OAAM,EAANA,EAAQrF,OAEV,GAETsF,QAASxF,EACTgF,MAAO/D,GAAmB,KAC1BgE,SAAUA,CAACxC,EAAGgD,KAGZ,OAFA7D,QAAQC,IAAI4D,GACZvE,EAA2B,OAARuE,QAAQ,IAARA,OAAQ,EAARA,EAAUvF,QACb,OAARuF,QAAQ,IAARA,OAAQ,EAARA,EAAUvF,QAChB,IAAK,SAQL,QACE0G,GAAU,GACVE,GAAU,GACV,MAPF,IAAK,QACHA,GAAU,GACVF,GAAU,GAMd,EAEFlB,qBAAsBA,CAACH,EAAQP,KACvB,OAANO,QAAM,IAANA,OAAM,EAANA,EAAQrF,UAAW8E,GAAmB,KAAVA,EAE9BW,YAAcC,IACZ/H,EAAAA,EAAAA,KAACiH,EAAAA,GAASe,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACJD,GAAM,IACVT,YAAY,oBACZvF,QAAQ,WACRwF,aAAa,YAIjBnE,IACApD,EAAAA,EAAAA,KAAC6B,EAAAA,EAAG,CAAC5B,MAAO,CAAEc,MAAO,OAAQS,SACpB,OAANgC,QAAM,IAANA,OAAM,EAANA,EAAQJ,yBAMjBsB,EAAAA,EAAAA,MAACgC,EAAAA,GAAI,CAACK,MAAI,EAACC,GAAI,GAAIzF,UAAU,MAAMS,GAAI,CAAEE,GAAI,GAAIV,SAAA,EAC/CkD,EAAAA,EAAAA,MAAC5C,EAAAA,EAAU,CAACP,UAAU,gCAAgCS,GAAI,CAAEE,GAAI,GAAIV,SAAA,CAAC,cACzDxB,EAAAA,EAAAA,KAAA,QAAMuB,UAAU,WAAUC,SAAC,UAGvCkD,EAAAA,EAAAA,MAAC7C,EAAAA,EAAG,CAACN,UAAU,WAAUC,SAAA,EACvBxB,EAAAA,EAAAA,KAACwH,EAAAA,EAAY,CACXjG,UAAU,gBACV2F,KAAK,WACLe,QApLGC,KACnBvC,IAAAA,IACO,GAAD5C,OAAI6C,EAAAA,GAAQ,6BAA6BiD,GAC5C7C,MAAMC,IAAS,IAADuD,EACbzF,QAAQC,IAAIiC,GACZnD,EAAoB,OAAHmD,QAAG,IAAHA,GAAS,QAANuD,EAAHvD,EAAKC,YAAI,IAAAsD,OAAN,EAAHA,EAAWrB,QAAQ,IACnC5B,OAAOD,IACRvC,QAAQC,IAAIsC,EAAM,GAClB,EA6KYmB,eAAiBC,GACO,kBAAXA,EACFA,EAELA,GAAgB,OAANA,QAAM,IAANA,GAAAA,EAAQ9D,UACP,OAAN8D,QAAM,IAANA,OAAM,EAANA,EAAQ9D,UAEV,GAET+D,QAAS9E,EACTsE,MAAOjE,EACPkE,SAAUA,CAACxC,EAAGgD,KACZ7D,QAAQC,IAAI4D,GACZzE,EAAYyE,EAAS,EAEvBC,qBAAsBA,CAACH,EAAQP,KACvB,OAANO,QAAM,IAANA,OAAM,EAANA,EAAQ9D,aAAcuD,GAAmB,KAAVA,EAEjCW,YAAcC,IACZ/H,EAAAA,EAAAA,KAACiH,EAAAA,GAASe,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACJD,GAAM,IACVT,YAAY,YACZvF,QAAQ,WACRwF,aAAa,YAIjBrE,IACAlD,EAAAA,EAAAA,KAAC6B,EAAAA,EAAG,CAAC5B,MAAO,CAAEc,MAAO,OAAQS,SACpB,OAANgC,QAAM,IAANA,OAAM,EAANA,EAAQN,kBAcjBwB,EAAAA,EAAAA,MAACgC,EAAAA,GAAI,CAACK,MAAI,EAACC,GAAI,GAAIzF,UAAU,MAAMS,GAAI,CAAEE,GAAI,GAAIV,SAAA,EAC/CkD,EAAAA,EAAAA,MAAC5C,EAAAA,EAAU,CAACP,UAAU,gCAAgCS,GAAI,CAAEE,GAAI,GAAIV,SAAA,CAAC,iBACtDxB,EAAAA,EAAAA,KAAA,QAAMuB,UAAU,WAAUC,SAAC,UAoC1CkD,EAAAA,EAAAA,MAAC7C,EAAAA,EAAG,CAACN,UAAU,WAAUC,SAAA,EACvBxB,EAAAA,EAAAA,KAACiH,EAAAA,EAAS,CACR1F,UAAU,mBACV2F,KAAK,aACLC,MAAO7D,EACP8D,SAAWxC,GAAMrB,EAAcqB,EAAEyC,OAAOF,OACxCG,YAAY,eACZvF,QAAQ,WACRwF,aAAa,SAEbjE,IACAtD,EAAAA,EAAAA,KAAC6B,EAAAA,EAAG,CAAC5B,MAAO,CAAEc,MAAO,OAAQS,SACpB,OAANgC,QAAM,IAANA,OAAM,EAANA,EAAQF,yBAUrBoB,EAAAA,EAAAA,MAAC7C,EAAAA,EAAG,CAACN,UAAU,UAAUS,GAAI,CAAEE,GAAI,GAAIV,SAAA,EACrCkD,EAAAA,EAAAA,MAAC0D,EAAAA,EAAW,CACV,aAAW,eACXC,KAAK,SACLrG,GAAI,CACFE,GAAI,CAAE8E,GAAI,GAAKsB,GAAI,GACnBC,GAAI,CAAEvB,GAAI,EAAGF,GAAI,IACjBtF,SAAA,EAEFxB,EAAAA,EAAAA,KAACwI,EAAAA,EAAM,CAACH,KAAK,SAAS9G,UAAU,cAAaC,SAAC,UAG9CxB,EAAAA,EAAAA,KAACwI,EAAAA,EAAM,CAACzG,QAAQ,YAAYR,UAAU,cAAaC,UACjDxB,EAAAA,EAAAA,KAACyI,EAAAA,IAAM,CAAC/G,KAAM,WAIlBgD,EAAAA,EAAAA,MAAC0D,EAAAA,EAAW,CACV,aAAW,eACXpG,GAAI,CACFE,GAAI,CAAE8E,GAAI,GAAKsB,GAAI,GACnBC,GAAI,CAAEvB,GAAI,EAAGF,GAAI,IAEnB5F,QAASA,KACPoB,GAAgB,GAChBqG,GAAkB,GAClB1F,EAAgB,IAChBI,EAAmB,IACnBF,EAAY,IACZI,EAAc,IACdE,EAAU,CAAC,EAAE,EACbjC,SAAA,EAEFxB,EAAAA,EAAAA,KAACwI,EAAAA,EAAM,CAACjH,UAAU,cAAaC,SAAC,YAChCxB,EAAAA,EAAAA,KAACwI,EAAAA,EAAM,CAACzG,QAAQ,YAAYR,UAAU,cAAaC,UACjDxB,EAAAA,EAAAA,KAAC0I,EAAAA,IAAQ,CAAChH,KAAM,oBAOzB,E,gFC1VP,MA0VA,EA1VqBvC,IAAuB,IAAtB,aAAEsK,GAActK,EACpC,MAAMuD,EAAQC,aAAaC,QAAQ,eAE7BiG,EAAS,CACbhD,QAAS,CACPC,cAAc,UAAD/C,OAAYL,GACzB,eAAgB,mBAChBqD,OAAQ,sBAIL2D,EAAcpH,IAAmB/C,EAAAA,EAAAA,WAAS,IAC1CoK,EAAgBhB,IAAqBpJ,EAAAA,EAAAA,WAAS,IAC9CqK,EAAcrH,IAAmBhD,EAAAA,EAAAA,WAAS,IAC1CsK,EAAYC,IAAiBvK,EAAAA,EAAAA,WAAS,IAEtCwK,EAAiBC,IAAsBzK,EAAAA,EAAAA,UAAS,KAChD0K,EAAyBC,IAA8B3K,EAAAA,EAAAA,UAAS,KAEhE4C,EAAWgI,IAAgB5K,EAAAA,EAAAA,UAAS,KACpCkD,EAAkB2H,IAAuB7K,EAAAA,EAAAA,UAAS,KAClD8K,EAAYC,IAAiB/K,EAAAA,EAAAA,UAAS,KAItCgL,EAAUC,IAAejL,EAAAA,EAAAA,WAAS,IAQlCkL,EAAMC,KAAWnL,EAAAA,EAAAA,UAAS,IAC1BoL,GAAOC,KAAYrL,EAAAA,EAAAA,UAAS,IAC5BsL,GAAaC,KAAkBvL,EAAAA,EAAAA,UAAS,IAEzCwL,GAAeJ,GACfK,GAAaC,KAAKC,KAAKH,GAAeF,IACtCM,GAAeV,EAAO,GAEbhL,EAAAA,EAAAA,GAAc,OAAQ,MAGrC,MASM+C,GAAkB4I,UACtBZ,GAAY,SACN7E,IAAAA,IACC,GAAD5C,OAAI6C,EAAAA,GAAQ,6BAA6BiD,GAC5C7C,MAAMC,IAAS,IAADuD,EAAAD,EAAA8B,EACbtH,QAAQC,IAAI,UAAc,OAAHiC,QAAG,IAAHA,GAAS,QAANuD,EAAHvD,EAAKC,YAAI,IAAAsD,OAAN,EAAHA,EAAWrB,SAClCgC,EAAgB,OAAHlE,QAAG,IAAHA,GAAS,QAANsD,EAAHtD,EAAKC,YAAI,IAAAqD,OAAN,EAAHA,EAAWpB,SACxByC,GAAY,OAAH3E,QAAG,IAAHA,GAAS,QAANoF,EAAHpF,EAAKC,YAAI,IAAAmF,OAAN,EAAHA,EAAWV,OACpBH,GAAY,EAAM,IACjBjE,OAAOD,IACRvC,QAAQC,IAAIsC,GACZkE,GAAY,EAAM,GAClB,GAGN3K,EAAAA,EAAAA,YAAU,KACR2C,IAAiB,GAChB,IAgEH,OACExC,EAAAA,EAAAA,KAAA4B,EAAAA,SAAA,CAAAJ,UACEkD,EAAAA,EAAAA,MAAC4G,EAAAA,EAAsB,CAAA9J,SAAA,EACrBxB,EAAAA,EAAAA,KAAC2B,EAAAA,EAAO,KACR+C,EAAAA,EAAAA,MAAC7C,EAAAA,EAAG,CAACG,GAAI,CAAE9B,SAA0B,IAAjBwJ,EAAwB,QAAU,QAASlI,SAAA,EAC7DkD,EAAAA,EAAAA,MAAC5C,EAAAA,EAAU,CAACC,QAAQ,KAAKC,GAAI,CAAEC,WAAY,KAAMT,SAAA,CAAC,2BACvBmJ,IAAS,MAEpC3K,EAAAA,EAAAA,KAAC8B,EAAAA,EAAU,CAACC,QAAQ,KAAKC,GAAI,CAAEC,WAAY,KAAMT,SAAC,qIAKlDkD,EAAAA,EAAAA,MAACgC,EAAAA,GAAI,CAACC,WAAS,EAAC3E,GAAI,CAAEE,GAAI,GAAIV,SAAA,EAC5BxB,EAAAA,EAAAA,KAAC0G,EAAAA,GAAI,CACHK,MAAI,EACJxF,UAAU,SACVyF,GAAI,GACJF,GAAI,EACJwB,GAAI,EACJiD,GAAI,KAGNvL,EAAAA,EAAAA,KAAC0G,EAAAA,GAAI,CAACK,MAAI,EAACC,GAAI,GAAIF,GAAI,EAAGD,GAAI,GAAIyB,GAAI,EAAGiD,GAAI,EAAE/J,UAC7CxB,EAAAA,EAAAA,KAACwL,EAAAA,GAAY,CAACC,aAhCK7G,IAC7B,IAAIsB,EAAOtB,EAAEyC,OAAOF,MACpBmD,EAAcpE,GACL,KAATA,EAjBoBA,KACpBP,IAAAA,IACO,GAAD5C,OAAI6C,EAAAA,GAAQ,uCAAA7C,OAAsCmD,GAAQ2C,GAC7D7C,MAAMC,IAAS,IAADyF,EACb3H,QAAQC,IAAO,OAAHiC,QAAG,IAAHA,OAAG,EAAHA,EAAKC,MACjBiE,EAAgB,OAAHlE,QAAG,IAAHA,OAAG,EAAHA,EAAKC,MAClB0E,GAAY,OAAH3E,QAAG,IAAHA,GAAS,QAANyF,EAAHzF,EAAKC,YAAI,IAAAwF,OAAN,EAAHA,EAAWnH,OAAO,IAE5BgC,OAAOD,IACNvC,QAAQC,IAAI,KAAMsC,EAAM,GACxB,EAOUqF,CAAazF,GAAQ1D,IAAiB,EA6BS6H,WAAYA,OAGjErK,EAAAA,EAAAA,KAAC0G,EAAAA,GAAI,CAACK,MAAI,EAACC,GAAI,GAAIF,GAAI,EAAGD,GAAI,GAAIyB,GAAI,EAAGiD,GAAI,EAAGvJ,GAAI,CAAE9B,QAAS,OAAQC,eAAgB,WAAY+B,GAAI,CAAE8E,GAAI,EAAGF,GAAI,IAAMtF,UACxHxB,EAAAA,EAAAA,KAAC4L,EAAAA,GAAe,CAACC,YAtINC,KACrBxJ,GAAgB,GAChBqG,GAAkB,EAAK,EAoIiCzB,KAAM,0BAKxDlH,EAAAA,EAAAA,KAAC6B,EAAAA,EAAG,CAACG,GAAI,CAAEE,GAAI,GAAIV,UACjBkD,EAAAA,EAAAA,MAACqH,EAAAA,SAAc,CAAAvK,SAAA,EACbxB,EAAAA,EAAAA,KAACgM,EAAAA,EAAc,CACbC,YAAY,EACZC,gBAAiB,IACjBC,cAAe1C,GAA8B,IAC7C2C,UAAU,EACVC,yBAAuB,EACvBjK,GAAG,iBAAgBZ,UAEnBkD,EAAAA,EAAAA,MAAC4H,EAAAA,EAAK,CAACC,cAAY,EAAChL,UAAU,QAAOC,SAAA,EACnCxB,EAAAA,EAAAA,KAACwM,EAAAA,EAAS,CAACjL,UAAU,aAAYC,UAC/BkD,EAAAA,EAAAA,MAAC+H,EAAAA,EAAQ,CAAAjL,SAAA,EACPxB,EAAAA,EAAAA,KAAC0M,EAAAA,EAAS,CAAC1K,GAAI,CAAEnB,OAAQ,QAASW,SAAC,UACnCxB,EAAAA,EAAAA,KAAC0M,EAAAA,EAAS,CAAAlL,SAAC,iBACXxB,EAAAA,EAAAA,KAAC0M,EAAAA,EAAS,CAAAlL,SAAC,mBAGXxB,EAAAA,EAAAA,KAAC0M,EAAAA,EAAS,CAAC1K,GAAI,CAAE2K,SAAU,oBAAqBnL,SAAC,uBAGjDxB,EAAAA,EAAAA,KAAC0M,EAAAA,EAAS,CAAAlL,SAAC,eACXxB,EAAAA,EAAAA,KAAC0M,EAAAA,EAAS,CAAAlL,SAAC,kBACXxB,EAAAA,EAAAA,KAAC0M,EAAAA,EAAS,CAAAlL,SAAC,kBACXxB,EAAAA,EAAAA,KAAC0M,EAAAA,EAAS,CAAAlL,SAAC,iBAGfxB,EAAAA,EAAAA,KAAC4M,EAAAA,EAAS,CAAApL,SACP+I,GAAWvK,EAAAA,EAAAA,KAAC6M,EAAAA,GAAc,CAACC,UAAW,EAAGC,SAAU,MACvC,OAAT5K,QAAS,IAATA,OAAS,EAATA,EAAWoC,QAAS,EACpBpC,EACG6K,MACC7B,GAAeN,GACfM,GAAeN,GAAcA,IAE9BoC,KAAI,CAAC/G,EAAMgH,KAAW,IAADC,EAAAC,EACpB,OACE1I,EAAAA,EAAAA,MAAC+H,EAAAA,EAAQ,CAACY,OAAK,EAAarL,GAAI,CAAEsL,SAAU,IAAK9L,SAAA,EAC/CxB,EAAAA,EAAAA,KAAC0M,EAAAA,EAAS,CAAC,aAAW,OAAMlL,UAE1BxB,EAAAA,EAAAA,KAACuN,EAAAA,GAAa,CAACC,KAAU,OAAJtH,QAAI,IAAJA,OAAI,EAAJA,EAAMmD,kBAE7BrJ,EAAAA,EAAAA,KAAC0M,EAAAA,EAAS,CAAC,aAAW,cAAalL,SAChC0E,EAAKd,mBAERpF,EAAAA,EAAAA,KAAC0M,EAAAA,EAAS,CAAC,aAAW,gBAAelL,SAClC0E,EAAKpC,iBAER9D,EAAAA,EAAAA,KAAC0M,EAAAA,EAAS,CAAC,aAAW,oBAAmBlL,SACtC0E,EAAKhC,oBAERlE,EAAAA,EAAAA,KAAC0M,EAAAA,EAAS,CAAC,aAAW,YAAWlL,SAC1B,OAAJ0E,QAAI,IAAJA,GAAqB,QAAjBiH,EAAJjH,EAAMX,uBAAe,IAAA4H,OAAjB,EAAJA,EAAuBvJ,aAE1B5D,EAAAA,EAAAA,KAAC0M,EAAAA,EAAS,CAAC,aAAW,eAAclL,SACb,QADa4L,EACjClH,EAAKX,uBAAe,IAAA6H,OAAA,EAApBA,EAAsBK,UAEzBzN,EAAAA,EAAAA,KAAC0M,EAAAA,EAAS,CAAC,aAAW,eAAclL,SACjC0E,EAAK9B,cAERpE,EAAAA,EAAAA,KAAC0M,EAAAA,EAAS,CAAC,aAAW,SAAQlL,UAC5BkD,EAAAA,EAAAA,MAAC7C,EAAAA,EAAG,CAAAL,SAAA,EACFxB,EAAAA,EAAAA,KAAC0N,EAAAA,EAAU,CACThM,KAAK,QACLH,UAAU,YACVL,QAASA,IAhKpBgF,KACvB3D,GAAgB,GAChBD,GAAgB,GAChB8H,EAAoB,CAClBhI,GAAQ,OAAJ8D,QAAI,IAAJA,OAAI,EAAJA,EAAM9D,GACVgD,gBAAqB,OAAJc,QAAI,IAAJA,OAAI,EAAJA,EAAMd,gBACvBC,WAAgB,OAAJa,QAAI,IAAJA,OAAI,EAAJA,EAAMb,WAClBE,gBAAqB,OAAJW,QAAI,IAAJA,OAAI,EAAJA,EAAMX,gBACvB3B,UAAe,OAAJsC,QAAI,IAAJA,OAAI,EAAJA,EAAMtC,UACjBE,cAAmB,OAAJoC,QAAI,IAAJA,OAAI,EAAJA,EAAMpC,cACrBI,iBAAsB,OAAJgC,QAAI,IAAJA,OAAI,EAAJA,EAAMhC,iBACxBE,WAAgB,OAAJ8B,QAAI,IAAJA,OAAI,EAAJA,EAAM9B,WAClBqB,WAAgB,OAAJS,QAAI,IAAJA,OAAI,EAAJA,EAAMT,YAClB,EAmJ+CkI,CAAgBzH,GAAM1E,UAErCxB,EAAAA,EAAAA,KAAC4N,EAAAA,IAAM,OAGT5N,EAAAA,EAAAA,KAAC0N,EAAAA,EAAU,CACThM,KAAK,QACLH,UAAU,cACVL,QAASA,KAxJlBgF,KACzBnC,QAAQC,IAAIkC,GACZ4D,GAAc,GACdE,EAAuB,OAAJ9D,QAAI,IAAJA,OAAI,EAAJA,EAAM9D,IACzB8H,EAA+B,OAAJhE,QAAI,IAAJA,OAAI,EAAJA,EAAMd,gBAAgB,EAqJbyI,CAAkB3H,EAAK,EACvB1E,UAEFxB,EAAAA,EAAAA,KAAC8N,EAAAA,IAAQ,aAxCIZ,EAkFV,KAIjBlN,EAAAA,EAAAA,KAACyM,EAAAA,EAAQ,CAAAjL,UACPxB,EAAAA,EAAAA,KAAC0M,EAAAA,EAAS,CAACqB,QAAS,EAAGC,MAAM,SAAQxM,SAAC,2BAUlDxB,EAAAA,EAAAA,KAAC6B,EAAAA,EAAG,CAACG,GAAI,CAAE9B,QAAS,OAAQ+N,SAAU,QAASzM,UAC7CxB,EAAAA,EAAAA,KAACkO,EAAAA,EAAgB,CACflD,WAAYA,GACZP,KAAMA,EACN0D,iBArQSA,CAACC,EAAOC,KAC/B3D,GAAQ2D,EAAQ,EAqQFC,mBA9QW,CAAC,IA+QZzD,YAAaA,GACb0D,wBApQiBH,IAC/BtD,GAAexF,SAAS8I,EAAM/G,OAAOF,MAAO,KAC5CuD,GAAQ,EAAE,YAyQJ1K,EAAAA,EAAAA,KAACwO,EAAAA,GAAkB,CAACC,KAAM5E,EAAY6E,QAAS5E,EAAe+B,YA5NlDjH,IAClBA,EAAEC,iBAEF8J,EAAAA,EACGC,mBAAmB3E,EAAyBpB,GAC5C7C,MAAM6I,IACL9K,QAAQC,IAAI6K,GACZzI,EAAAA,GAAMC,QAAQ,GAADtD,OAAIkH,EAAuB,6BACxCH,GAAc,GACdtH,IAAiB,IAGlB+D,OAAO3B,IACNb,QAAQC,IAAIY,EAAE,GACd,EA8MyFkK,QAAS,+CAAgD1M,GAAI6H,QAKtJjK,EAAAA,EAAAA,KAAC6B,EAAAA,EAAG,CAACG,GAAI,CAAE9B,SAA4B,IAAnByJ,EAA0B,QAAU,QAASnI,UAK/DxB,EAAAA,EAAAA,KAAC+O,EAAc,CACbpG,kBAAmBA,EACnBrG,gBAAiBA,EACjBE,gBAAiBA,GACjBoG,cAAezG,OAGnBnC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAG,CAACG,GAAI,CAAE9B,SAA0B,IAAjB0J,EAAwB,QAAU,QAASpI,UAC7DxB,EAAAA,EAAAA,KAACgP,EAAY,CACXzM,gBAAiBA,EACjBD,gBAAiBA,EACjBE,gBAAiBA,GACjBC,iBAAkBA,OAGtBzC,EAAAA,EAAAA,KAACiP,EAAAA,EAAW,CAAC7P,aAAc,UAE5B,C,6DCjXQ,SAASK,EAAcyP,EAAOC,EAAKC,EAAOC,GACvD,MAAMC,GAAQC,EAAAA,EAAAA,KAERC,GAAUC,EAAAA,EAAAA,GAAcH,EAAMI,YAAYC,GAAGR,IAE7CS,GAAYH,EAAAA,EAAAA,GAAcH,EAAMI,YAAYG,KAAKV,IAEjDW,GAAeL,EAAAA,EAAAA,GAAcH,EAAMI,YAAYK,QAAQX,EAAOC,IAE9DW,GAAYP,EAAAA,EAAAA,GAAcH,EAAMI,YAAYO,KAAKd,IAEvD,MAAc,OAAVD,EACKM,EAGK,SAAVN,EACKU,EAGK,YAAVV,EACKY,EAGK,SAAVZ,EACKc,EAEF,IACT,C,yGC5BA,MAAM9B,EAAmB/O,IAOlB,IAPmB,WACxB6L,EAAU,KACVP,EAAO,EAAC,iBACR0D,EAAmBA,SAAS,mBAC5BG,EAAkB,YAClBzD,EAAW,wBACX0D,EAA0BA,UAC3BpP,EAEK+Q,GAAWzQ,EAAAA,EAAAA,GAAc,OAAQ,MACjC0Q,GAAY1Q,EAAAA,EAAAA,GAAc,OAAQ,MAEtC,MAAM,eAAE2Q,EAAc,kBAAEC,IAAsBC,EAAAA,EAAAA,MAI9C,OAFAvM,QAAQC,IAAI,iCAAgD,OAAdoM,QAAc,IAAdA,OAAc,EAAdA,EAAgBG,OAG5D7L,EAAAA,EAAAA,MAACgC,EAAAA,GAAI,CAACC,WAAS,EAAC6J,QAAS,EAAGxO,GAAI,CAAEE,GAAI,EAAGhC,QAAS,OAAQE,WAAY,UAAWoB,SAAA,EAC/ExB,EAAAA,EAAAA,KAAC0G,EAAAA,GAAI,CAACK,MAAI,EAACC,GAAI,GAAIF,GAAI,EAAGwB,GAAkB,OAAd8H,QAAc,IAAdA,GAAAA,EAAgBG,KAAO,IAAM,EAAGhF,GAAI,OAClEvL,EAAAA,EAAAA,KAAC0G,EAAAA,GAAI,CAACK,MAAI,EAACC,GAAI,GAAIF,GAAkB,OAAdsJ,QAAc,IAAdA,GAAAA,EAAgBG,KAAO,EAAI,EAAGjI,IAAkB,OAAd8H,QAAc,IAAdA,GAAAA,EAAgBG,KAAO,GAAOhF,GAAI,IAAKvJ,GAAI,CAAE9B,QAAS,OAAQC,eAAgB,CAAE6G,GAAI,SAAUF,GAAI,YAAc1G,WAAY,SAAUqQ,IAAK,sBAgBpMzQ,EAAAA,EAAAA,KAAC0G,EAAAA,GAAI,CAACK,MAAI,EAACC,GAAI,GAAIF,GAAkB,OAAdsJ,QAAc,IAAdA,GAAAA,EAAgBG,KAAO,EAAI,EAAGjI,GAAkB,OAAd8H,QAAc,IAAdA,GAAAA,EAAgBG,KAAO,IAAM,EAAGhF,GAAI,EAAGvJ,GAAI,CAAE9B,QAAS,OAAQC,eAAgB,CAAE6G,GAAI,SAAUF,GAAI,YAAc1G,WAAY,SAAUqQ,IAAK,mBAAoBjP,UACtNxB,EAAAA,EAAAA,KAAC0Q,EAAAA,EAAU,CACT3P,MAAM,UACN4J,MAAOK,EACPP,KAAMA,EACNrD,SAAUA,CAACxC,EAAGgD,IAAauG,EAAiBvJ,EAAGgD,GAC/C7F,QAAQ,WACR4O,MAAM,UACNC,iBAAiBC,QAAQX,GAAYC,KAAaU,SAAsB,OAAdT,QAAc,IAAdA,OAAc,EAAdA,EAAgBG,OAAQL,GAClFY,gBAAgBD,QAAQX,GAAYC,KAAaU,SAAsB,OAAdT,QAAc,IAAdA,OAAc,EAAdA,EAAgBG,OAAQL,GACjFa,aAAc,QAGb,EAIX,GAAeC,EAAAA,EAAAA,MAAK9C,E,8NClDpB,MAAM+C,GAAYC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,EAAe/R,IAAA,IAAC,MAAEmQ,GAAOnQ,EAAA,MAAM,CAC7C,qBAAsB,CAClBsB,aAAc,EACdK,gBAAiBwO,EAAM8B,QAAQC,WAAWC,QAC1CC,OAAO,aAADxO,OAAeuM,EAAM8B,QAAQI,UAE1C,IAEKC,GAAmBP,EAAAA,EAAAA,IAAOxD,EAAAA,EAAPwD,EAAmBQ,IAAA,IAAC,MAAEpC,GAAOoC,EAAA,MAAM,CACxD3Q,MAAOuO,EAAM8B,QAAQ9K,MAAMqL,KAC3B,UAAW,CACP7Q,gBAAiBwO,EAAM8B,QAAQ9K,MAAMsL,MACrC7Q,MAAOuO,EAAM8B,QAAQC,WAAWC,SAEvC,IAEKO,GAAmBX,EAAAA,EAAAA,IAAOpP,EAAAA,EAAPoP,EAAmBY,IAAA,IAAC,MAAExC,GAAOwC,EAAA,MAAM,CACxDnR,QAAS2O,EAAMkB,QAAQ,IACvBuB,UAAW,OAGXtR,aAAc6O,EAAMqB,MAAMlQ,aAC7B,IAGY+N,EAAqBwD,IAA4D,IAA3D,KAAEvD,EAAI,QAAEC,EAAO,YAAE7C,EAAW,QAAEiD,EAAO,GAAE1M,EAAE,SAAE8N,GAAU8B,EACpF,MAAM1C,GAAQC,EAAAA,EAAAA,KACR0C,GAASxC,EAAAA,EAAAA,GAAcH,EAAMI,YAAYG,KAAK,OAEpD,OACInL,EAAAA,EAAAA,MAACuM,EAAS,CAACV,KAAM9B,EACbyD,SAAUvS,OAAOwS,YAAc,IAAM,MAAOxS,OAAOwS,YAAc,KAAaxS,OAAOwS,WAAd,MACvEC,WAAS,EACTC,QAASA,IAAM3D,GAAQ,GAAOlN,SAAA,EAE9BxB,EAAAA,EAAAA,KAACsS,EAAAA,EAAa,CAAA9Q,UACVkD,EAAAA,EAAAA,MAAC5C,EAAAA,EAAU,CAACC,QAAQ,KAAIP,SAAA,CACnBsN,GACD9O,EAAAA,EAAAA,KAAA,QAAAwB,SAAM,UACNkD,EAAAA,EAAAA,MAAA,QAAMzE,MAAO,CAAEgC,WAAY,KAAMT,SAAA,CAC5B,IAAI,IACHY,EAAG,eAIjBpC,EAAAA,EAAAA,KAACuS,EAAAA,EAAa,CAAA/Q,SACT0O,IAAsB+B,GACnBvN,EAAAA,EAAAA,MAAA9C,EAAAA,SAAA,CAAAJ,SAAA,EACIxB,EAAAA,EAAAA,KAACwI,EAAAA,EAAM,CAACzG,QAAQ,YAAYhB,MAAO,QAASyR,SAASxS,EAAAA,EAAAA,KAAC8N,EAAAA,IAAQ,IAAK5M,QAAS2K,EAAYrK,SAAC,YAGzFxB,EAAAA,EAAAA,KAACwI,EAAAA,EAAM,CAACzG,QAAQ,YAAYyQ,SAASxS,EAAAA,EAAAA,KAAC0I,EAAAA,IAAQ,IAAKxH,QAASA,IAAMwN,GAAQ,GAAOlN,SAAC,eAKtFkD,EAAAA,EAAAA,MAAC7C,EAAAA,EAAG,CAACN,UAAU,UAASC,SAAA,EACpBkD,EAAAA,EAAAA,MAAC0D,EAAAA,EAAW,CACR,aAAW,eACXlH,QAAS2K,EACT7J,GAAI,CACAE,GAAI,CAAE8E,GAAI,GAAKsB,GAAI,GACnBC,GAAI,CAAEvB,GAAI,EAAGF,GAAI,IACnBtF,SAAA,EAEFxB,EAAAA,EAAAA,KAACwI,EAAAA,EAAM,CAACjH,UAAU,cAAaC,SAAC,YAGhCxB,EAAAA,EAAAA,KAACwI,EAAAA,EAAM,CAACzG,QAAQ,YAAYR,UAAU,cAAaC,UAC/CxB,EAAAA,EAAAA,KAAC8N,EAAAA,IAAQ,CAACpM,KAAM,WAIxBgD,EAAAA,EAAAA,MAAC0D,EAAAA,EAAW,CACR,aAAW,eACXlH,QAASA,IAAMwN,GAAQ,GACvB1M,GAAI,CACAE,GAAI,CAAE8E,GAAI,GAAKsB,GAAI,GACnBC,GAAI,CAAEvB,GAAI,EAAGF,GAAI,IACnBtF,SAAA,EAEFxB,EAAAA,EAAAA,KAACwI,EAAAA,EAAM,CAACjH,UAAU,cAAaC,SAAC,YAChCxB,EAAAA,EAAAA,KAACwI,EAAAA,EAAM,CAACzG,QAAQ,YAAYR,UAAU,cAAaC,UAC/CxB,EAAAA,EAAAA,KAAC0I,EAAAA,IAAQ,CAAChH,KAAM,kBAM5B,EAKP+Q,EAAsBC,IAAwD,IAAvD,KAAEjE,EAAI,QAAEC,EAAO,YAAE7C,EAAW,QAAEiD,EAAO,SAAEoB,GAAUwC,EACjF,OACIhO,EAAAA,EAAAA,MAACyM,EAAAA,EAAM,CACHZ,KAAM9B,EACNyD,SAAS,KACTE,WAAS,EAAA5Q,SAAA,EAETkD,EAAAA,EAAAA,MAAC4N,EAAAA,EAAa,CAAA9Q,SAAA,EACVxB,EAAAA,EAAAA,KAAC8B,EAAAA,EAAU,CAACC,QAAQ,KAAIP,SACnBsN,KAEL9O,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAC8B,EAAAA,EAAU,CAACC,QAAQ,KAAIP,SAAC,yCAI7BxB,EAAAA,EAAAA,KAACuS,EAAAA,EAAa,CAAA/Q,SACT0O,GACGxL,EAAAA,EAAAA,MAAA9C,EAAAA,SAAA,CAAAJ,SAAA,EACIxB,EAAAA,EAAAA,KAACwI,EAAAA,EAAM,CAACzG,QAAQ,YAAYhB,MAAO,QAASyR,SAASxS,EAAAA,EAAAA,KAAC2S,EAAAA,IAAO,IAAKzR,QAASA,IAAMwN,GAAQ,GAAOlN,SAAE,SAGlGxB,EAAAA,EAAAA,KAACwI,EAAAA,EAAM,CAACzG,QAAQ,YAAYyQ,SAASxS,EAAAA,EAAAA,KAAC4S,EAAAA,IAAO,IAAK1R,QAAS2K,EAAYrK,SAAC,WAK5EkD,EAAAA,EAAAA,MAAC7C,EAAAA,EAAG,CAACN,UAAU,UAASC,SAAA,EACpBkD,EAAAA,EAAAA,MAAC0D,EAAAA,EAAW,CACR,aAAW,eACXlH,QAASA,IAAMwN,GAAQ,GACvB1M,GAAI,CACAE,GAAI,CAAE8E,GAAI,GAAKsB,GAAI,GACnBC,GAAI,CAAEvB,GAAI,EAAGF,GAAI,IACnBtF,SAAA,EAEFxB,EAAAA,EAAAA,KAACwI,EAAAA,EAAM,CAACjH,UAAU,cAAaC,SAAC,SAGhCxB,EAAAA,EAAAA,KAACwI,EAAAA,EAAM,CAACzG,QAAQ,YAAYR,UAAU,cAAaC,UAC/CxB,EAAAA,EAAAA,KAAC2S,EAAAA,IAAO,CAACjR,KAAM,WAGvBgD,EAAAA,EAAAA,MAAC0D,EAAAA,EAAW,CACR,aAAW,eACXlH,QAAS2K,EACT7J,GAAI,CACAE,GAAI,CAAE8E,GAAI,GAAKsB,GAAI,GACnBC,GAAI,CAAEvB,GAAI,EAAGF,GAAI,IACnBtF,SAAA,EAEFxB,EAAAA,EAAAA,KAACwI,EAAAA,EAAM,CAACjH,UAAU,cAAaC,SAAC,QAGhCxB,EAAAA,EAAAA,KAACwI,EAAAA,EAAM,CAACzG,QAAQ,YAAYR,UAAU,cAAaC,UAC/CxB,EAAAA,EAAAA,KAAC4S,EAAAA,IAAO,CAAClR,KAAM,iBAM9B,EAmEJmR,EAAwBC,IAAkC,IAAjC,KAAErE,EAAI,QAAEC,EAAO,SAAEwB,GAAU4C,EAC7D,OACI9S,EAAAA,EAAAA,KAACiR,EAAS,CACNV,KAAM9B,EACNyD,SAAS,KACb1Q,UAEIkD,EAAAA,EAAAA,MAAC4N,EAAAA,EAAa,CAAA9Q,SAAA,EACVkD,EAAAA,EAAAA,MAAC7C,EAAAA,EAAG,CAACG,GAAI,CAAE+Q,EAAG,EAAGC,EAAG,EAAGC,GAAI,EAAG/S,QAAS,OAAQC,eAAgB,gBAAiBC,WAAY,UAAWoB,SAAA,EACnGxB,EAAAA,EAAAA,KAAC6R,EAAgB,CAAC9P,QAAQ,KAAIP,SAAC,WAI/BxB,EAAAA,EAAAA,KAACyR,EAAgB,CAACvQ,QAASA,IAAMwN,GAAQ,GAAQ1M,GAAI,CAAE+Q,EAAG,IAAMvR,UAC5DxB,EAAAA,EAAAA,KAACkT,EAAAA,IAAO,CAACxR,KAAM,WAGvB1B,EAAAA,EAAAA,KAAC8B,EAAAA,EAAU,CAACC,QAAQ,KAAKC,GAAI,CAAEjB,MAAO,kBAAmBS,SAAC,yDAItD,C","sources":["app/pages/ScrollToTop.js","app/pages/settings/Setting.js","app/pages/settings/Workflow/Workflows/EditWorkflow.js","app/pages/settings/Workflow/Workflows/CreateWorkflow.js","app/pages/settings/Workflow/Workflows/WorkflowList.js","app/pages/useResponsive.js","app/shared/ReuseComponents/CommonPagination.js","app/shared/ReuseComponents/ErpDialogBoxes.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { FaArrowCircleUp } from 'react-icons/fa';\r\nimport useResponsive from './useResponsive';\r\n\r\nconst ScrollToTop = ({ Scrollheight }) => {\r\n  const [isVisible, setIsVisible] = useState(false);\r\n  const isAboveXl = useResponsive(\"up\", \"xl\");\r\n\r\n  const handleScroll = () => {\r\n    if (window.scrollY > Scrollheight) {\r\n      setIsVisible(true);\r\n    } else {\r\n      setIsVisible(false);\r\n    }\r\n  };\r\n\r\n  const scrollToTopHandler = () => {\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: 'smooth',\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', handleScroll);\r\n\r\n    return () => {\r\n      window.removeEventListener('scroll', handleScroll);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: isVisible ? 'flex' : 'none',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        position: 'fixed',\r\n        bottom: isAboveXl ? \"10%\" : \"10.5%\",\r\n        right: '10px',\r\n        zIndex: 99999,\r\n        borderRadius: '50%',\r\n        boxShadow: '0px 2px 9px lightgray',\r\n        padding: 0.5,\r\n        width: '35px',\r\n        height: '35px',\r\n        backgroundColor: 'white',\r\n        color: '#00bfff',\r\n        transition: 'linear 1.5s ease-in-out',\r\n        cursor: 'pointer',\r\n      }}\r\n      onClick={scrollToTopHandler}\r\n      className=\"topToBottomAnimation\"\r\n    >\r\n      <FaArrowCircleUp size={22} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ScrollToTop;\r\n","import React from 'react';\nimport { Typography } from '@mui/material';\nimport Div from \"@jumbo/shared/Div\";\nimport './Setting.css';\n\n\n\n\nconst Setting = () => {\n  return ( \n    <>\n      <Div>\n        {/* <img src='.\\images\\mainlogo-icon.jpg' width={30} height={30}></img> */}\n        <Typography variant='h1' sx={{ fontWeight: 800, mt: -2}}>Settings</Typography>\n      </Div>\n    </>\n    \n  )\n}\n\nexport default Setting;\n","import {\r\n  Autocomplete,\r\n  Button,\r\n  ButtonGroup,\r\n  FormControl,\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport Div from \"@jumbo/shared/Div/Div\";\r\nimport { Form, Formik } from \"formik\";\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"app/services/auth-services\";\r\nimport settingServices from \"app/services/setting-api-services\";\r\nimport { toast } from \"react-toastify\";\r\nimport { FaSave } from \"react-icons/fa\";\r\nimport { TiCancel } from \"react-icons/ti\";\r\n\r\nconst workflows = [\r\n  { id: 1, values: \"Amount\" },\r\n  { id: 2, values: \"Level\" },\r\n];\r\n\r\nconst EditWorkflow = ({\r\n  setListWorkflow,\r\n  setEditWorkflow,\r\n  listOfWorkflows,\r\n  currentWorkflows,\r\n}) => {\r\n  const token = localStorage.getItem(\"accesstoken\");\r\n\r\n  const header = {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n      \"Content-Type\": \"application/json\",\r\n      Accept: \"application/json\",\r\n    },\r\n  };\r\n  const [listRuleNames, setListRuleNames] = useState([]);\r\n\r\n  const [workflowName, setWorkflowName] = useState(\"\");\r\n  const [ruleName, setRuleName] = useState(\"\");\r\n  const [basedOnWorkflow, setBasedOnWorkflow] = useState(\"Level\");\r\n  const [noOfLevels, setNoOfLevels] = useState(\"\");\r\n  const [errors, setErrors] = useState();\r\n  const textFieldRef = useRef(null);\r\n\r\n\r\n  const defaultRuleName = currentWorkflows.Rule_Name;\r\n\r\n  const defaultWorkflowName = currentWorkflows.Workflow_Name;\r\n  console.log(\"defaultWorkflowName\", defaultWorkflowName);\r\n  const defaultWorkflowBasedon = currentWorkflows.Workflow_Basedon;\r\n  const defaultNoofLevel = currentWorkflows.Noof_Level;\r\n\r\n  useEffect(() => {\r\n    setRuleName(defaultRuleName);\r\n    setWorkflowName(defaultWorkflowName);\r\n    setNoOfLevels(defaultNoofLevel);\r\n    setBasedOnWorkflow(defaultWorkflowBasedon);\r\n  }, [\r\n    currentWorkflows,\r\n    defaultRuleName,\r\n    defaultWorkflowBasedon,\r\n    defaultWorkflowName,\r\n    defaultNoofLevel,\r\n  ]);\r\n\r\n  const numbers = Array.from({ length: 100 }, (_, i) => i + 1);\r\n\r\n\r\n  const getRuleNames = () => {\r\n    axios\r\n      .get(`${BASE_URL}/Erpapp/WorkflowRulelist/`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n        },\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        setListRuleNames(res.data.results);\r\n      }).catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n\r\n\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n\r\n    if (ruleName === undefined || ruleName === null || ruleName === \"\") {\r\n      newErrors.ruleName = \"Rule Name is required.\";\r\n    }\r\n    if (!workflowName) {\r\n      newErrors.workflowName = \"Workflow is required.\";\r\n    }\r\n    if (!basedOnWorkflow) {\r\n      newErrors.basedOnWorkflow = \"Based on workflow is required.\";\r\n    }\r\n    if (!noOfLevels) {\r\n      newErrors.noOfLevels = \"No of level is required.\";\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n\r\n\r\n  const handleUpdateWorkflow = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (validateForm()) {\r\n      var payload = {\r\n        id: currentWorkflows?.id,\r\n        WorkflowName_Id: currentWorkflows?.WorkflowName_Id,\r\n        Partner_Id: parseInt(localStorage.getItem(\"PartnerId\")),\r\n        WorkflowRule_Id: ruleName?.id,\r\n        Rule_Name: ruleName?.Rule_Name,\r\n        Workflow_Name: workflowName,\r\n        Workflow_Basedon: basedOnWorkflow,\r\n        Noof_Level: noOfLevels,\r\n        Company_Id: parseInt(localStorage.getItem(\"OrganizationId\")),\r\n        Created_By: parseInt(localStorage.getItem(\"UserId\")),\r\n        Updated_By: parseInt(localStorage.getItem(\"UserId\")),\r\n      };\r\n      axios\r\n        .put(`${BASE_URL}/Erpapp/WorkflowNameCRUD/`, payload, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n            Accept: \"application/json\",\r\n          },\r\n        })\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.data.id && res.status === 200) {\r\n            toast.success(\"Successfully Update a Workflow\");\r\n            setListWorkflow(true);\r\n            setEditWorkflow(false);\r\n            listOfWorkflows();\r\n            setErrors({});\r\n          } else {\r\n            toast.error(\"Workflow Matching Query Doesn't Exist.\")\r\n          }\r\n        }).catch((error) => {\r\n          console.log(error);\r\n          toast.error(error.message);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h3\" sx={{ fontWeight: 600 }}>\r\n        Workflow\r\n      </Typography>\r\n      <Typography variant=\"h4\" sx={{ fontWeight: 500 }}>\r\n        Users shall use this form to set up the approvers to approve various\r\n        documents\r\n      </Typography>\r\n\r\n      <form onSubmit={handleUpdateWorkflow}>\r\n        <Div sx={{ minHeight: \"350px\" }}>\r\n          <Grid container sx={{ mt: 2, ml: { sm: 0, md: 3 } }}>\r\n            <Grid item xs={12} className=\"row\" sx={{ mt: 1 }}>\r\n              <Typography className=\"col-md-4 col-xl-2 input-label\" sx={{ mt: 2 }}>\r\n                Workflow Name <span className=\"required\">*</span>\r\n              </Typography>\r\n              <Div className=\"col-md-4\">\r\n                <TextField\r\n                  className=\"col-12 input-box\"\r\n                  name=\"workflowName\"\r\n                  value={workflowName}\r\n                  onChange={(e) => setWorkflowName(e.target.value)}\r\n                  placeholder=\"Wrokflow Name\"\r\n                  variant=\"outlined\"\r\n                  autoComplete=\"off\"\r\n                />\r\n                <Div style={{ color: \"red\" }}>\r\n                  {!workflowName && errors?.workflowName}\r\n                </Div>\r\n              </Div>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} className=\"row\" sx={{ mt: 1 }}>\r\n              <Typography className=\"col-md-4 col-xl-2 input-label\" sx={{ mt: 2 }}>\r\n                Workflow Based On<span className=\"required\">*</span>\r\n              </Typography>\r\n              <Div className=\"col-md-4\">\r\n                <Autocomplete\r\n                  className=\"col-12 search-select\"\r\n                  name=\"basedOnWorkflow\"\r\n                  getOptionLabel={(option) => {\r\n                    if (typeof option === \"string\") {\r\n                      return option;\r\n                    }\r\n                    if (option && option?.values) {\r\n                      return option?.values;\r\n                    }\r\n                    return \"\";\r\n                  }}\r\n                  options={workflows}\r\n                  value={basedOnWorkflow}\r\n                  onChange={(e, newValue) => {\r\n                    console.log(newValue);\r\n                    setBasedOnWorkflow(newValue?.values);\r\n                    // switch (newValue.values) {\r\n                    //   case \"Amount\":\r\n                    //     setAmount(true);\r\n                    //     setLevels(false);\r\n                    //     break;\r\n                    //   case \"Level\":\r\n                    //     setLevels(true);\r\n                    //     setAmount(false);\r\n                    //     break;\r\n                    //   default:\r\n                    //     setAmount(true);\r\n                    //     setLevels(false);\r\n                    //     break;\r\n                    // }\r\n                  }}\r\n                  isOptionEqualToValue={(option, value) =>\r\n                    option?.values === value || value === \"\"\r\n                  }\r\n                  renderInput={(params) => (\r\n                    <TextField\r\n                      {...params}\r\n                      placeholder=\"Workflow Based On\"\r\n                      variant=\"outlined\"\r\n                      autoComplete=\"off\"\r\n                    />\r\n                  )}\r\n                />\r\n                <Div style={{ color: \"red\" }}>\r\n                  {!basedOnWorkflow && errors?.basedOnWorkflow}\r\n                </Div>\r\n              </Div>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} className=\"row\" sx={{ mt: 1 }}>\r\n              <Typography className=\"col-md-4 col-xl-2 input-label\" sx={{ mt: 2 }}>\r\n                Rule Name <span className=\"required\">*</span>\r\n              </Typography>\r\n\r\n              <Div className=\"col-md-4\">\r\n                <Autocomplete\r\n                  className=\"col-12 search-select\"\r\n                  name=\"ruleName\"\r\n                  onFocus={getRuleNames}\r\n                  getOptionLabel={(option) => {\r\n                    if (typeof option === \"string\") {\r\n                      return option;\r\n                    }\r\n                    if (option && option?.Rule_Name) {\r\n                      return option?.Rule_Name;\r\n                    }\r\n                    return \"\";\r\n                  }}\r\n                  options={listRuleNames}\r\n                  value={ruleName}\r\n                  onChange={(e, newValue) => {\r\n                    console.log(newValue);\r\n                    setRuleName(newValue);\r\n                  }}\r\n                  isOptionEqualToValue={(option, value) =>\r\n                    option?.Rule_Name === value || value === \"\"\r\n                  }\r\n                  renderInput={(params) => (\r\n                    <TextField\r\n                      {...params}\r\n                      placeholder=\"Rule Name\"\r\n                      variant=\"outlined\"\r\n                      autoComplete=\"off\"\r\n                    />\r\n                  )}\r\n                />\r\n                <Div style={{ color: \"red\" }}>\r\n                  {!ruleName && errors?.ruleName}\r\n                </Div>\r\n              </Div>\r\n              {/* <Div className=\"col-md-1\">\r\n                    <Button\r\n                      className=\"save-button\"\r\n                      onClick={handleOpenWorkflowSetup}\r\n                    >\r\n                      Add\r\n                    </Button>\r\n                  </Div> */}\r\n            </Grid>\r\n\r\n            <Grid item xs={12} className=\"row\" sx={{ mt: 1 }}>\r\n              <Typography className=\"col-md-4 col-xl-2 input-label\" sx={{ mt: 2 }}>\r\n                No of Levels <span className=\"required\">*</span>\r\n              </Typography>\r\n              {/* <FormControl className=\"col-md-6\">\r\n                  <Autocomplete\r\n                    className=\"search-select\"\r\n                    name=\"noOfLevels\"\r\n                    getOptionLabel={(option) => {\r\n                      if (typeof option === \"number\") {\r\n                        return option.toString();\r\n                      }\r\n                      if (option && option) {\r\n                        return option;\r\n                      }\r\n                      return 0;\r\n                    }}\r\n                    options={numbers}\r\n                    value={noOfLevels}\r\n                    onChange={(e, newValue) => {\r\n                      console.log(newValue);\r\n                      setNoOfLevels(newValue);\r\n                    }}\r\n                    isOptionEqualToValue={(option, value) =>\r\n                      option === value || value === 0\r\n                    }\r\n                    renderInput={(params) => (\r\n                      <TextField\r\n                        {...params}\r\n                        placeholder=\"No of Levels\"\r\n                        variant=\"outlined\"\r\n                        autoComplete=\"off\"\r\n                      />\r\n                    )}\r\n                  />\r\n                </FormControl> */}\r\n              <Div className=\"col-md-4\">\r\n                <TextField\r\n                  className=\"col-12 input-box\"\r\n                  name=\"noOfLevels\"\r\n                  value={noOfLevels}\r\n                  onChange={(e) => setNoOfLevels(e.target.value)}\r\n                  placeholder=\"No of Levels\"\r\n                  variant=\"outlined\"\r\n                  autoComplete=\"off\"\r\n                />\r\n                <Div style={{ color: \"red\" }}>\r\n                  {!noOfLevels && errors?.noOfLevels}\r\n                </Div>\r\n              </Div>\r\n            </Grid>\r\n          </Grid>\r\n        </Div>\r\n\r\n\r\n        <Div className=\"buttons\" sx={{ mt: 5 }}>\r\n          <ButtonGroup\r\n            aria-label=\"split button\"\r\n            type=\"submit\"\r\n            sx={{\r\n              mt: { xs: 0.5, lg: 0 },\r\n              mr: { xs: 0, md: 1 }\r\n            }}\r\n          >\r\n            <Button type=\"submit\" className=\"plus-button\">Update</Button>\r\n            <Button variant=\"contained\" className=\"icon-button\">\r\n              <FaSave size={18} />\r\n            </Button>\r\n          </ButtonGroup>\r\n          <ButtonGroup aria-label=\"split button\"\r\n            sx={{\r\n              mt: { xs: 0.5, lg: 0 },\r\n              mr: { xs: 0, md: 1 }\r\n            }}\r\n            onClick={() => {\r\n              setListWorkflow(true);\r\n              setEditWorkflow(false);\r\n              setErrors({});\r\n            }}>\r\n            <Button className=\"plus-button\">Cancel</Button>\r\n            <Button variant=\"contained\" className=\"icon-button\">\r\n              <TiCancel size={24} />\r\n            </Button>\r\n          </ButtonGroup>\r\n        </Div>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditWorkflow;\r\n","import {\r\n  Autocomplete,\r\n  Button,\r\n  ButtonGroup,\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport React, { useState, useRef } from \"react\";\r\nimport Div from \"@jumbo/shared/Div/Div\";\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"app/services/auth-services\";\r\nimport { toast } from \"react-toastify\";\r\nimport { FaSave } from \"react-icons/fa\";\r\nimport { TiCancel } from \"react-icons/ti\";\r\nimport { todayDate } from \"app/shared/ReuseComponents/DateFormatter\";\r\n\r\nconst workflows = [\r\n  { id: 1, values: \"Level\" },\r\n  { id: 2, values: \"Amount\" },\r\n];\r\n\r\nconst CreateWorkflow = ({\r\n  setListWorkflow,\r\n  setCreateWorkflow,\r\n  listOfWorkflows,\r\n  workflowsList\r\n}) => {\r\n  const token = localStorage.getItem(\"accesstoken\");\r\n\r\n  const header = {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n      \"Content-Type\": \"application/json\",\r\n      Accept: \"application/json\",\r\n    },\r\n  };\r\n\r\n  const [listRuleNames, setListRuleNames] = useState([]);\r\n\r\n  const [workflowName, setWorkflowName] = useState(\"\");\r\n  const [ruleName, setRuleName] = useState(\"\");\r\n  const [basedOnWorkflow, setBasedOnWorkflow] = useState(\"\");\r\n  const [amount, setAmount] = useState(true);\r\n  const [levels, setLevels] = useState(false);\r\n  const [noOfLevels, setNoOfLevels] = useState(\"\");\r\n  const [errors, setErrors] = useState();\r\n\r\n  const textFieldRef = useRef(null);\r\n\r\n\r\n  const numbers = Array.from({ length: 100 }, (_, i) => i + 1);\r\n\r\n  const getRuleNames = () => {\r\n    axios\r\n      .get(`${BASE_URL}/Erpapp/WorkflowRulelist/`, header)\r\n      .then((res) => {\r\n        console.log(res);\r\n        setListRuleNames(res?.data?.results);\r\n      }).catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n\r\n    if (ruleName === undefined || ruleName === null || ruleName === \"\") {\r\n      newErrors.ruleName = \"Rule Name is required.\";\r\n    }\r\n    if (!workflowName) {\r\n      newErrors.workflowName = \"Workflow is required.\";\r\n    }\r\n    if (!basedOnWorkflow) {\r\n      newErrors.basedOnWorkflow = \"Based on workflow is required.\";\r\n    }\r\n    if (!noOfLevels) {\r\n      newErrors.noOfLevels = \"No of level is required.\";\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n\r\n  const handleSubmitWorkflow = (e) => {\r\n    e.preventDefault();\r\n\r\n    // let checkValidate = validateForm();\r\n    // setErrors(checkValidate);\r\n\r\n    if (validateForm()) {\r\n      if (workflowsList?.find((opt) => opt?.Workflow_Name === workflowName)) {\r\n        toast.warning(`Workflow ${workflowName} is already created.`)\r\n      } else {\r\n        var payload = {\r\n          Partner_Id: parseInt(localStorage.getItem(\"PartnerId\")),\r\n          WorkflowRule_Id: ruleName.id,\r\n          Rule_Name: ruleName.Rule_Name,\r\n          Workflow_Name: workflowName,\r\n          Workflow_Basedon: basedOnWorkflow,\r\n          Noof_Level: noOfLevels,\r\n          Company_Id: parseInt(localStorage.getItem(\"OrganizationId\")),\r\n          Created_By: parseInt(localStorage.getItem(\"UserId\")),\r\n          Updated_By: parseInt(localStorage.getItem(\"UserId\")),\r\n          Created_Date: todayDate\r\n        };\r\n        axios\r\n          .post(`${BASE_URL}/Erpapp/WorkflowNameCRUD/`, payload, header)\r\n          .then((res) => {\r\n            console.log(res);\r\n            if (res.status === 201 && res?.data?.id) {\r\n              toast.success(\"Workflow is Created Successfully\");\r\n              setCreateWorkflow(false);\r\n              setListWorkflow(true);\r\n              listOfWorkflows();\r\n              setErrors({})\r\n            } else {\r\n              toast.error(\"Workflow Matching Query Doesn't Exist.\")\r\n            }\r\n          }).catch((error) => {\r\n            console.log(error);\r\n            toast.error(error.message);\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n\r\n      <Typography variant=\"h3\" sx={{ fontWeight: 600 }}>\r\n        Assign Workflow\r\n      </Typography>\r\n      <Typography variant=\"h4\" sx={{ fontWeight: 500 }}>\r\n        Users shall use this form to set up the approvers to approve various\r\n        documents\r\n      </Typography>\r\n\r\n      <Div>\r\n        <form onSubmit={handleSubmitWorkflow}>\r\n          <Div sx={{ minHeight: \"350px\" }}>\r\n            <Grid container sx={{ mt: 2, ml: { sm: 0, md: 0 } }}>\r\n              <Grid item xs={12} className=\"row\" sx={{ mt: 1 }}>\r\n                <Typography className=\"col-md-4 col-xl-2 input-label\" sx={{ mt: 2 }}>\r\n                  Workflow Name <span className=\"required\">*</span>\r\n                </Typography>\r\n\r\n                <Div className=\"col-md-4\">\r\n                  <TextField\r\n                    className=\"col-12 input-box\"\r\n                    name=\"workflowName\"\r\n                    value={workflowName}\r\n                    onChange={(e) => setWorkflowName(e.target.value)}\r\n                    placeholder=\"Wrokflow Name\"\r\n                    variant=\"outlined\"\r\n                    autoComplete=\"off\"\r\n                  />\r\n                  {!workflowName &&\r\n                    <Div style={{ color: \"red\" }}>\r\n                      {errors?.workflowName}\r\n                    </Div>\r\n                  }\r\n                </Div>\r\n              </Grid>\r\n\r\n              <Grid item xs={12} className=\"row\" sx={{ mt: 1 }}>\r\n                <Typography className=\"col-md-4 col-xl-2 input-label\" sx={{ mt: 2 }}>\r\n                  Workflow Based On<span className=\"required\">*</span>\r\n                </Typography>\r\n                <Div className=\"col-md-4\">\r\n                  <Autocomplete\r\n                    className=\"col-12 search-select\"\r\n                    name=\"basedOnWorkflow\"\r\n                    getOptionLabel={(option) => {\r\n                      if (typeof option === \"string\") {\r\n                        return option;\r\n                      }\r\n                      if (option && option?.values) {\r\n                        return option?.values;\r\n                      }\r\n                      return \"\";\r\n                    }}\r\n                    options={workflows}\r\n                    value={basedOnWorkflow || null}\r\n                    onChange={(e, newValue) => {\r\n                      console.log(newValue);\r\n                      setBasedOnWorkflow(newValue?.values);\r\n                      switch (newValue?.values) {\r\n                        case \"Amount\":\r\n                          setAmount(true);\r\n                          setLevels(false);\r\n                          break;\r\n                        case \"Level\":\r\n                          setLevels(true);\r\n                          setAmount(false);\r\n                          break;\r\n                        default:\r\n                          setAmount(true);\r\n                          setLevels(false);\r\n                          break;\r\n                      }\r\n                    }}\r\n                    isOptionEqualToValue={(option, value) =>\r\n                      option?.values === value || value === \"\"\r\n                    }\r\n                    renderInput={(params) => (\r\n                      <TextField\r\n                        {...params}\r\n                        placeholder=\"Workflow Based On\"\r\n                        variant=\"outlined\"\r\n                        autoComplete=\"off\"\r\n                      />\r\n                    )}\r\n                  />\r\n                  {!basedOnWorkflow && (\r\n                    <Div style={{ color: \"red\" }}>\r\n                      {errors?.basedOnWorkflow}\r\n                    </Div>\r\n                  )}\r\n                </Div>\r\n              </Grid>\r\n\r\n              <Grid item xs={12} className=\"row\" sx={{ mt: 1 }}>\r\n                <Typography className=\"col-md-4 col-xl-2 input-label\" sx={{ mt: 2 }}>\r\n                  Rule Name <span className=\"required\">*</span>\r\n                </Typography>\r\n\r\n                <Div className=\"col-md-4\">\r\n                  <Autocomplete\r\n                    className=\"search-select\"\r\n                    name=\"ruleName\"\r\n                    onFocus={getRuleNames}\r\n                    getOptionLabel={(option) => {\r\n                      if (typeof option === \"string\") {\r\n                        return option;\r\n                      }\r\n                      if (option && option?.Rule_Name) {\r\n                        return option?.Rule_Name;\r\n                      }\r\n                      return \"\";\r\n                    }}\r\n                    options={listRuleNames}\r\n                    value={ruleName}\r\n                    onChange={(e, newValue) => {\r\n                      console.log(newValue);\r\n                      setRuleName(newValue);\r\n                    }}\r\n                    isOptionEqualToValue={(option, value) =>\r\n                      option?.Rule_Name === value || value === \"\"\r\n                    }\r\n                    renderInput={(params) => (\r\n                      <TextField\r\n                        {...params}\r\n                        placeholder=\"Rule Name\"\r\n                        variant=\"outlined\"\r\n                        autoComplete=\"off\"\r\n                      />\r\n                    )}\r\n                  />\r\n                  {!ruleName && (\r\n                    <Div style={{ color: \"red\" }}>\r\n                      {errors?.ruleName}\r\n                    </Div>\r\n                  )}\r\n                </Div>\r\n                {/* <Div className=\"col-md-1\">\r\n                    <Button\r\n                      className=\"save-button\"\r\n                      onClick={handleOpenWorkflowSetup}\r\n                    >\r\n                      Add\r\n                    </Button>\r\n                  </Div> */}\r\n              </Grid>\r\n\r\n              <Grid item xs={12} className=\"row\" sx={{ mt: 1 }}>\r\n                <Typography className=\"col-md-4 col-xl-2 input-label\" sx={{ mt: 2 }}>\r\n                  No of Levels <span className=\"required\">*</span>\r\n                </Typography>\r\n                {/* <FormControl className=\"col-md-6\">\r\n                  <Autocomplete\r\n                    className=\"search-select\"\r\n                    name=\"noOfLevels\"\r\n                    getOptionLabel={(option) => {\r\n                      if (typeof option === \"number\") {\r\n                        return option.toString();\r\n                      }\r\n                      if (option && option) {\r\n                        return option;\r\n                      }\r\n                      return 0;\r\n                    }}\r\n                    options={numbers}\r\n                    value={numbers.find((option) => option === noOfLevels)}\r\n                    onChange={(e, newValue) => {\r\n                      console.log(newValue);\r\n                      setNoOfLevels(newValue);\r\n                    }}\r\n                    isOptionEqualToValue={(option, value) =>\r\n                      option === value || value === 0\r\n                    }\r\n                    renderInput={(params) => (\r\n                      <TextField\r\n                        {...params}\r\n                        placeholder=\"No of Levels\"\r\n                        variant=\"outlined\"\r\n                        autoComplete=\"off\"\r\n                      />\r\n                    )}\r\n                  />\r\n                \r\n                </FormControl> */}\r\n\r\n                <Div className=\"col-md-4\">\r\n                  <TextField\r\n                    className=\"col-12 input-box\"\r\n                    name=\"noOfLevels\"\r\n                    value={noOfLevels}\r\n                    onChange={(e) => setNoOfLevels(e.target.value)}\r\n                    placeholder=\"No of Levels\"\r\n                    variant=\"outlined\"\r\n                    autoComplete=\"off\"\r\n                  />\r\n                  {!noOfLevels && (\r\n                    <Div style={{ color: \"red\" }}>\r\n                      {errors?.noOfLevels}\r\n                    </Div>\r\n                  )}\r\n                </Div>\r\n              </Grid>\r\n\r\n            </Grid>\r\n          </Div>\r\n\r\n          {/* code for save and cancel button */}\r\n          <Div className=\"buttons\" sx={{ mt: 5 }}>\r\n            <ButtonGroup\r\n              aria-label=\"split button\"\r\n              type=\"submit\"\r\n              sx={{\r\n                mt: { xs: 0.5, lg: 0 },\r\n                mr: { xs: 0, md: 1 }\r\n              }}\r\n            >\r\n              <Button type=\"submit\" className=\"plus-button\">\r\n                Save\r\n              </Button>\r\n              <Button variant=\"contained\" className=\"icon-button\">\r\n                <FaSave size={18} />\r\n              </Button>\r\n            </ButtonGroup>\r\n\r\n            <ButtonGroup\r\n              aria-label=\"split button\"\r\n              sx={{\r\n                mt: { xs: 0.5, lg: 0 },\r\n                mr: { xs: 0, md: 1 }\r\n              }}\r\n              onClick={() => {\r\n                setListWorkflow(true);\r\n                setCreateWorkflow(false);\r\n                setWorkflowName(\"\");\r\n                setBasedOnWorkflow(\"\");\r\n                setRuleName(\"\");\r\n                setNoOfLevels(\"\");\r\n                setErrors({});\r\n              }}\r\n            >\r\n              <Button className=\"plus-button\">Cancel</Button>\r\n              <Button variant=\"contained\" className=\"icon-button\">\r\n                <TiCancel size={24} />\r\n              </Button>\r\n            </ButtonGroup>\r\n          </Div>\r\n        </form>\r\n      </Div>\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateWorkflow;\r\n","import JumboContentLayoutMain from \"@jumbo/components/JumboContentLayout/JumboContentLayoutMain\";\r\nimport JumboScrollbar from \"@jumbo/components/JumboScrollbar\";\r\nimport Div from \"@jumbo/shared/Div\";\r\nimport {\r\n  Grid,\r\n  IconButton,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { BiEdit } from \"react-icons/bi\";\r\nimport { MdDelete } from \"react-icons/md\";\r\nimport { toast } from \"react-toastify\";\r\nimport EditWorkflow from \"./EditWorkflow\";\r\nimport settingServices from \"app/services/setting-api-services\";\r\nimport CreateWorkflow from \"./CreateWorkflow\";\r\nimport { BASE_URL } from \"app/services/auth-services\";\r\nimport axios from \"axios\";\r\nimport Setting from \"../../Setting\";\r\nimport ScrollToTop from \"app/pages/ScrollToTop\";\r\nimport useResponsive from \"app/pages/useResponsive\";\r\nimport { DateFormatter } from \"app/shared/ReuseComponents/DateFormatter\";\r\nimport CommonPagination from \"app/shared/ReuseComponents/CommonPagination\";\r\nimport { ErpDeleteDialogBox } from \"app/shared/ReuseComponents/ErpDialogBoxes\";\r\nimport { CustomSkeleton } from \"app/shared/ReuseComponents/StyledComponents\";\r\nimport { ErpCreateButton, ErpSearchBox } from \"app/shared/ReuseComponents/ButtonComponent\";\r\n\r\n\r\nconst WorkflowList = ({ scrollHeight }) => {\r\n  const token = localStorage.getItem(\"accesstoken\");\r\n\r\n  const header = {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n      \"Content-Type\": \"application/json\",\r\n      Accept: \"application/json\",\r\n    },\r\n  };\r\n\r\n  const [listWorkflow, setListWorkflow] = useState(true);\r\n  const [createWorkflow, setCreateWorkflow] = useState(false);\r\n  const [editWorkflow, setEditWorkflow] = useState(false);\r\n  const [openDelete, setOpenDelete] = useState(false);\r\n\r\n  const [currentDeleteId, setCurrentDeleteId] = useState(\"\");\r\n  const [currentDeleteWorkflowNo, setCurrentDeleteWorkflowNo] = useState(\"\");\r\n\r\n  const [workflows, setWorkflows] = useState([]);\r\n  const [currentWorkflows, setCurrentWorkflows] = useState([]);\r\n  const [searchData, setSearchData] = useState(\"\")\r\n\r\n\r\n  // skeleton flag\r\n  const [skeleton, setSkeleton] = useState(false);\r\n\r\n\r\n  const CreateWorkFlow = () => {\r\n    setListWorkflow(false);\r\n    setCreateWorkflow(true);\r\n  };\r\n\r\n  const [page, setPage] = useState(1);\r\n  const [count, setCount] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const rowsPerPageOptions = [10];\r\n  const totalRecords = count;\r\n  const totalPages = Math.ceil(totalRecords / rowsPerPage);\r\n  const visitedPages = page - 1;\r\n\r\n  let isMobile = useResponsive(\"down\", \"md\");\r\n\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(1);\r\n  };\r\n\r\n  const listOfWorkflows = async () => {\r\n    setSkeleton(true);\r\n    await axios\r\n      .get(`${BASE_URL}/Erpapp/WorkflowNamelist/`, header)\r\n      .then((res) => {\r\n        console.log(\"WFNAmes\", res?.data?.results);\r\n        setWorkflows(res?.data?.results);\r\n        setCount(res?.data?.count);\r\n        setSkeleton(false);\r\n      }).catch((error) => {\r\n        console.log(error);\r\n        setSkeleton(false);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    listOfWorkflows();\r\n  }, []);\r\n\r\n  const handleEditPopup = (data) => {\r\n    setEditWorkflow(true);\r\n    setListWorkflow(false);\r\n    setCurrentWorkflows({\r\n      id: data?.id,\r\n      WorkflowName_Id: data?.WorkflowName_Id,\r\n      Partner_Id: data?.Partner_Id,\r\n      WorkflowRule_Id: data?.WorkflowRule_Id,\r\n      Rule_Name: data?.Rule_Name,\r\n      Workflow_Name: data?.Workflow_Name,\r\n      Workflow_Basedon: data?.Workflow_Basedon,\r\n      Noof_Level: data?.Noof_Level,\r\n      Created_By: data?.Created_By,\r\n    });\r\n  };\r\n\r\n  const handleDeletePopup = (data) => {\r\n    console.log(data)\r\n    setOpenDelete(true);\r\n    setCurrentDeleteId(data?.id);\r\n    setCurrentDeleteWorkflowNo(data?.WorkflowName_Id);\r\n  };\r\n\r\n  const deleteData = (e) => {\r\n    e.preventDefault();\r\n\r\n    settingServices\r\n      .deleteWorkflowName(currentDeleteWorkflowNo, header)\r\n      .then((response) => {\r\n        console.log(response);\r\n        toast.success(`${currentDeleteWorkflowNo} is Deleted Successfully`);\r\n        setOpenDelete(false);\r\n        listOfWorkflows();\r\n        // window.location.reload();\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const handleSearch = (data) => {\r\n    axios\r\n      .get(`${BASE_URL}/Erpapp/workflownamesearch/?search=${data}`, header)\r\n      .then((res) => {\r\n        console.log(res?.data);\r\n        setWorkflows(res?.data);\r\n        setCount(res?.data?.length);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"ds\", error);\r\n      });\r\n  };\r\n\r\n\r\n  const handleSearchWorkflows = (e) => {\r\n    var data = e.target.value;\r\n    setSearchData(data);\r\n    data !== \"\" ? handleSearch(data) : listOfWorkflows();\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <JumboContentLayoutMain>\r\n        <Setting />\r\n        <Div sx={{ display: listWorkflow === true ? \"block\" : \"none\" }}>\r\n          <Typography variant=\"h3\" sx={{ fontWeight: 600 }}>\r\n            Workflow List - Count : {count || 0}\r\n          </Typography>\r\n          <Typography variant=\"h4\" sx={{ fontWeight: 500 }}>\r\n            User shall use this form to list all the workflows created by\r\n            administrator. Administrator can also edit and remove a workflow.\r\n          </Typography>\r\n\r\n          <Grid container sx={{ mt: 2 }}>\r\n            <Grid\r\n              item\r\n              className=\"filter\"\r\n              xs={12}\r\n              md={1}\r\n              lg={3}\r\n              xl={5}\r\n            ></Grid>\r\n\r\n            <Grid item xs={12} md={5} sm={12} lg={4} xl={4} >\r\n              <ErpSearchBox handleChange={handleSearchWorkflows} searchData={searchData} />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={6} sm={12} lg={5} xl={3} sx={{ display: \"flex\", justifyContent: \"flex-end\", mt: { xs: 1, md: 0 } }}>\r\n              <ErpCreateButton handleClick={CreateWorkFlow} name={\"Create Workflow\"} />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {/* code for workflow list table */}\r\n          <Div sx={{ mt: 1 }}>\r\n            <React.Fragment>\r\n              <JumboScrollbar\r\n                autoHeight={true}\r\n                autoHideTimeout={4000}\r\n                autoHeightMin={scrollHeight ? scrollHeight : 360}\r\n                autoHide={true}\r\n                hideTracksWhenNotNeeded\r\n                id=\"no-more-tables\"\r\n              >\r\n                <Table stickyHeader className=\"table\">\r\n                  <TableHead className=\"table-head\">\r\n                    <TableRow>\r\n                      <TableCell sx={{ height: \"53px\" }}>Date</TableCell>\r\n                      <TableCell>Workflow Id</TableCell>\r\n                      <TableCell>\r\n                        Workflow Name\r\n                      </TableCell>\r\n                      <TableCell sx={{ minWidth: \"180px !important\" }}>\r\n                        Workflow Based On\r\n                      </TableCell>\r\n                      <TableCell>Rule Name</TableCell>\r\n                      <TableCell>Rule Actions</TableCell>\r\n                      <TableCell>No Of Levels</TableCell>\r\n                      <TableCell>Action</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {skeleton ? <CustomSkeleton headCount={8} rowCount={10} />\r\n                      : workflows?.length > 0 ? (\r\n                        workflows\r\n                          .slice(\r\n                            visitedPages * rowsPerPage,\r\n                            visitedPages * rowsPerPage + rowsPerPage\r\n                          )\r\n                          .map((data, index) => {\r\n                            return (\r\n                              <TableRow hover key={index} sx={{ fontSize: 14 }}>\r\n                                <TableCell data-title=\"Date\">\r\n                                  {/* {data.Created_Date.slice(0, 10)} */}\r\n                                  <DateFormatter date={data?.Created_Date} />\r\n                                </TableCell>\r\n                                <TableCell data-title=\"Workflow Id\">\r\n                                  {data.WorkflowName_Id}\r\n                                </TableCell>\r\n                                <TableCell data-title=\"Workflow Name\">\r\n                                  {data.Workflow_Name}\r\n                                </TableCell>\r\n                                <TableCell data-title=\"Workflow Based On\">\r\n                                  {data.Workflow_Basedon}\r\n                                </TableCell>\r\n                                <TableCell data-title=\"Rule Name\">\r\n                                  {data?.WorkflowRule_Id?.Rule_Name}\r\n                                </TableCell>\r\n                                <TableCell data-title=\"Rule Actions\">\r\n                                  {data.WorkflowRule_Id?.Action}\r\n                                </TableCell>\r\n                                <TableCell data-title=\"No Of Levels\">\r\n                                  {data.Noof_Level}\r\n                                </TableCell>\r\n                                <TableCell data-title=\"Action\">\r\n                                  <Div>\r\n                                    <IconButton\r\n                                      size=\"small\"\r\n                                      className=\"edit-icon\"\r\n                                      onClick={() => handleEditPopup(data)}\r\n                                    >\r\n                                      <BiEdit />\r\n                                    </IconButton>\r\n\r\n                                    <IconButton\r\n                                      size=\"small\"\r\n                                      className=\"delete-icon\"\r\n                                      onClick={() => {\r\n                                        handleDeletePopup(data);\r\n                                      }}\r\n                                    >\r\n                                      <MdDelete />\r\n                                    </IconButton>\r\n                                  </Div>\r\n                                </TableCell>\r\n\r\n                                {/* <Dialog onClose={handleClose} open={open}>\r\n                          <List sx={{ pt: 0 }}>\r\n                            <ListItem button\r\n                            // onClick={() => handleListItemClick()}\r\n                            >\r\n                              <ListItemText>\r\n                                <IconButton\r\n                                  size=\"small\"\r\n                                  sx={{\r\n                                    cursor: \"pointer\",\r\n                                    \"&:hover\": {\r\n                                      color: \"#00BFFF\",\r\n                                    },\r\n                                  }}\r\n                                >\r\n                                  <BiEdit />\r\n                                </IconButton>Edit\r\n                              </ListItemText>\r\n                            </ListItem>\r\n                            <ListItem button\r\n                            // onClick={() => handleListItemClick()}\r\n                            >\r\n                              <ListItemText>\r\n                                <IconButton\r\n                                  size=\"small\"\r\n                                  sx={{\r\n                                    cursor: \"pointer\",\r\n                                    \"&:hover\": {\r\n                                      color: \"#00BFFF\",\r\n                                    },\r\n                                  }}\r\n                                >\r\n                                  <MdDelete />\r\n                                </IconButton> Delete</ListItemText>\r\n                            </ListItem>\r\n                          </List>\r\n                        </Dialog> */}\r\n                              </TableRow>\r\n                            );\r\n                          })\r\n                      ) : (\r\n                        <TableRow>\r\n                          <TableCell colSpan={8} align=\"center\">\r\n                            No Workflows\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      )}\r\n                  </TableBody>\r\n                </Table>\r\n              </JumboScrollbar>\r\n\r\n              {/* pagination */}\r\n              <Div sx={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n                <CommonPagination\r\n                  totalPages={totalPages}\r\n                  page={page}\r\n                  handleChangePage={handleChangePage}\r\n                  rowsPerPageOptions={rowsPerPageOptions}\r\n                  rowsPerPage={rowsPerPage}\r\n                  handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n              </Div>\r\n            </React.Fragment>\r\n          </Div>\r\n\r\n          {/* Delete workflow popup */}\r\n          <ErpDeleteDialogBox flag={openDelete} setFlag={setOpenDelete} handleClick={deleteData} content={\"Are you sure you want to delete the workflow\"} id={currentDeleteWorkflowNo} />\r\n\r\n\r\n        </Div>\r\n\r\n        <Div sx={{ display: createWorkflow === true ? \"block\" : \"none\" }}>\r\n          {/* <Workflow\r\n            setCreateWorkflow={setCreateWorkflow}\r\n            setListWorkflow={setListWorkflow}\r\n          /> */}\r\n          <CreateWorkflow\r\n            setCreateWorkflow={setCreateWorkflow}\r\n            setListWorkflow={setListWorkflow}\r\n            listOfWorkflows={listOfWorkflows}\r\n            workflowsList={workflows}\r\n          />\r\n        </Div>\r\n        <Div sx={{ display: editWorkflow === true ? \"block\" : \"none\" }}>\r\n          <EditWorkflow\r\n            setEditWorkflow={setEditWorkflow}\r\n            setListWorkflow={setListWorkflow}\r\n            listOfWorkflows={listOfWorkflows}\r\n            currentWorkflows={currentWorkflows}\r\n          />\r\n        </Div>\r\n        <ScrollToTop Scrollheight={180} />\r\n      </JumboContentLayoutMain>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WorkflowList;\r\n","// @mui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport useMediaQuery from '@mui/material/useMediaQuery';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function useResponsive(query, key, start, end) {\r\n  const theme = useTheme();\r\n\r\n  const mediaUp = useMediaQuery(theme.breakpoints.up(key));\r\n\r\n  const mediaDown = useMediaQuery(theme.breakpoints.down(key));\r\n\r\n  const mediaBetween = useMediaQuery(theme.breakpoints.between(start, end));\r\n\r\n  const mediaOnly = useMediaQuery(theme.breakpoints.only(key));\r\n\r\n  if (query === 'up') {\r\n    return mediaUp;\r\n  }\r\n\r\n  if (query === 'down') {\r\n    return mediaDown;\r\n  }\r\n\r\n  if (query === 'between') {\r\n    return mediaBetween;\r\n  }\r\n\r\n  if (query === 'only') {\r\n    return mediaOnly;\r\n  }\r\n  return null;\r\n}\r\n","import { useJumboLayoutSidebar } from \"@jumbo/hooks\";\r\nimport { Grid, MenuItem, Pagination, Select } from \"@mui/material\";\r\nimport useResponsive from \"app/pages/useResponsive\";\r\nimport React, { memo } from \"react\";\r\n\r\nconst CommonPagination = ({\r\n  totalPages,\r\n  page = 1,\r\n  handleChangePage = () => { },\r\n  rowsPerPageOptions,\r\n  rowsPerPage,\r\n  handleChangeRowsPerPage = () => { }\r\n}) => {\r\n\r\n  let isMobile = useResponsive(\"down\", \"md\");\r\n  let isTabOnly = useResponsive(\"down\", \"lg\");\r\n\r\n  const { sidebarOptions, setSidebarOptions } = useJumboLayoutSidebar();\r\n\r\n  console.log(\"sidebarOptions from pagination\", sidebarOptions?.open);\r\n\r\n  return (\r\n    <Grid container spacing={1} sx={{ mt: 2, display: \"flex\", alignItems: \"center\" }}>\r\n      <Grid item xs={12} md={0} lg={sidebarOptions?.open ? 1.5 : 3} xl={4.5}></Grid>\r\n      <Grid item xs={12} md={sidebarOptions?.open ? 5 : 4} lg={sidebarOptions?.open ? 4 : 4} xl={3.5} sx={{ display: \"flex\", justifyContent: { xs: \"center\", md: \"flex-end\" }, alignItems: \"center\", gap: \"10px !important\" }}>\r\n        {/* <label className=\"input-label\">Rows per page</label>\r\n        <Select\r\n          className=\"input-pagination-select\"\r\n          value={rowsPerPage}\r\n          onChange={handleChangeRowsPerPage}\r\n          variant=\"outlined\"\r\n          sx={{ minWidth: \"60px !important\" }}\r\n        >\r\n          {rowsPerPageOptions?.map((option) => (\r\n            <MenuItem key={option} value={option}>\r\n              {option}\r\n            </MenuItem>\r\n          ))}\r\n        </Select> */}\r\n      </Grid>\r\n      <Grid item xs={12} md={sidebarOptions?.open ? 7 : 8} lg={sidebarOptions?.open ? 6.5 : 5} xl={4} sx={{ display: \"flex\", justifyContent: { xs: \"center\", md: \"flex-end\" }, alignItems: \"center\", gap: \"10px !important\" }}>\r\n        <Pagination\r\n          color=\"primary\"\r\n          count={totalPages}\r\n          page={page}\r\n          onChange={(e, newValue) => handleChangePage(e, newValue)}\r\n          variant=\"outlined\"\r\n          shape=\"rounded\"\r\n          showFirstButton={Boolean(isMobile || isTabOnly) ? Boolean(sidebarOptions?.open || isMobile) ? false : true : true}\r\n          showLastButton={Boolean(isMobile || isTabOnly) ? Boolean(sidebarOptions?.open || isMobile) ? false : true : true}\r\n          siblingCount={0}\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default memo(CommonPagination);\r\n","import Div from '@jumbo/shared/Div'\r\nimport { Box, Button, ButtonGroup, Dialog, DialogActions, DialogContent, IconButton, Typography, styled, useMediaQuery, useTheme } from '@mui/material'\r\nimport React from 'react'\r\nimport { MdCheck, MdClear, MdClose, MdDelete } from 'react-icons/md'\r\nimport { TiCancel } from 'react-icons/ti'\r\n\r\n\r\nconst DialogBox = styled(Dialog)(({ theme }) => ({\r\n    '& .MuiDialog-paper': {\r\n        borderRadius: 5,\r\n        backgroundColor: theme.palette.background.default,\r\n        border: `1px solid ${theme.palette.divider}`,\r\n    },\r\n}));\r\n\r\nconst StyledIconButton = styled(IconButton)(({ theme }) => ({\r\n    color: theme.palette.error.main,\r\n    '&:hover': {\r\n        backgroundColor: theme.palette.error.light,\r\n        color: theme.palette.background.default,\r\n    },\r\n}));\r\n\r\nconst CustomTypography = styled(Typography)(({ theme }) => ({\r\n    padding: theme.spacing(0.5),\r\n    textAlign: 'left',\r\n    // backgroundColor: theme.palette.error.light,\r\n    // color: theme.palette.error.contrastText,\r\n    borderRadius: theme.shape.borderRadius,\r\n}));\r\n\r\n\r\nexport const ErpDeleteDialogBox = ({ flag, setFlag, handleClick, content, id, isMobile }) => {\r\n    const theme = useTheme();\r\n    const isMdUp = useMediaQuery(theme.breakpoints.down('md'));\r\n\r\n    return (\r\n        <DialogBox open={flag}\r\n            maxWidth={window.innerWidth <= 600 ? 'xs' : window.innerWidth <= 768 ? 'sm' : window.innerWidth <= 992 ? 'sm' : 'sm'}\r\n            fullWidth\r\n            onClose={() => setFlag(false)}\r\n        >\r\n            <DialogContent>\r\n                <Typography variant=\"h3\">\r\n                    {content}\r\n                    <span>&nbsp;</span>\r\n                    <span style={{ fontWeight: 700 }}>\r\n                        {\" \"}\r\n                        \"{id}\" ?\r\n                    </span>\r\n                </Typography>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                {isMobile ? isMobile : isMdUp ? (\r\n                    <>\r\n                        <Button variant=\"contained\" color={\"error\"} endIcon={<MdDelete />} onClick={handleClick}>\r\n                            Delete\r\n                        </Button>\r\n                        <Button variant=\"contained\" endIcon={<TiCancel />} onClick={() => setFlag(false)}>\r\n                            Cancel\r\n                        </Button>\r\n                    </>\r\n                ) :\r\n                    <Div className=\"buttons\">\r\n                        <ButtonGroup\r\n                            aria-label=\"split button\"\r\n                            onClick={handleClick}\r\n                            sx={{\r\n                                mt: { xs: 0.5, lg: 0 },\r\n                                mr: { xs: 0, md: 1 }\r\n                            }}\r\n                        >\r\n                            <Button className=\"plus-button\">\r\n                                Delete\r\n                            </Button>\r\n                            <Button variant=\"contained\" className=\"icon-button\">\r\n                                <MdDelete size={18} />\r\n                            </Button>\r\n                        </ButtonGroup>\r\n\r\n                        <ButtonGroup\r\n                            aria-label=\"split button\"\r\n                            onClick={() => setFlag(false)}\r\n                            sx={{\r\n                                mt: { xs: 0.5, lg: 0 },\r\n                                mr: { xs: 0, md: 1 }\r\n                            }}\r\n                        >\r\n                            <Button className=\"plus-button\">Cancel</Button>\r\n                            <Button variant=\"contained\" className=\"icon-button\">\r\n                                <TiCancel size={22} />\r\n                            </Button>\r\n                        </ButtonGroup>\r\n                    </Div>\r\n                }\r\n            </DialogActions>\r\n        </DialogBox>\r\n    )\r\n}\r\n\r\n\r\nexport const ErpConfirmDialogBox = ({ flag, setFlag, handleClick, content, isMobile }) => {\r\n    return (\r\n        <Dialog\r\n            open={flag}\r\n            maxWidth=\"sm\"\r\n            fullWidth\r\n        >\r\n            <DialogContent>\r\n                <Typography variant='h4'>\r\n                    {content}\r\n                </Typography>\r\n                <br />\r\n                <Typography variant='h4'>\r\n                    Do you want still to continue...\r\n                </Typography>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                {isMobile ? (\r\n                    <>\r\n                        <Button variant=\"contained\" color={\"error\"} endIcon={<MdCheck />} onClick={() => setFlag(false)} >\r\n                            Yes\r\n                        </Button>\r\n                        <Button variant=\"contained\" endIcon={<MdClear />} onClick={handleClick}>\r\n                            No\r\n                        </Button>\r\n                    </>\r\n                ) :\r\n                    <Div className=\"buttons\">\r\n                        <ButtonGroup\r\n                            aria-label=\"split button\"\r\n                            onClick={() => setFlag(false)}\r\n                            sx={{\r\n                                mt: { xs: 0.5, lg: 0 },\r\n                                mr: { xs: 0, md: 1 }\r\n                            }}\r\n                        >\r\n                            <Button className=\"plus-button\">\r\n                                Yes\r\n                            </Button>\r\n                            <Button variant=\"contained\" className=\"icon-button\">\r\n                                <MdCheck size={16} />\r\n                            </Button>\r\n                        </ButtonGroup>\r\n                        <ButtonGroup\r\n                            aria-label=\"split button\"\r\n                            onClick={handleClick}\r\n                            sx={{\r\n                                mt: { xs: 0.5, lg: 0 },\r\n                                mr: { xs: 0, md: 1 }\r\n                            }}\r\n                        >\r\n                            <Button className=\"plus-button\">\r\n                                No\r\n                            </Button>\r\n                            <Button variant=\"contained\" className=\"icon-button\">\r\n                                <MdClear size={16} />\r\n                            </Button>\r\n                        </ButtonGroup>\r\n                    </Div>\r\n                }\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\n\r\nexport const ErpStatusConfirmDialogBox = ({ flag, setFlag, handleClick, content, isMobile }) => {\r\n    return (\r\n        <Dialog\r\n            open={flag}\r\n            maxWidth=\"sm\"\r\n            fullWidth\r\n        >\r\n            <DialogContent>\r\n                <Typography variant='h4'>\r\n                    {content}\r\n                </Typography>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                {isMobile ? (\r\n                    <>\r\n                        <Button variant=\"contained\" color={\"error\"} endIcon={<MdCheck />} onClick={handleClick} >\r\n                            Yes\r\n                        </Button>\r\n                        <Button variant=\"contained\" endIcon={<MdClear />} onClick={() => setFlag(false)} >\r\n                            No\r\n                        </Button>\r\n                    </>\r\n                ) :\r\n                    <Div className=\"buttons\">\r\n                        <ButtonGroup\r\n                            aria-label=\"split button\"\r\n                            onClick={handleClick}\r\n                            sx={{\r\n                                mt: { xs: 0.5, lg: 0 },\r\n                                mr: { xs: 0, md: 1 }\r\n                            }}\r\n                        >\r\n                            <Button className=\"plus-button\">\r\n                                Yes\r\n                            </Button>\r\n                            <Button variant=\"contained\" className=\"icon-button\">\r\n                                <MdCheck size={16} />\r\n                            </Button>\r\n                        </ButtonGroup>\r\n                        <ButtonGroup\r\n                            aria-label=\"split button\"\r\n                            onClick={() => setFlag(false)}\r\n                            sx={{\r\n                                mt: { xs: 0.5, lg: 0 },\r\n                                mr: { xs: 0, md: 1 }\r\n                            }}\r\n                        >\r\n                            <Button className=\"plus-button\">\r\n                                No\r\n                            </Button>\r\n                            <Button variant=\"contained\" className=\"icon-button\">\r\n                                <MdClear size={16} />\r\n                            </Button>\r\n                        </ButtonGroup>\r\n                    </Div>\r\n                }\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\n\r\nexport const ErpAlertViewDialogBox = ({ flag, setFlag, isMobile }) => {\r\n    return (\r\n        <DialogBox\r\n            open={flag}\r\n            maxWidth=\"xs\"\r\n        // onClose={() => setFlag(false)} // Optional: You can enable this if you want the dialog to close on backdrop click.\r\n        >\r\n            <DialogContent>\r\n                <Div sx={{ p: 0, m: 0, mb: 2, display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\r\n                    <CustomTypography variant='h3'>\r\n                        Alert\r\n                    </CustomTypography>\r\n\r\n                    <StyledIconButton onClick={() => setFlag(false)} sx={{ p: 0.3 }}>\r\n                        <MdClose size={22} />\r\n                    </StyledIconButton>\r\n                </Div>\r\n                <Typography variant='h4' sx={{ color: 'text.secondary' }}>\r\n                    You don't have the permission to view this page.\r\n                </Typography>\r\n            </DialogContent>\r\n        </DialogBox>\r\n    )\r\n}\r\n\r\n\r\n"],"names":["_ref","Scrollheight","isVisible","setIsVisible","useState","isAboveXl","useResponsive","handleScroll","window","scrollY","useEffect","addEventListener","removeEventListener","_jsx","style","display","justifyContent","alignItems","position","bottom","right","zIndex","borderRadius","boxShadow","padding","width","height","backgroundColor","color","transition","cursor","onClick","scrollToTopHandler","scrollTo","top","behavior","className","children","FaArrowCircleUp","size","Setting","_Fragment","Div","Typography","variant","sx","fontWeight","mt","workflows","id","values","setListWorkflow","setEditWorkflow","listOfWorkflows","currentWorkflows","token","localStorage","getItem","listRuleNames","setListRuleNames","concat","workflowName","setWorkflowName","ruleName","setRuleName","basedOnWorkflow","setBasedOnWorkflow","noOfLevels","setNoOfLevels","errors","setErrors","defaultRuleName","useRef","Rule_Name","defaultWorkflowName","Workflow_Name","console","log","defaultWorkflowBasedon","Workflow_Basedon","defaultNoofLevel","Noof_Level","Array","from","length","_","i","_jsxs","onSubmit","e","preventDefault","validateForm","newErrors","undefined","Object","keys","payload","WorkflowName_Id","Partner_Id","parseInt","WorkflowRule_Id","Company_Id","Created_By","Updated_By","axios","BASE_URL","headers","Authorization","Accept","then","res","data","status","toast","success","error","catch","message","minHeight","Grid","container","ml","sm","md","item","xs","TextField","name","value","onChange","target","placeholder","autoComplete","Autocomplete","getOptionLabel","option","options","newValue","isOptionEqualToValue","renderInput","params","_objectSpread","onFocus","getRuleNames","results","ButtonGroup","type","lg","mr","Button","FaSave","TiCancel","setCreateWorkflow","workflowsList","header","amount","setAmount","levels","setLevels","find","opt","warning","Created_Date","todayDate","_res$data2","_res$data","scrollHeight","listWorkflow","createWorkflow","editWorkflow","openDelete","setOpenDelete","currentDeleteId","setCurrentDeleteId","currentDeleteWorkflowNo","setCurrentDeleteWorkflowNo","setWorkflows","setCurrentWorkflows","searchData","setSearchData","skeleton","setSkeleton","page","setPage","count","setCount","rowsPerPage","setRowsPerPage","totalRecords","totalPages","Math","ceil","visitedPages","async","_res$data3","JumboContentLayoutMain","xl","ErpSearchBox","handleChange","_res$data4","handleSearch","ErpCreateButton","handleClick","CreateWorkFlow","React","JumboScrollbar","autoHeight","autoHideTimeout","autoHeightMin","autoHide","hideTracksWhenNotNeeded","Table","stickyHeader","TableHead","TableRow","TableCell","minWidth","TableBody","CustomSkeleton","headCount","rowCount","slice","map","index","_data$WorkflowRule_Id","_data$WorkflowRule_Id2","hover","fontSize","DateFormatter","date","Action","IconButton","handleEditPopup","BiEdit","handleDeletePopup","MdDelete","colSpan","align","flexWrap","CommonPagination","handleChangePage","event","newPage","rowsPerPageOptions","handleChangeRowsPerPage","ErpDeleteDialogBox","flag","setFlag","settingServices","deleteWorkflowName","response","content","CreateWorkflow","EditWorkflow","ScrollToTop","query","key","start","end","theme","useTheme","mediaUp","useMediaQuery","breakpoints","up","mediaDown","down","mediaBetween","between","mediaOnly","only","isMobile","isTabOnly","sidebarOptions","setSidebarOptions","useJumboLayoutSidebar","open","spacing","gap","Pagination","shape","showFirstButton","Boolean","showLastButton","siblingCount","memo","DialogBox","styled","Dialog","palette","background","default","border","divider","StyledIconButton","_ref2","main","light","CustomTypography","_ref3","textAlign","_ref4","isMdUp","maxWidth","innerWidth","fullWidth","onClose","DialogContent","DialogActions","endIcon","ErpConfirmDialogBox","_ref5","MdCheck","MdClear","ErpAlertViewDialogBox","_ref7","p","m","mb","MdClose"],"sourceRoot":""}