{"version":3,"file":"static/js/661.47abefc1.chunk.js","mappings":"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","sources":["app/pages/ScrollToTop.js","app/pages/settings/Setting.js","app/pages/settings/company/UpdateCompanyDetails.js","app/pages/settings/company/EditCompanyDetails.js","app/pages/useResponsive.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { FaArrowCircleUp } from 'react-icons/fa';\r\nimport useResponsive from './useResponsive';\r\n\r\nconst ScrollToTop = ({ Scrollheight }) => {\r\n  const [isVisible, setIsVisible] = useState(false);\r\n  const isAboveXl = useResponsive(\"up\", \"xl\");\r\n\r\n  const handleScroll = () => {\r\n    if (window.scrollY > Scrollheight) {\r\n      setIsVisible(true);\r\n    } else {\r\n      setIsVisible(false);\r\n    }\r\n  };\r\n\r\n  const scrollToTopHandler = () => {\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: 'smooth',\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', handleScroll);\r\n\r\n    return () => {\r\n      window.removeEventListener('scroll', handleScroll);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: isVisible ? 'flex' : 'none',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        position: 'fixed',\r\n        bottom: isAboveXl ? \"10%\" : \"10.5%\",\r\n        right: '10px',\r\n        zIndex: 99999,\r\n        borderRadius: '50%',\r\n        boxShadow: '0px 2px 9px lightgray',\r\n        padding: 0.5,\r\n        width: '35px',\r\n        height: '35px',\r\n        backgroundColor: 'white',\r\n        color: '#00bfff',\r\n        transition: 'linear 1.5s ease-in-out',\r\n        cursor: 'pointer',\r\n      }}\r\n      onClick={scrollToTopHandler}\r\n      className=\"topToBottomAnimation\"\r\n    >\r\n      <FaArrowCircleUp size={22} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ScrollToTop;\r\n","import React from 'react';\nimport { Typography } from '@mui/material';\nimport Div from \"@jumbo/shared/Div\";\nimport './Setting.css';\n\n\n\n\nconst Setting = () => {\n  return ( \n    <>\n      <Div>\n        {/* <img src='.\\images\\mainlogo-icon.jpg' width={30} height={30}></img> */}\n        <Typography variant='h1' sx={{ fontWeight: 800, mt: -2}}>Settings</Typography>\n      </Div>\n    </>\n    \n  )\n}\n\nexport default Setting;\n","import Div from \"@jumbo/shared/Div\";\r\nimport Span from \"@jumbo/shared/Span\";\r\nimport { toast } from \"react-toastify\";\r\nimport {\r\n  Autocomplete,\r\n  Button,\r\n  ButtonGroup,\r\n  Checkbox,\r\n  FormControl,\r\n  FormControlLabel,\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"app/services/auth-services\";\r\nimport { MdSave } from \"react-icons/md\";\r\nimport { FaSave } from \"react-icons/fa\";\r\nimport { CommonOverviewSkeleton } from \"app/shared/ReuseComponents/StyledComponents\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchUserRolePermissions, selectedUserRolePermissions } from \"app/redux/actions/fetchUserRolePermissions\";\r\n\r\n\r\n\r\nconst date = [\r\n  { label: 1, yearformat: \"yyyy-MM-dd\" },\r\n  { label: 2, yearformat: \"MM-dd-yyyy\" },\r\n  { label: 3, yearformat: \"dd-MM-yyyy\" },\r\n];\r\n\r\nconst currencies = [\r\n  { label: 1, curency: \"INR\", format: \"Rupees - ₹\" },\r\n  { label: 2, curency: \"USD\", format: \"Dollar - $\" },\r\n  { label: 3, curency: \"JPY\", format: \"Yen – ¥\" },\r\n  { label: 4, curency: \"EUR\", format: \"Euro - €\" },\r\n  { label: 5, curency: \"BRL\", format: \"Real - R$\" },\r\n];\r\n\r\n\r\nconst UpdateCompanyDetails = ({ skeleton, id, compId }) => {\r\n  const token = localStorage.getItem(\"accesstoken\");\r\n\r\n  const header = {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n      \"Content-Type\": \"application/json\",\r\n      Accept: \"application/json\",\r\n    },\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n  const { userRolePermissions, formPermissions, modulePermissions } = useSelector(selectedUserRolePermissions);\r\n\r\n\r\n\r\n  const [business, setBusiness] = useState([]);\r\n  const [companyAdd, setCompanyAdd] = useState({});\r\n  const [fiscal, setFiscal] = useState([]);\r\n  const [companyLogo, setCompanyLogo] = useState(\"\");\r\n  const [companyMail, setCompanyMail] = useState(\"\");\r\n  const [companyName, setCompanyName] = useState(\"\");\r\n  const [currency, setCurrency] = useState(null);\r\n  const [currencyFormat, setCurrencyFormat] = useState(null);\r\n  const [dateFormat, setDateFormat] = useState(null);\r\n  const [fiscalMonth, setFiscalMonth] = useState(null);\r\n  const [checkMonth, setCheckMonth] = useState(false);\r\n  const [base64, setbase64] = useState(\"\");\r\n\r\n  const [selectedCountry, setSelectedCountry] = useState(null);\r\n  const [selectedState, setSelectedState] = useState(null);\r\n  const [selectedCity, setSelectedCity] = useState(null);\r\n  const [countries, setCountries] = useState([]);\r\n  const [states, setStates] = useState([]);\r\n  const [cities, setCities] = useState([]);\r\n\r\n  const [showProfile, setShowProfile] = useState(true);\r\n  const [showDetails, setShowDetails] = useState(false);\r\n  const [showYear, setShowYear] = useState(false);\r\n  const [showHour, setShowHour] = useState(false);\r\n  const [showCurrencies, setShowCurrencies] = useState(false);\r\n\r\n  const [accountingPeriods, setAccountingPeriods] = useState([]);\r\n  const [errors, setErrors] = useState({})\r\n\r\n  const [sunCheckbox, setSunCheckbox] = useState(false);\r\n  const [monCheckbox, setMonCheckbox] = useState(false);\r\n  const [tueCheckbox, setTueCheckbox] = useState(false);\r\n  const [wedCheckbox, setWedCheckbox] = useState(false);\r\n  const [thuCheckbox, setThuCheckbox] = useState(false);\r\n  const [friCheckbox, setFriCheckbox] = useState(false);\r\n  const [satCheckbox, setSatCheckbox] = useState(false);\r\n\r\n\r\n  const [loadingStatus, setLoadingStatus] = useState(false);\r\n\r\n\r\n  const ShowCompanyProfile = () => {\r\n    setShowProfile(true);\r\n    setShowHour(false);\r\n    setShowYear(false);\r\n    setShowDetails(false);\r\n    setShowCurrencies(false);\r\n  };\r\n\r\n  const ShowCompanyDetails = () => {\r\n    setShowDetails(true);\r\n    setShowYear(false);\r\n    setShowHour(false);\r\n    setShowCurrencies(false);\r\n    setShowProfile(false);\r\n  };\r\n\r\n  const ShowFiscalYear = () => {\r\n    setShowYear(true);\r\n    setShowHour(false);\r\n    setShowCurrencies(false);\r\n    setShowDetails(false);\r\n    setShowProfile(false);\r\n  };\r\n\r\n  const ShowBusinessHour = () => {\r\n    setShowHour(true);\r\n    setShowYear(false);\r\n    setShowCurrencies(false);\r\n    setShowDetails(false);\r\n    setShowProfile(false);\r\n  };\r\n\r\n  const ShowCurrencies = () => {\r\n    setShowCurrencies(true);\r\n    setShowHour(false);\r\n    setShowYear(false);\r\n    setShowDetails(false);\r\n    setShowProfile(false);\r\n  };\r\n\r\n  const companyId = localStorage.getItem(\"OrganizationId\");\r\n\r\n  const getCompanyDetails = async () => {\r\n    setLoadingStatus(true);\r\n    await axios\r\n      .get(`${BASE_URL}/Erpapp/CompanyCRUD/?id=${companyId}`, header)\r\n      .then((res) => {\r\n        console.log(\"D\", res.data);\r\n\r\n        setBusiness(res?.data?.Business_Hour);\r\n        setSunCheckbox(res?.data?.Business_Hour?.Sunday_Chekbox);\r\n        setMonCheckbox(res?.data?.Business_Hour?.Monday_Chekbox);\r\n        setTueCheckbox(res?.data?.Business_Hour?.Tuesday_Chekbox);\r\n        setWedCheckbox(res?.data?.Business_Hour?.Wednessday_Chekbox);\r\n        setThuCheckbox(res?.data?.Business_Hour?.Thursday_Chekbox);\r\n        setFriCheckbox(res?.data?.Business_Hour?.Friday_Chekbox);\r\n        setSatCheckbox(res?.data?.Business_Hour?.Saturday_Chekbox);\r\n\r\n        setCompanyAdd(res?.data?.CompanyAddress);\r\n        setFiscal(res?.data?.Fiscal_Year);\r\n        setCompanyMail(res?.data?.CompanyMail);\r\n        setCompanyName(res?.data?.Company_Name);\r\n        setCompanyLogo(res?.data?.CompanyLogo);\r\n\r\n        setCurrency(res?.data?.Currencies);\r\n        if (res?.data?.Currencies === \"INR\") {\r\n          setCurrencyFormat(\"Rupees - ₹\")\r\n        } else if (res?.data?.Currencies === \"USD\") {\r\n          setCurrencyFormat(\"Dollar - $\")\r\n        } else if (res?.data?.Currencies === \"JPY\") {\r\n          setCurrencyFormat(\"Yen – ¥\")\r\n        } else if (res?.data?.Currencies === \"EUR\") {\r\n          setCurrencyFormat(\"Euro - €\")\r\n        } else if (res?.data?.Currencies === \"BRL\") {\r\n          setCurrencyFormat(\"Real - R$\")\r\n        }\r\n        setDateFormat(res?.data?.DateFormat);\r\n        setCheckMonth(res.data?.Allow_Edit);\r\n        // setCheckMonth(res?.data?.Fiscal_Year?.Calandermonth);\r\n        setFiscalMonth(res?.data?.Fiscal_Year);\r\n        setSelectedCountry(res?.data?.CompanyAddress?.Building_Country);\r\n        setSelectedState(res?.data?.CompanyAddress?.Building_State);\r\n        setSelectedCity(res?.data?.CompanyAddress?.Building_City);\r\n\r\n        fetch(`${BASE_URL}${res?.data?.CompanyLogo}`)\r\n          .then((response) => response.arrayBuffer())\r\n          .then((buffer) => {\r\n            const base64 = btoa(\r\n              new Uint8Array(buffer).reduce(\r\n                (data, byte) => data + String.fromCharCode(byte),\r\n                \"\"\r\n              )\r\n            );\r\n            // const encoded = base64.b64encode(byte).decode('ascii');\r\n\r\n            setbase64(base64);\r\n            const urlParts = res?.data?.CompanyLogo.split(\"/\");\r\n            console.log(urlParts);\r\n            setCompanyLogo(urlParts[urlParts?.length - 1]);\r\n          });\r\n\r\n        setLoadingStatus(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"ds\", error);\r\n        setLoadingStatus(false);\r\n      });\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    getCompanyDetails();\r\n  }, [companyId])\r\n\r\n\r\n  const listofAccountingPeriod = async () => {\r\n    await axios.get(`${BASE_URL}/Erpapp/Financeyearwithoutpagination/`, header)\r\n      .then((res) => {\r\n        const lists = res?.data;\r\n        setAccountingPeriods(lists);\r\n      }).catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    listofAccountingPeriod();\r\n  }, []);\r\n\r\n\r\n  const [countryId, setCountryId] = useState(\"\");\r\n  const [stateId, setStateId] = useState(\"\");\r\n\r\n  const getCountryLists = () => {\r\n    axios\r\n      .get(`https://countriesnow.space/api/v0.1/countries`, {\r\n        headers: {\r\n          //   Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n        },\r\n      })\r\n      .then((res) => {\r\n        console.log(res?.data?.data);\r\n        setCountries(res?.data?.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"ds\", error);\r\n      });\r\n  };\r\n\r\n  const getStateLists = (country) => {\r\n    axios\r\n      .post(\r\n        `https://countriesnow.space/api/v0.1/countries/states`,\r\n        { country: country },\r\n        {\r\n          headers: {\r\n            //   Authorization: `Bearer ${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n            Accept: \"application/json\",\r\n          },\r\n        }\r\n      )\r\n      .then((res) => {\r\n        console.log(res?.data?.data);\r\n        var state = res?.data?.data;\r\n        setStates(state?.states);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"ds\", error);\r\n      });\r\n  };\r\n\r\n  const getCityLists = (state) => {\r\n    var payload = {\r\n      country: selectedCountry,\r\n      state: state,\r\n    };\r\n\r\n    axios\r\n      .post(\r\n        `https://countriesnow.space/api/v0.1/countries/state/cities`,\r\n        payload,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Accept: \"application/json\",\r\n          },\r\n        }\r\n      )\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        var city = res?.data?.data;\r\n        var citynames = city?.map((cityname) => cityname);\r\n        setCities(citynames);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"ds\", error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCountryLists();\r\n    getStateLists(selectedCountry);\r\n    getCityLists(selectedState);\r\n  }, [countryId, stateId, selectedCountry, selectedState]);\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setBusiness((values) => ({ ...values, [name]: value }));\r\n    setCompanyAdd((values) => ({ ...values, [name]: value }));\r\n    setFiscal((values) => ({ ...values, [name]: value }));\r\n    console.log(\"GGG\", fiscal?.Calendar_MonthName);\r\n  };\r\n\r\n  const handleChangeMonth = (e) => {\r\n    var month = e.target.checked;\r\n    setCheckMonth(month);\r\n    console.log(month);\r\n  };\r\n\r\n  // image upload function\r\n  const handleChangeImage = (e) => {\r\n    console.log(\"file uploaded: \", e.target.files[0]);\r\n    let file = e.target.files[0];\r\n\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onload = handleReaderLoaded;\r\n      reader.readAsBinaryString(file);\r\n      // reader.readAsArrayBuffer(file);\r\n      setCompanyLogo(e.target.files[0].name);\r\n    }\r\n  };\r\n\r\n  const handleReaderLoaded = (e) => {\r\n    console.log(\"file uploaded 2: \", e);\r\n    let binaryString = e.target.result;\r\n    setbase64(btoa(binaryString));\r\n  };\r\n\r\n  const handleClickConfirm = () => {\r\n    if (currency === \"INR\") {\r\n      setCurrencyFormat(\"Rupees - ₹\")\r\n    } else if (currency === \"USD\") {\r\n      setCurrencyFormat(\"Dollar - $\")\r\n    } else if (currency === \"JPY\") {\r\n      setCurrencyFormat(\"Yen – ¥\")\r\n    } else if (currency === \"EUR\") {\r\n      setCurrencyFormat(\"Euro - €\")\r\n    } else if (currency === \"BRL\") {\r\n      setCurrencyFormat(\"Real - R$\")\r\n    }\r\n    toast.success(\"Currency is formatted\");\r\n\r\n  };\r\n\r\n  const validate = () => {\r\n\r\n    let error = {}\r\n    if (companyName === \"\") {\r\n      error.companyName = \"Company Name  is required\"\r\n    }\r\n    if (base64 === \"\") {\r\n      error.base64 = \"Please select a image\"\r\n    }\r\n    if (currency === \"\") {\r\n      error.currency = \"Currency Required\"\r\n    }\r\n    if (companyMail === \"\") {\r\n      error.companyMail = \"Company Mail Required\"\r\n    }\r\n    if (companyAdd?.Building_Street === \"\") {\r\n      error.Building_Street = \"Building Street Required\"\r\n    }\r\n    if (companyAdd?.Zip_Code === \"\") {\r\n      error.Zip_Code = \"Zip Code Required\"\r\n    }\r\n    if (companyAdd?.Building_Area === \"\") {\r\n      error.Building_Area = \"Building Area Required\"\r\n    }\r\n    if (companyAdd?.Building_Country === \"\") {\r\n      error.Building_Country = \"Building Country Required\"\r\n    }\r\n    if (companyAdd?.Building_State === \"\") {\r\n      error.Building_State = \"Building State Required\"\r\n    }\r\n    if (companyAdd?.Building_City === \"\") {\r\n      error.Building_City = \"Building City Required\"\r\n    }\r\n    return error;\r\n  }\r\n\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    let validForm = validate();\r\n    setErrors(validForm);\r\n\r\n    if (Object.keys(validForm).length === 0) {\r\n      var companyPayload = {\r\n        id: id,\r\n        Company_Id: compId,\r\n        Company_Name: companyName,\r\n        CompanyLogo: base64,\r\n        CompanyLogo_Name: companyLogo,\r\n        CompanyMail: companyMail,\r\n        CompanyAddress: {\r\n          id: companyAdd?.id,\r\n          Address_Id: companyAdd?.Address_Id,\r\n          Company_Id: parseInt(localStorage.getItem(\"OrganizationId\")),\r\n          Address_Type: \"\",\r\n          Building_Street: companyAdd?.Building_Street,\r\n          Building_Name: \"\",\r\n          Building_Area: companyAdd?.Building_Area,\r\n          Building_Country: selectedCountry || companyAdd?.Building_Country,\r\n          Building_State: selectedState || companyAdd?.Building_State,\r\n          Building_City: selectedCity || companyAdd?.Building_City,\r\n          Zip_Code: companyAdd?.Zip_Code,\r\n          Created_By: parseInt(localStorage.getItem(\"UserId\")),\r\n          Updated_By: parseInt(localStorage.getItem(\"UserId\")),\r\n        },\r\n        Fiscal_Year: fiscalMonth?.id,\r\n        Business_Hour:\r\n        {\r\n          id: business?.id,\r\n          Businesshours_Id: business?.Businesshours_Id,\r\n          Company_Id: parseInt(localStorage.getItem(\"OrganizationId\")),\r\n          Monday_Chekbox: monCheckbox,\r\n          Monday_Starttime: business?.Monday_Starttime,\r\n          Monday_EndTime: business?.Monday_EndTime,\r\n          Tuesday_Chekbox: tueCheckbox,\r\n          Tuesday_Starttime: business?.Tuesday_Starttime,\r\n          Tuesday_Endtime: business?.Tuesday_Endtime,\r\n          Wednessday_Chekbox: wedCheckbox,\r\n          Wednessday_Starttime: business?.Wednessday_Starttime,\r\n          Wednessday_Endtime: business?.Wednessday_Endtime,\r\n          Thursday_Chekbox: thuCheckbox,\r\n          Thursday_Starttime: business?.Thursday_Starttime,\r\n          Thursday_Endtime: business?.Thursday_Endtime,\r\n          Friday_Chekbox: friCheckbox,\r\n          Friday_Starttime: business?.Friday_Starttime,\r\n          Friday_Endtime: business?.Friday_Endtime,\r\n          Saturday_Chekbox: satCheckbox,\r\n          Saturday_Starttime: business?.Saturday_Starttime,\r\n          Saturday_Endtime: business?.Saturday_Endtime,\r\n          Sunday_Chekbox: sunCheckbox,\r\n          Sunday_Starttime: business?.Sunday_Starttime,\r\n          Sunday_Endtime: business?.Sunday_Endtime,\r\n          Created_By: parseInt(localStorage.getItem(\"UserId\")),\r\n          Updated_By: parseInt(localStorage.getItem(\"UserId\")),\r\n        },\r\n        DateFormat: dateFormat,\r\n        Currencies: currency,\r\n        Allow_Edit: checkMonth,\r\n        Created_By: parseInt(localStorage.getItem(\"UserId\")),\r\n        Updated_By: parseInt(localStorage.getItem(\"UserId\")),\r\n      };\r\n\r\n      console.log(\"companyPayload\", companyPayload);\r\n\r\n      axios\r\n        .put(`${BASE_URL}/Erpapp/CompanyCRUD/`, companyPayload, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n            Accept: \"application/json\",\r\n          },\r\n        })\r\n        .then((res) => {\r\n          console.log(res?.data);\r\n          if (res?.status === 200 && res?.data?.id) {\r\n            toast.success(\"Company details updated successfully\");\r\n            setShowProfile(true);\r\n            setShowDetails(false);\r\n            setShowYear(false);\r\n            setShowHour(false);\r\n            setShowCurrencies(false);\r\n\r\n\r\n            localStorage.setItem(\"DateFormat\", res?.data?.DateFormat)\r\n            localStorage.setItem(\"CurrencyFormat\", res?.data?.Currencies)\r\n          } else {\r\n            toast.error(\"Enter valid company details\");\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          toast.error(\"Enter valid company details\");\r\n        });\r\n    }\r\n    else {\r\n      toast.error(\"Please Fill Required Filed\")\r\n    }\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchUserRolePermissions(token))\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <>\r\n      {/* Update company details code */}\r\n      <Div>\r\n        <Typography variant=\"h3\" sx={{ fontWeight: 600 }}>\r\n          Update Your Company Details\r\n        </Typography>\r\n\r\n        <form onSubmit={handleSubmit}>\r\n          <div>\r\n            <Div\r\n              sx={{\r\n                display: \"flex\",\r\n                justifyContent: \"end\",\r\n                mr: 0.5,\r\n              }}\r\n            >\r\n              {Array.isArray(userRolePermissions) && userRolePermissions.includes(78) && (\r\n                <ButtonGroup\r\n                  type=\"submit\"\r\n                  aria-label=\"split button\"\r\n                >\r\n                  <Button type=\"submit\" color=\"success\" variant=\"contained\" className=\"plus-button\">\r\n                    Update\r\n                  </Button>\r\n                  <Button variant=\"contained\" className=\"icon-button\">\r\n                    <MdSave size={20} />\r\n                  </Button>\r\n                </ButtonGroup>\r\n              )}\r\n            </Div>\r\n\r\n            <div>\r\n              <Div\r\n                className=\"card\"\r\n                sx={{ m: 1, ml: 0, mr: 0, p: 2, minHeight: \"466px\" }}\r\n              >\r\n                {!loadingStatus ? (\r\n                  <>\r\n                    <Div\r\n                      sx={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-between\",\r\n                        fontSize: 16,\r\n                        fontWeight: 500,\r\n                        cursor: \"pointer\",\r\n                        overflow: \"auto\",\r\n                      }}\r\n                    >\r\n                      <Button\r\n                        onClick={ShowCompanyProfile}\r\n                        sx={{\r\n                          color: showProfile === true ? \"#00BFFF\" : \"#000000\", minWidth: \"200px !important\"\r\n                        }}\r\n                      >\r\n                        Company Profile\r\n                      </Button>\r\n                      <Button\r\n                        onClick={ShowCompanyDetails}\r\n                        sx={{\r\n                          color: showDetails === true ? \"#00BFFF\" : \"#000000\", minWidth: \"200px !important\"\r\n                        }}\r\n                      >\r\n                        Company Details\r\n                      </Button>\r\n                      <Button\r\n                        onClick={ShowFiscalYear}\r\n                        sx={{\r\n                          color: showYear === true ? \"#00BFFF\" : \"#000000\", minWidth: \"200px !important\"\r\n                        }}\r\n                      >\r\n                        Financial Year\r\n                      </Button>\r\n                      <Button\r\n                        onClick={ShowBusinessHour}\r\n                        sx={{\r\n                          color: showHour === true ? \"#00BFFF\" : \"#000000\", minWidth: \"200px !important\"\r\n                        }}\r\n                      >\r\n                        Business Hour\r\n                      </Button>\r\n                      <Button\r\n                        onClick={ShowCurrencies}\r\n                        sx={{\r\n                          color: showCurrencies === true ? \"#00BFFF\" : \"#000000\", minWidth: \"200px !important\"\r\n                        }}\r\n                      >\r\n                        Currencies\r\n                      </Button>\r\n                    </Div>\r\n\r\n                    {/* code for company profile */}\r\n                    <Div>\r\n                      <Div\r\n                        sx={{\r\n                          display: showProfile === true ? \"block\" : \"none\",\r\n                        }}\r\n                      >\r\n                        <Typography\r\n                          variant=\"h2\"\r\n                          sx={{ pl: { xs: 0, md: 3.5 }, pt: 3, fontWeight: 600 }}\r\n                        >\r\n                          Company Profile\r\n                        </Typography>\r\n                        <Typography\r\n                          variant=\"h4\"\r\n                          sx={{ pl: { xs: 0, md: 3.5 }, fontWeight: 500 }}\r\n                        >\r\n                          You can fix your Company Profile Details here\r\n                        </Typography>\r\n                        <form>\r\n                          <Div\r\n                            sx={{\r\n                              mt: 4,\r\n                              ml: { xs: 0, md: 2 },\r\n                            }}\r\n                          >\r\n                            <Grid item xs={12} sm={4} lg={4} className=\"row\">\r\n                              <Typography\r\n                                className=\"input-label col-md-6 col-lg-4 col-xl-3\"\r\n                                sx={{ mt: 1 }}\r\n                              >\r\n                                Company Name <Span className=\"required\">*</Span>\r\n                              </Typography>\r\n                              <Div className=\"col-md-5\">\r\n\r\n                                <TextField\r\n                                  className=\"col-12 input-box\"\r\n                                  id=\"outlined-basic\"\r\n                                  placeholder=\"Company Name\"\r\n                                  variant=\"outlined\"\r\n                                  value={companyName}\r\n                                  name=\"companyName\"\r\n                                  onChange={(e) => setCompanyName(e.target.value)}\r\n                                  autoComplete=\"off\"\r\n                                />\r\n                              </Div>\r\n\r\n                            </Grid>\r\n                          </Div>\r\n\r\n                          <Div sx={{ mt: 2, ml: { xs: 0, md: 2 } }}>\r\n                            <Typography\r\n                              variant=\"h3\"\r\n                              fontWeight={600}\r\n                              sx={{ ml: 1.5 }}\r\n                            >\r\n                              Address :\r\n                            </Typography>\r\n                            <br />\r\n                            <Grid container>\r\n                              <Grid item xs={12} className=\"row\">\r\n                                <Typography\r\n                                  className=\"input-label col-md-6 col-lg-4 col-xl-3\"\r\n                                  sx={{ mt: 1 }}\r\n                                >\r\n                                  Street & Building Name\r\n                                  <Span className=\"required\">*</Span>\r\n                                </Typography>\r\n                                <Div className=\"col-md-5\">\r\n\r\n                                  <TextField\r\n                                    className=\"col-12 input-box\"\r\n                                    id=\"outlined-basic\"\r\n                                    placeholder=\"Street & Building Name\"\r\n                                    variant=\"outlined\"\r\n                                    value={companyAdd?.Building_Street}\r\n                                    name=\"Building_Street\"\r\n                                    onChange={handleInputChange}\r\n                                    autoComplete=\"off\"\r\n                                  />\r\n                                </Div>\r\n                              </Grid>\r\n\r\n                              <Grid item xs={12} className=\"row\" sx={{ mt: 1 }}>\r\n                                <Typography\r\n                                  className=\"input-label col-md-6 col-lg-4 col-xl-3\"\r\n                                  sx={{ mt: 1 }}\r\n                                >\r\n                                  Area Name <Span className=\"required\">*</Span>\r\n                                </Typography>\r\n                                <Div className=\"col-md-5\">\r\n\r\n                                  <TextField\r\n                                    className=\"col-12 input-box\"\r\n                                    id=\"outlined-basic\"\r\n                                    placeholder=\"Area Name\"\r\n                                    variant=\"outlined\"\r\n                                    value={companyAdd?.Building_Area}\r\n                                    name=\"Building_Area\"\r\n                                    onChange={handleInputChange}\r\n                                    autoComplete=\"off\"\r\n                                  />\r\n                                </Div>\r\n                              </Grid>\r\n\r\n                              <Grid item xs={12} className=\"row\" sx={{ mt: 1 }}>\r\n                                <Typography\r\n                                  className=\"input-label col-md-6 col-lg-4 col-xl-3\"\r\n                                  sx={{ mt: 1 }}\r\n                                >\r\n                                  Country <Span className=\"required\">*</Span>\r\n                                </Typography>\r\n                                <Div className=\"col-md-5\">\r\n                                  <Autocomplete\r\n                                    className=\"search-select\"\r\n                                    name=\"selectedCountry\"\r\n                                    options={countries}\r\n                                    getOptionLabel={(option) => {\r\n                                      if (typeof option === \"string\") {\r\n                                        return option;\r\n                                      }\r\n                                      if (option && option?.country) {\r\n                                        return option?.country;\r\n                                      }\r\n                                      return \"\";\r\n                                    }}\r\n                                    value={selectedCountry}\r\n                                    onChange={(event, newValue) => {\r\n                                      setSelectedCountry(newValue?.country);\r\n                                      setCountryId(newValue?.id);\r\n                                      getStateLists(newValue?.country);\r\n                                    }}\r\n                                    renderInput={(params) => <TextField {...params} placeholder=\"Select Country\" variant=\"outlined\" />}\r\n                                  />\r\n                                </Div>\r\n                              </Grid>\r\n\r\n                              <Grid item xs={12} className=\"row\" sx={{ mt: 1 }}>\r\n                                <Typography\r\n                                  className=\"input-label col-md-6 col-lg-4 col-xl-3\"\r\n                                  sx={{ mt: 1 }}\r\n                                >\r\n                                  State <Span className=\"required\">*</Span>\r\n                                </Typography>\r\n                                <Div className=\"col-md-5\">\r\n                                  <Autocomplete\r\n                                    className=\"search-select\"\r\n                                    name=\"selectedState\"\r\n                                    options={states}\r\n                                    getOptionLabel={(option) => {\r\n                                      if (typeof option === \"string\") {\r\n                                        return option;\r\n                                      }\r\n                                      if (option && option?.name) {\r\n                                        return option?.name;\r\n                                      }\r\n                                      return \"\";\r\n                                    }}\r\n                                    getOptionValue={(options) => {\r\n                                      return options[\"name\"];\r\n                                    }}\r\n                                    value={selectedState}\r\n                                    onChange={(event, newValue) => {\r\n                                      setSelectedState(newValue?.name);\r\n                                      setStateId(newValue?.id)\r\n                                      getCityLists(newValue?.name);\r\n                                    }}\r\n                                    renderInput={(params) => <TextField {...params} placeholder=\"Select State\" variant=\"outlined\" />}\r\n                                  />\r\n                                </Div>\r\n                              </Grid>\r\n\r\n                              <Grid item xs={12} className=\"row\" sx={{ mt: 1 }}>\r\n                                <Typography\r\n                                  className=\"input-label col-md-6 col-lg-4 col-xl-3\"\r\n                                  sx={{ mt: 1 }}\r\n                                >\r\n                                  City <Span className=\"required\">*</Span>\r\n                                </Typography>\r\n                                <Div className=\"col-md-5\">\r\n                                  <Autocomplete\r\n                                    className=\"search-select\"\r\n                                    name=\"selectedCity\"\r\n                                    options={cities}\r\n                                    getOptionLabel={(option) => {\r\n                                      if (typeof option === \"string\") {\r\n                                        return option;\r\n                                      }\r\n                                      if (option && option) {\r\n                                        return option;\r\n                                      }\r\n                                      return \"\";\r\n                                    }}\r\n                                    getOptionValue={(options) => {\r\n                                      return options;\r\n                                    }}\r\n                                    value={selectedCity}\r\n                                    onChange={(event, newValue) => {\r\n                                      setSelectedCity(newValue);\r\n                                    }}\r\n                                    renderInput={(params) => <TextField {...params} placeholder=\"Select City\" variant=\"outlined\" />}\r\n                                  />\r\n                                </Div>\r\n                              </Grid>\r\n\r\n                              <Grid item xs={12} className=\"row\" sx={{ mt: 1 }}>\r\n                                <Typography\r\n                                  className=\"input-label col-md-6 col-lg-4 col-xl-3\"\r\n                                  sx={{ mt: 1 }}\r\n                                >\r\n                                  Pincode <Span className=\"required\">*</Span>\r\n                                </Typography>\r\n                                <Div className=\"col-md-5\">\r\n\r\n                                  <TextField\r\n                                    className=\"col-12 input-box\"\r\n                                    id=\"outlined-basic\"\r\n                                    placeholder=\"Pincode\"\r\n                                    variant=\"outlined\"\r\n                                    value={companyAdd?.Zip_Code}\r\n                                    name=\"Zip_Code\"\r\n                                    onChange={handleInputChange}\r\n                                    autoComplete=\"off\"\r\n                                  />\r\n                                </Div>\r\n                              </Grid>\r\n\r\n                              <Grid item xs={12} className=\"row\" sx={{ mt: 1 }}>\r\n                                <Typography\r\n                                  className=\"input-label col-md-6 col-lg-4 col-xl-3\"\r\n                                  sx={{ mt: 1 }}\r\n                                >\r\n                                  Date Format\r\n                                  <Span className=\"required\">*</Span>\r\n                                </Typography>\r\n                                <Div className=\"col-md-5\">\r\n                                  <Autocomplete\r\n                                    className=\"search-select col-12\"\r\n                                    id=\"highlights-demo\"\r\n                                    name=\"dateFormat\"\r\n                                    getOptionLabel={(option) => {\r\n                                      if (typeof option === \"string\") {\r\n                                        return option;\r\n                                      }\r\n                                      if (option && option.yearformat) {\r\n                                        return option.yearformat;\r\n                                      }\r\n                                      return \"\";\r\n                                    }}\r\n                                    options={date}\r\n                                    value={\r\n                                      dateFormat\r\n                                      //   date.find(\r\n                                      //   (option) => option.label === dateFormat\r\n                                      // )\r\n                                    }\r\n                                    onChange={(e, item) => {\r\n                                      setDateFormat(item.yearformat);\r\n                                      console.log(\"abc\", item);\r\n                                    }}\r\n                                    isOptionEqualToValue={(option, value) =>\r\n                                      option.label === value.label &&\r\n                                      option.yearformat === value\r\n                                    }\r\n                                    renderInput={(params) => (\r\n                                      <TextField\r\n                                        {...params}\r\n                                        placeholder=\"Date Format\"\r\n                                        variant=\"outlined\"\r\n                                        autoComplete=\"off\"\r\n                                      />\r\n                                    )}\r\n                                  ></Autocomplete>\r\n                                </Div>\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Div>\r\n                        </form>\r\n                      </Div>\r\n\r\n                      {/* code for company details */}\r\n                      <Div\r\n                        sx={{\r\n                          display: showDetails === true ? \"block\" : \"none\",\r\n                        }}\r\n                      >\r\n                        <Typography\r\n                          variant=\"h2\"\r\n                          sx={{ pl: { xs: 0, md: 3.5 }, pt: 3, fontWeight: 600 }}\r\n                        >\r\n                          Company Details\r\n                        </Typography>\r\n                        <Typography\r\n                          variant=\"h3\"\r\n                          sx={{ pl: { xs: 0, md: 3.5 }, fontWeight: 500 }}\r\n                        >\r\n                          You can fix your  Company Details here\r\n                        </Typography>\r\n                        <Grid container>\r\n                          <Grid item xs={12} md={12} lg={6} sx={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                            <Div sx={{ mt: 10 }}>\r\n                              <Div\r\n                                sx={{\r\n                                  p: 3,\r\n                                  width: 200,\r\n                                  height: { xs: 230, xl: 225 },\r\n                                  border: \"1px solid #B2BABB \",\r\n                                  borderRadius: 0, textAlign: { xs: \"center\", md: \"center\" }, display: \"flex\",\r\n                                  justifyContent: \"center\",\r\n                                  alignItems: \"center\",\r\n                                }}\r\n                              >\r\n                                {base64 ? (\r\n                                  <img\r\n                                    alt=\"Company Logo\"\r\n                                    src={`data:image/png;base64,${base64}`}\r\n                                    width={150}\r\n                                    height={140}\r\n                                    style={{\r\n                                      display: \"flex\",\r\n                                      justifyContent: \"center\",\r\n                                      alignItems: \"center\",\r\n                                    }}\r\n                                  />\r\n                                ) : (\r\n                                  <img\r\n                                    alt=\"Company\"\r\n                                    src={\"../images/default.jpg\"}\r\n                                    width={150}\r\n                                    height={140}\r\n                                    style={{\r\n                                      display: \"flex\",\r\n                                      justifyContent: \"center\",\r\n                                      alignItems: \"center\",\r\n                                    }}\r\n                                  />\r\n                                )}\r\n                              </Div>\r\n\r\n                              <Div sx={{ textAlign: \"center\" }}>\r\n                                <Button\r\n                                  component=\"label\"\r\n                                  onChange={handleChangeImage}\r\n                                  sx={{\r\n                                    color: \"#00BFFF\",\r\n                                    textTransform: \"capitalize\",\r\n                                  }}\r\n                                >\r\n                                  Upload Company Logo\r\n                                  <input\r\n                                    hidden\r\n                                    accept=\"image/*\"\r\n                                    multiple\r\n                                    type=\"file\"\r\n                                    style={{\r\n                                      backgroundColor: \"transparent\",\r\n                                    }}\r\n                                    name=\"companyLogo\"\r\n                                    onChange={handleInputChange}\r\n                                  />\r\n                                </Button>\r\n                              </Div>\r\n                            </Div>\r\n                          </Grid>\r\n\r\n                          <Grid item xs={12} md={12} lg={6}>\r\n                            <Div sx={{ mt: { md: 0, lg: 10 }, ml: { md: 0, lg: 10 }, textAlign: { xs: \"left\", md: \"left\" } }}>\r\n                              <Div\r\n                                sx={{\r\n                                  fontSize: { xs: 16, md: 18 },\r\n                                  fontWeight: 600,\r\n                                  color: \"#00BFFF\",\r\n                                  marginBottom: \"5px\",\r\n                                }}\r\n                              >\r\n                                {companyName}\r\n                              </Div>\r\n\r\n                              <Div>\r\n                                <TextField\r\n                                  className=\"col-md-8 input-box\"\r\n                                  id=\"outlined-basic\"\r\n                                  placeholder=\"Company Mail\"\r\n                                  variant=\"outlined\"\r\n                                  value={companyMail}\r\n                                  name=\"companyMail\"\r\n                                  onChange={(e) => setCompanyMail(e.target.value)}\r\n                                  autoComplete=\"off\"\r\n                                />\r\n                              </Div>\r\n                            </Div>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Div>\r\n\r\n                      {/* code for fiscal year */}\r\n                      <Div\r\n                        style={{\r\n                          display: showYear === true ? \"block\" : \"none\",\r\n                        }}\r\n                      >\r\n                        <Typography\r\n                          variant=\"h2\"\r\n                          sx={{ pl: { xs: 0, md: 3.5 }, pt: 3, fontWeight: 600 }}\r\n                        >\r\n                          Accounting Period\r\n                        </Typography>\r\n                        <Typography variant=\"h3\" sx={{ pl: { xs: 0, md: 3.5 }, fontWeight: 500 }}>\r\n                          You can fix your company's accounting period here\r\n                        </Typography>\r\n                        <Div sx={{ mt: 5 }}>\r\n                          <Grid container>\r\n                            <Grid item xs={12} md={2} lg={3} xl={2}></Grid>\r\n                            <Grid item xs={12} md={5} xl={3}>\r\n                              <Typography className=\"input-label\">\r\n                                Accounting Period\r\n                              </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={4} lg={4}>\r\n                              <FormControl className=\"col-12 col-md-12 col-xl-6\">\r\n                                <Autocomplete\r\n                                  className=\"search-select\"\r\n                                  name=\"fiscalMonth\"\r\n                                  getOptionLabel={(option) => {\r\n                                    if (typeof option === \"string\") {\r\n                                      return option;\r\n                                    }\r\n                                    if (option && option?.CalendarName) {\r\n                                      return option?.CalendarName;\r\n                                    }\r\n                                    return \"\";\r\n                                  }}\r\n                                  options={accountingPeriods}\r\n                                  value={\r\n                                    fiscalMonth\r\n                                    // manufacturer.find(\r\n                                    // (option) => option && option.month === fiscalMonth\r\n                                    // )\r\n                                  }\r\n                                  onChange={(e, newValue) => {\r\n                                    setFiscalMonth(newValue);\r\n                                    console.log(\"HHH\", newValue);\r\n                                  }}\r\n                                  isOptionEqualToValue={(option, value) =>\r\n                                    option?.CalendarName === value\r\n                                  }\r\n                                  renderInput={(params) => (\r\n                                    <TextField\r\n                                      {...params}\r\n                                      placeholder=\"Fiscal Year\"\r\n                                      variant=\"outlined\"\r\n                                      autoComplete=\"off\"\r\n                                    />\r\n                                  )}\r\n                                />\r\n                              </FormControl>\r\n                            </Grid>\r\n                          </Grid>\r\n\r\n                          <Grid container>\r\n                            <Grid item xs={12} md={2} lg={3} xl={2}></Grid>\r\n                            <Grid item xs={12} md={5} xl={3}>\r\n                              <Typography className=\"input-label\" sx={{ pt: 1 }}>\r\n                                Allow Editing GL Closing Balance\r\n                              </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={4} xl={4}>\r\n                              <Div sx={{ pt: 1 }}>\r\n                                <FormControlLabel\r\n                                  control={<Checkbox size=\"small\" />}\r\n                                  name=\"checkMonth\"\r\n                                  checked={checkMonth}\r\n                                  onChange={handleChangeMonth}\r\n                                />\r\n                              </Div>\r\n                            </Grid>\r\n                          </Grid>\r\n                        </Div>\r\n                      </Div>\r\n\r\n                      {/* code for Business hour */}\r\n                      <Div\r\n                        style={{\r\n                          display: showHour === true ? \"block\" : \"none\",\r\n                        }}\r\n                      >\r\n                        <Typography\r\n                          variant=\"h2\"\r\n                          sx={{ pl: { xs: 0, md: 3.5 }, pt: 3, fontWeight: 600 }}\r\n                        >\r\n                          Business Hour\r\n                        </Typography>\r\n                        <Typography variant=\"h3\" sx={{ pl: { xs: 0, md: 3.5 }, fontWeight: 500 }}>\r\n                          You can fix your company's business hour here\r\n                        </Typography>\r\n                        <Div sx={{ mt: 3, fontWeight: 400 }}>\r\n                          <Grid container>\r\n                            <Grid className=\"row\" item xs={12} md={5} lg={4}>\r\n                              <Typography\r\n                                variant=\"h3\"\r\n                                sx={{ color: \"#00BFFF\", pl: { lg: 0, xl: 10 } }}\r\n                              >\r\n                                Business Days\r\n                              </Typography>\r\n                              <Typography variant=\"h3\" sx={{ pt: 1, pl: { lg: 0, xl: 9 } }}>\r\n                                <Checkbox\r\n                                  size=\"small\"\r\n                                  name=\"sunCheckbox\"\r\n                                  checked={sunCheckbox}\r\n                                  onChange={(e) => {\r\n                                    setSunCheckbox(e.target.checked);\r\n                                    console.log(\"C\", e.target.checked);\r\n                                  }}\r\n                                />{\" \"}\r\n                                Sunday\r\n                              </Typography>\r\n                              <Typography variant=\"h3\" sx={{ pt: 0, pl: { lg: 0, xl: 9 } }}>\r\n                                <Checkbox\r\n                                  size=\"small\"\r\n                                  name=\"monCheckbox\"\r\n                                  checked={monCheckbox}\r\n                                  onChange={(e) => {\r\n                                    setMonCheckbox(e.target.checked);\r\n                                    console.log(\"C\", e.target.checked);\r\n                                  }}\r\n                                />\r\n                                Monday\r\n                              </Typography>\r\n                              <Typography variant=\"h3\" sx={{ pt: 0, pl: { lg: 0, xl: 9 } }}>\r\n                                <Checkbox\r\n                                  size=\"small\"\r\n                                  name=\"tueCheckbox\"\r\n                                  checked={tueCheckbox}\r\n                                  onChange={(e) => {\r\n                                    setTueCheckbox(e.target.checked);\r\n                                    console.log(\"C\", e.target.checked);\r\n                                  }}\r\n                                />{\" \"}\r\n                                Tuesday\r\n                              </Typography>\r\n                              <Typography variant=\"h3\" sx={{ pt: 0, pl: { lg: 0, xl: 9 } }}>\r\n                                <Checkbox\r\n                                  size=\"small\"\r\n                                  name=\"wedCheckbox\"\r\n                                  checked={wedCheckbox}\r\n                                  onChange={(e) => {\r\n                                    setWedCheckbox(e.target.checked);\r\n                                    console.log(\"C\", e.target.checked);\r\n                                  }}\r\n                                />{\" \"}\r\n                                Wednesday\r\n                              </Typography>\r\n                              <Typography variant=\"h3\" sx={{ pt: 0, pl: { lg: 0, xl: 9 } }}>\r\n                                <Checkbox\r\n                                  size=\"small\"\r\n                                  name=\"thuCheckbox\"\r\n                                  checked={thuCheckbox}\r\n                                  onChange={(e) => {\r\n                                    setThuCheckbox(e.target.checked);\r\n                                    console.log(\"C\", e.target.checked);\r\n                                  }}\r\n                                />\r\n                                Thursday\r\n                              </Typography>\r\n                              <Typography variant=\"h3\" sx={{ pt: 0, pl: { lg: 0, xl: 9 } }}>\r\n                                <Checkbox\r\n                                  size=\"small\"\r\n                                  name=\"friCheckbox\"\r\n                                  checked={friCheckbox}\r\n                                  onChange={(e) => {\r\n                                    setFriCheckbox(e.target.checked);\r\n                                    console.log(\"C\", e.target.checked);\r\n                                  }}\r\n                                />\r\n                                Friday\r\n                              </Typography>\r\n                              <Typography variant=\"h3\" sx={{ pt: 0, pl: { lg: 0, xl: 9 } }}>\r\n                                <Checkbox\r\n                                  size=\"small\"\r\n                                  name=\"satCheckbox\"\r\n                                  checked={satCheckbox}\r\n                                  onChange={(e) => {\r\n                                    setSatCheckbox(e.target.checked);\r\n                                    console.log(\"C\", e.target.checked);\r\n                                  }}\r\n                                />\r\n                                Saturday\r\n                              </Typography>\r\n                            </Grid>\r\n                            <Grid className=\"row\" item xs={6} md={3.5} lg={4}>\r\n                              <Typography\r\n                                className=\"col\"\r\n                                variant=\"h3\"\r\n                                sx={{ pt: 0, pl: { lg: 0, xl: 10 }, color: \"#00BFFF\" }}\r\n                              >\r\n                                Start Time\r\n                              </Typography>\r\n                              <TextField\r\n                                type=\"time\"\r\n                                className=\"input-box col-10\"\r\n                                sx={{ pt: 0, pl: { lg: 0, xl: 10 } }}\r\n                                name=\"Sunday_Starttime\"\r\n                                value={business.Sunday_Starttime}\r\n                                onChange={handleInputChange}\r\n                                autoComplete=\"off\"\r\n                              />\r\n                              <TextField\r\n                                type=\"time\"\r\n                                className=\"input-box col-10\"\r\n                                sx={{ pt: 0, pl: { lg: 0, xl: 10 } }}\r\n                                name=\"Monday_Starttime\"\r\n                                value={business.Monday_Starttime}\r\n                                onChange={handleInputChange}\r\n                                autoComplete=\"off\"\r\n                              />\r\n                              <TextField\r\n                                type=\"time\"\r\n                                className=\"input-box col-10\"\r\n                                sx={{ pt: 0, pl: { lg: 0, xl: 10 } }}\r\n                                name=\"Tuesday_Starttime\"\r\n                                value={business.Tuesday_Starttime}\r\n                                onChange={handleInputChange}\r\n                                autoComplete=\"off\"\r\n                              />\r\n                              <TextField\r\n                                type=\"time\"\r\n                                className=\"input-box col-10\"\r\n                                sx={{ pt: 0, pl: { lg: 0, xl: 10 } }}\r\n                                name=\"Wednessday_Starttime\"\r\n                                value={business.Wednessday_Starttime}\r\n                                onChange={handleInputChange}\r\n                                autoComplete=\"off\"\r\n                              />\r\n                              <TextField\r\n                                type=\"time\"\r\n                                className=\"input-box col-10\"\r\n                                sx={{ pt: 0, pl: { lg: 0, xl: 10 } }}\r\n                                name=\"Thursday_Starttime\"\r\n                                value={business.Thursday_Starttime}\r\n                                onChange={handleInputChange}\r\n                                autoComplete=\"off\"\r\n                              />\r\n                              <TextField\r\n                                type=\"time\"\r\n                                className=\"input-box col-10\"\r\n                                sx={{ pt: 0, pl: { lg: 0, xl: 10 } }}\r\n                                name=\"Friday_Starttime\"\r\n                                value={business.Friday_Starttime}\r\n                                onChange={handleInputChange}\r\n                                autoComplete=\"off\"\r\n                              />\r\n                              <TextField\r\n                                type=\"time\"\r\n                                className=\"input-box col-10\"\r\n                                sx={{ pt: 0, pl: { lg: 0, xl: 10 } }}\r\n                                name=\"Saturday_Starttime\"\r\n                                value={business.Saturday_Starttime}\r\n                                onChange={handleInputChange}\r\n                                autoComplete=\"off\"\r\n                              />\r\n                            </Grid>\r\n                            <Grid className=\"row\" item xs={6} md={3.5} lg={4}>\r\n                              <Typography\r\n                                variant=\"h3\"\r\n                                sx={{ pt: 0, pl: { lg: 0, xl: 10 }, color: \"#00BFFF\" }}\r\n                              >\r\n                                End Time\r\n                              </Typography>\r\n\r\n                              <TextField\r\n                                type=\"time\"\r\n                                className=\"input-box col-10\"\r\n                                sx={{ pt: 0, pl: { lg: 0, xl: 10 } }}\r\n                                name=\"Sunday_Endtime\"\r\n                                value={business.Sunday_Endtime}\r\n                                onChange={handleInputChange}\r\n                                autoComplete=\"off\"\r\n                              />\r\n                              <TextField\r\n                                type=\"time\"\r\n                                className=\"input-box col-10\"\r\n                                sx={{ pt: 0, pl: { lg: 0, xl: 10 } }}\r\n                                name=\"Monday_EndTime\"\r\n                                value={business.Monday_EndTime}\r\n                                onChange={handleInputChange}\r\n                                autoComplete=\"off\"\r\n                              />\r\n                              <TextField\r\n                                type=\"time\"\r\n                                className=\"input-box col-10\"\r\n                                sx={{ pt: 0, pl: { lg: 0, xl: 10 } }}\r\n                                name=\"Tuesday_Endtime\"\r\n                                value={business.Tuesday_Endtime}\r\n                                onChange={handleInputChange}\r\n                                autoComplete=\"off\"\r\n                              />\r\n                              <TextField\r\n                                type=\"time\"\r\n                                className=\"input-box col-10\"\r\n                                sx={{ pt: 0, pl: { lg: 0, xl: 10 } }}\r\n                                name=\"Wednessday_Endtime\"\r\n                                value={business.Wednessday_Endtime}\r\n                                onChange={handleInputChange}\r\n                                autoComplete=\"off\"\r\n                              />\r\n                              <TextField\r\n                                type=\"time\"\r\n                                className=\"input-box col-10\"\r\n                                sx={{ pt: 0, pl: { lg: 0, xl: 10 } }}\r\n                                name=\"Thursday_Endtime\"\r\n                                value={business.Thursday_Endtime}\r\n                                onChange={handleInputChange}\r\n                                autoComplete=\"off\"\r\n                              />\r\n                              <TextField\r\n                                type=\"time\"\r\n                                className=\"input-box col-10\"\r\n                                sx={{ pt: 0, pl: { lg: 0, xl: 10 } }}\r\n                                name=\"Friday_Endtime\"\r\n                                value={business.Friday_Endtime}\r\n                                onChange={handleInputChange}\r\n                                autoComplete=\"off\"\r\n                              />\r\n                              <TextField\r\n                                type=\"time\"\r\n                                className=\"input-box col-10\"\r\n                                sx={{ pt: 0, pl: { lg: 0, xl: 10 } }}\r\n                                name=\"Saturday_Endtime\"\r\n                                value={business.Saturday_Endtime}\r\n                                onChange={handleInputChange}\r\n                                autoComplete=\"off\"\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                        </Div>\r\n                      </Div>\r\n\r\n                      {/* code for Currencies */}\r\n                      <Div\r\n                        style={{\r\n                          display: showCurrencies === true ? \"block\" : \"none\",\r\n                        }}\r\n                      >\r\n                        <Typography\r\n                          variant=\"h2\"\r\n                          sx={{ pl: { xs: 0, md: 3.5 }, pt: 3, fontWeight: 600 }}\r\n                        >\r\n                          Currencies\r\n                        </Typography>\r\n                        <Typography variant=\"h3\" sx={{ pl: { xs: 0, md: 3.5 }, fontWeight: 500 }}>\r\n                          You can fix your currencies which will be used to\r\n                          transact all financial transactions. Once you setup you\r\n                          can not change later\r\n                        </Typography>\r\n                        <Div sx={{ mt: 5, pl: { xs: 0, md: 3.5 } }}>\r\n                          <Grid container>\r\n                            <Grid className=\"row\" item xs={12} md={5} lg={4} xl={2.8}>\r\n                              <Typography\r\n                                variant=\"h3\"\r\n                                className=\"col-12\"\r\n                                sx={{ color: \"#00BFFF\" }}\r\n                              >\r\n                                Home Currencies\r\n                              </Typography>\r\n                              <Div className=\"col-12 col-lg-12 col-md-12 col-xl-12\" >\r\n                                <Autocomplete\r\n                                  className=\"search-select\"\r\n                                  name=\"currency\"\r\n                                  getOptionLabel={(option) => {\r\n                                    if (typeof option === \"string\") {\r\n                                      return option;\r\n                                    }\r\n                                    if (option && option?.curency) {\r\n                                      return option?.curency;\r\n                                    }\r\n                                    return \"\";\r\n                                  }}\r\n                                  options={currencies}\r\n                                  value={currency}\r\n                                  onChange={(e, newValue) => {\r\n                                    setCurrency(newValue?.curency);\r\n                                    setCurrencyFormat()\r\n                                    console.log(\"HHH\", newValue);\r\n                                  }}\r\n                                  isOptionEqualToValue={(option, value) =>\r\n                                    option.curency === value\r\n                                  }\r\n                                  renderInput={(params) => (\r\n                                    <TextField\r\n                                      {...params}\r\n                                      placeholder=\"Currency Format\"\r\n                                      autoComplete=\"off\"\r\n                                      variant=\"outlined\"\r\n                                    />\r\n                                  )}\r\n                                />\r\n                              </Div>\r\n                            </Grid>\r\n                            <Grid className=\"row\" item xs={12} md={6} lg={5} xl={3}>\r\n                              <Typography\r\n                                className=\"col-12 col-xl-12\"\r\n                                variant=\"h3\"\r\n                                sx={{ color: \"#00BFFF\" }}\r\n                              >\r\n                                Format\r\n                              </Typography>\r\n\r\n                              <Div className=\"col-12 col-md-10 col-lg-10 col-xl-12\">\r\n                                <TextField\r\n                                  className=\"input-box col-12 col-md-12 col-lg-12 col-xl-12\"\r\n                                  value={currencyFormat}\r\n                                  placeholder=\"Currency Format\"\r\n                                  autoComplete=\"off\"\r\n                                  disabled\r\n                                />\r\n                              </Div>\r\n\r\n                            </Grid>\r\n\r\n                          </Grid>\r\n                          {/* <Button\r\n                          className=\"plus-button\"\r\n                          sx={{\r\n                            mt: 10,\r\n                            ml: 0.5,\r\n                          }}\r\n                          onClick={handleClickConfirm}\r\n                        >\r\n                          Confirm\r\n                        </Button> */}\r\n\r\n                          <Div sx={{ mt: 10, pl: 2 }}>\r\n                            <ButtonGroup\r\n                              aria-label=\"split button\"\r\n                              sx={{\r\n                                mt: { xs: 0.5, lg: 0 },\r\n                                mr: { xs: 0, md: 1 }\r\n                              }}\r\n                            >\r\n                              <Button className=\"plus-button\" sx={{ width: \"99px\" }} onClick={handleClickConfirm}>\r\n                                Confirm\r\n                              </Button>\r\n                              <Button variant=\"contained\" className=\"icon-button\">\r\n                                <FaSave size={18} />\r\n                              </Button>\r\n                            </ButtonGroup>\r\n                          </Div>\r\n                        </Div>\r\n                      </Div>\r\n                    </Div>\r\n                  </>\r\n                ) : (\r\n                  <CommonOverviewSkeleton />\r\n                )}\r\n              </Div>\r\n            </div>\r\n\r\n          </div>\r\n        </form>\r\n\r\n      </Div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UpdateCompanyDetails;\r\n","import Div from \"@jumbo/shared/Div\";\r\nimport Span from \"@jumbo/shared/Span\";\r\nimport { Country, State, City } from \"country-state-city\";\r\nimport { toast } from \"react-toastify\";\r\nimport {\r\n  Autocomplete,\r\n  Button,\r\n  ButtonGroup,\r\n  Checkbox,\r\n  FormControl,\r\n  FormControlLabel,\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n  useMediaQuery,\r\n  useTheme,\r\n} from \"@mui/material\";\r\nimport React, { Suspense, useEffect, useState } from \"react\";\r\nimport Setting from \"../Setting\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport JumboContentLayoutMain from \"@jumbo/components/JumboContentLayout/JumboContentLayoutMain\";\r\nimport styled from \"@emotion/styled\";\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"app/services/auth-services\";\r\nimport UpdateCompanyDetails from \"./UpdateCompanyDetails\";\r\nimport { MdSave } from \"react-icons/md\";\r\nimport { FaSave } from \"react-icons/fa\";\r\nimport ScrollToTop from \"app/pages/ScrollToTop\";\r\nimport { CommonOverviewSkeleton } from \"app/shared/ReuseComponents/StyledComponents\";\r\nimport { fetchUserRolePermissions, selectedUserRolePermissions } from \"app/redux/actions/fetchUserRolePermissions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n\r\nconst date = [\r\n  { label: 1, yearformat: \"yyyy-MM-dd\" },\r\n  { label: 2, yearformat: \"MM-dd-yyyy\" },\r\n  { label: 3, yearformat: \"dd-MM-yyyy\" },\r\n];\r\n\r\n// const currencies = [\r\n//   { currency: \"Rupees - ₹\" },\r\n//   { currency: \"Dollar - $\" },\r\n//   { currency: \"Yen – ¥\" },\r\n//   { currency: \"Euro - €\" },\r\n// ];\r\n\r\nconst currencies = [\r\n  { label: 1, curency: \"INR\", format: \"Rupees - ₹\" },\r\n  { label: 2, curency: \"USD\", format: \"Dollar - $\" },\r\n  { label: 3, curency: \"JPY\", format: \"Yen – ¥\" },\r\n  { label: 4, curency: \"EUR\", format: \"Euro - €\" },\r\n  { label: 5, curency: \"BRL\", format: \"Real - R$\" },\r\n];\r\n\r\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\r\n  \"& .MuiDialogContent-root\": {\r\n    padding: theme.spacing(1),\r\n  },\r\n  \"& .MuiDialogActions-root\": {\r\n    padding: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst EditCompanyDetails = () => {\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n\r\n  const token = localStorage.getItem(\"accesstoken\");\r\n\r\n  const header = {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n      \"Content-Type\": \"application/json\",\r\n      Accept: \"application/json\",\r\n    },\r\n  };\r\n\r\n\r\n  const companyId = localStorage.getItem(\"OrganizationId\");\r\n\r\n\r\n  const dispatch = useDispatch();\r\n  const { userRolePermissions, formPermissions, modulePermissions } = useSelector(selectedUserRolePermissions);\r\n\r\n\r\n  const [id, setId] = useState(\"\");\r\n  const [compId, setCompId] = useState(\"\");\r\n  const [business, setBusiness] = useState([]);\r\n  const [companyAdd, setCompanyAdd] = useState([]);\r\n  const [fiscal, setFiscal] = useState([]);\r\n  const [companyLogo, setCompanyLogo] = useState(\"\");\r\n  const [companyMail, setCompanyMail] = useState(\"\");\r\n  const [companyName, setCompanyName] = useState(\"\");\r\n  const [currency, setCurrency] = useState(\"\");\r\n  const [currencyFormat, setCurrencyFormat] = useState(\"\");\r\n  const [dateFormat, setDateFormat] = useState(\"\");\r\n  const [fiscalMonth, setFiscalMonth] = useState(\"\");\r\n  const [checkMonth, setCheckMonth] = useState(false);\r\n  const [base64, setbase64] = useState(\"\");\r\n\r\n  const [selectedCountry, setSelectedCountry] = useState(null);\r\n  const [selectedState, setSelectedState] = useState(null);\r\n  const [selectedCity, setSelectedCity] = useState(null);\r\n\r\n  const [showProfile, setShowProfile] = useState(true);\r\n  const [showDetails, setShowDetails] = useState(false);\r\n  const [showYear, setShowYear] = useState(false);\r\n  const [showHour, setShowHour] = useState(false);\r\n  const [showCurrencies, setShowCurrencies] = useState(false);\r\n\r\n\r\n  const [accountingPeriods, setAccountingPeriods] = useState([]);\r\n\r\n\r\n  const [sunCheckbox, setSunCheckbox] = useState(false);\r\n  const [monCheckbox, setMonCheckbox] = useState(false);\r\n  const [tueCheckbox, setTueCheckbox] = useState(false);\r\n  const [wedCheckbox, setWedCheckbox] = useState(false);\r\n  const [thuCheckbox, setThuCheckbox] = useState(false);\r\n  const [friCheckbox, setFriCheckbox] = useState(false);\r\n  const [satCheckbox, setSatCheckbox] = useState(false);\r\n\r\n\r\n  const [showEdit, setShowEdit] = useState(false);\r\n  const [showUpdate, setShowUpdate] = useState(false);\r\n\r\n  // skeleton flag\r\n  const [skeleton, setSkeleton] = useState(false);\r\n\r\n\r\n  const ShowCompanyProfile = () => {\r\n    setShowProfile(true);\r\n    setShowHour(false);\r\n    setShowYear(false);\r\n    setShowDetails(false);\r\n    setShowCurrencies(false);\r\n  };\r\n\r\n  const ShowCompanyDetails = () => {\r\n    setShowDetails(true);\r\n    setShowYear(false);\r\n    setShowHour(false);\r\n    setShowCurrencies(false);\r\n    setShowProfile(false);\r\n  };\r\n\r\n  const ShowFiscalYear = () => {\r\n    setShowYear(true);\r\n    setShowHour(false);\r\n    setShowCurrencies(false);\r\n    setShowDetails(false);\r\n    setShowProfile(false);\r\n  };\r\n\r\n  const ShowBusinessHour = () => {\r\n    setShowHour(true);\r\n    setShowYear(false);\r\n    setShowCurrencies(false);\r\n    setShowDetails(false);\r\n    setShowProfile(false);\r\n  };\r\n\r\n  const ShowCurrencies = () => {\r\n    setShowCurrencies(true);\r\n    setShowHour(false);\r\n    setShowYear(false);\r\n    setShowDetails(false);\r\n    setShowProfile(false);\r\n  };\r\n\r\n\r\n  const getCompanyDetails = async () => {\r\n    setSkeleton(true);\r\n\r\n    await axios\r\n      .get(`${BASE_URL}/Erpapp/CompanyCRUD/?id=${companyId}`, header)\r\n      .then((res) => {\r\n        console.log(\"D\", res.data);\r\n        var Id = res.data.Created_By;\r\n        if (Id === 0) {\r\n          setShowEdit(true);\r\n          setShowUpdate(false);\r\n\r\n          setSkeleton(false);\r\n\r\n        } else {\r\n          setShowEdit(false);\r\n          setShowUpdate(true);\r\n\r\n          setId(res.data?.id);\r\n          setCompId(res.data?.Company_Id);\r\n          setBusiness(res.data?.Business_Hour);\r\n          setSunCheckbox(res.data.Business_Hour?.Sunday_Chekbox);\r\n          setMonCheckbox(res.data.Business_Hour?.Monday_Chekbox);\r\n          setTueCheckbox(res.data.Business_Hour?.Tuesday_Chekbox);\r\n          setWedCheckbox(res.data.Business_Hour?.Wednessday_Chekbox);\r\n          setThuCheckbox(res.data.Business_Hour?.Thursday_Chekbox);\r\n          setFriCheckbox(res.data.Business_Hour?.Friday_Chekbox);\r\n          setSatCheckbox(res.data.Business_Hour?.Saturday_Chekbox);\r\n\r\n          setCompanyAdd(res.data?.CompanyAddress);\r\n          setFiscal(res.data?.Fiscal_Year);\r\n          setCompanyMail(res.data?.CompanyMail);\r\n          setCompanyName(res.data?.Company_Name);\r\n          setCompanyLogo(res.data?.CompanyLogo);\r\n          setCurrency(res.data?.Currencies);\r\n          setDateFormat(res.data?.DateFormat);\r\n          setCheckMonth(res.data?.Allow_Edit);\r\n          // setCheckMonth(res.data.Fiscal_Year?.Calandermonth);\r\n          setFiscalMonth(res.data?.Fiscal_Year);\r\n          setSelectedCountry(res.data?.CompanyAddress?.Building_Country);\r\n          setSelectedState(res.data?.CompanyAddress?.Building_State);\r\n          setSelectedCity(res.data?.CompanyAddress?.Building_City);\r\n\r\n          setSkeleton(false);\r\n\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"ds\", error);\r\n        setSkeleton(false);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCompanyDetails();\r\n  }, [companyId]);\r\n\r\n\r\n  const listofAccountingPeriod = async () => {\r\n    await axios.get(`${BASE_URL}/Erpapp/Financeyearwithoutpagination/`, header)\r\n      .then((res) => {\r\n        const lists = res?.data;\r\n        setAccountingPeriods(lists);\r\n      }).catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    listofAccountingPeriod();\r\n  }, []);\r\n\r\n\r\n  const handleInputChange = (event) => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    setBusiness((values) => ({ ...values, [name]: value }));\r\n    setCompanyAdd((values) => ({ ...values, [name]: value }));\r\n    setFiscal((values) => ({ ...values, [name]: value }));\r\n    console.log(\"GGG\", fiscal.Calendar_MonthName);\r\n  };\r\n\r\n  const handleChangeMonth = (e) => {\r\n    var month = e.target.checked;\r\n    setCheckMonth(month);\r\n    console.log(month);\r\n  };\r\n\r\n\r\n\r\n  // image upload function\r\n  const handleChangeImage = (e) => {\r\n    console.log(\"file uploaded: \", e.target.files[0]);\r\n    let file = e.target.files[0];\r\n\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onload = handleReaderLoaded;\r\n      reader.readAsBinaryString(file);\r\n      setCompanyLogo(e.target.files[0].name);\r\n    }\r\n  };\r\n\r\n  const handleReaderLoaded = (e) => {\r\n    console.log(\"file uploaded 2: \", e);\r\n    let binaryString = e.target.result;\r\n    setbase64(btoa(binaryString));\r\n  };\r\n\r\n  const handleClickConfirm = () => {\r\n\r\n    if (currency === \"INR\") {\r\n      setCurrencyFormat(\"Rupees - ₹\")\r\n    } else if (currency === \"USD\") {\r\n      setCurrencyFormat(\"Dollar - $\")\r\n    } else if (currency === \"JPY\") {\r\n      setCurrencyFormat(\"Yen – ¥\")\r\n    } else if (currency === \"EUR\") {\r\n      setCurrencyFormat(\"Euro - €\")\r\n    } else if (currency === \"BRL\") {\r\n      setCurrencyFormat(\"Real - R$\")\r\n    }\r\n    toast.success(\"Currency is formatted\");\r\n\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    var companyPayload1 = {\r\n      Company_Name: companyName,\r\n      CompanyLogo: base64,\r\n      CompanyLogo_Name: companyLogo,\r\n      CompanyMail: companyMail,\r\n      CompanyAddress: {\r\n        Company_Id: parseInt(localStorage.getItem(\"OrganizationId\")),\r\n        Address_Type: \"\",\r\n        Building_Street: companyAdd?.Building_Street,\r\n        Building_Name: \"\",\r\n        Building_Area: companyAdd?.Building_Area,\r\n        Building_Country: selectedCountry.name,\r\n        Building_State: selectedState.name,\r\n        Building_City: selectedCity.name,\r\n        Zip_Code: companyAdd?.Zip_Code,\r\n        Created_By: parseInt(localStorage.getItem(\"UserId\")),\r\n        Updated_By: parseInt(localStorage.getItem(\"UserId\")),\r\n      },\r\n      Fiscal_Year: fiscalMonth?.id,\r\n      Business_Hour: {\r\n        Company_Id: parseInt(localStorage.getItem(\"OrganizationId\")),\r\n        Monday_Chekbox: monCheckbox,\r\n        Monday_Starttime: business?.Monday_Starttime,\r\n        Monday_EndTime: business?.Monday_EndTime,\r\n        Tuesday_Chekbox: tueCheckbox,\r\n        Tuesday_Starttime: business?.Tuesday_Starttime,\r\n        Tuesday_Endtime: business?.Tuesday_Endtime,\r\n        Wednessday_Chekbox: wedCheckbox,\r\n        Wednessday_Starttime: business?.Wednessday_Starttime,\r\n        Wednessday_Endtime: business?.Wednessday_Endtime,\r\n        Thursday_Chekbox: thuCheckbox,\r\n        Thursday_Starttime: business?.Thursday_Starttime,\r\n        Thursday_Endtime: business?.Thursday_Endtime,\r\n        Friday_Chekbox: friCheckbox,\r\n        Friday_Starttime: business?.Friday_Starttime,\r\n        Friday_Endtime: business?.Friday_Endtime,\r\n        Saturday_Chekbox: satCheckbox,\r\n        Saturday_Starttime: business?.Saturday_Starttime,\r\n        Saturday_Endtime: business?.Saturday_Endtime,\r\n        Sunday_Chekbox: sunCheckbox,\r\n        Sunday_Starttime: business?.Sunday_Starttime,\r\n        Sunday_Endtime: business?.Sunday_Endtime,\r\n        Created_By: parseInt(localStorage.getItem(\"UserId\")),\r\n        Updated_By: parseInt(localStorage.getItem(\"UserId\")),\r\n      },\r\n      DateFormat: dateFormat,\r\n      Currencies: currency,\r\n      Allow_Edit: checkMonth,\r\n      Created_By: parseInt(localStorage.getItem(\"UserId\")),\r\n      Updated_By: parseInt(localStorage.getItem(\"UserId\")),\r\n    };\r\n\r\n    console.log(\"companyPayload\", companyPayload1);\r\n\r\n    await axios\r\n      .post(`${BASE_URL}/Erpapp/CompanyCRUD/`, companyPayload1, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n        },\r\n      })\r\n      .then((res) => {\r\n        console.log(res?.data);\r\n        toast.success(\"Company details saved successfully\");\r\n        localStorage.setItem(\"DateFormat\", res?.data?.DateFormat)\r\n        localStorage.setItem(\"CurrencyFormat\", res?.data?.Currencies)\r\n\r\n        if (res?.data?.id === 0) {\r\n          setShowEdit(true);\r\n          setShowUpdate(false);\r\n        } else {\r\n          setShowEdit(false);\r\n          setShowUpdate(true);\r\n          getCompanyDetails();\r\n          setShowProfile(true);\r\n          setShowDetails(false);\r\n          setShowYear(false);\r\n          setShowHour(false);\r\n          setShowCurrencies(false);\r\n        }\r\n      }).catch((error) => {\r\n        console.error(error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchUserRolePermissions(token))\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <>\r\n      {/* create company details code */}\r\n      <JumboContentLayoutMain>\r\n        <Suspense\r\n          fallback={\r\n            <Div\r\n              sx={{\r\n                display: \"flex\",\r\n                minWidth: 0,\r\n                alignItems: \"center\",\r\n                alignContent: \"center\",\r\n                px: 3,\r\n                // backgroundColor: \"white\",\r\n                zIndex: 1,\r\n              }}\r\n            >\r\n              <CommonOverviewSkeleton />\r\n            </Div>\r\n          }\r\n        >\r\n          <Setting />\r\n\r\n          {showEdit &&\r\n            <Div>\r\n              <Typography variant=\"h3\" sx={{ fontWeight: 600 }}>\r\n                Enter Your Company Details\r\n              </Typography>\r\n              <form onSubmit={handleSubmit}>\r\n                <div>\r\n                  <Div\r\n                    sx={{\r\n                      display: \"flex\",\r\n                      justifyContent: \"end\",\r\n                      mr: 0.5,\r\n                    }}\r\n                  >\r\n                    {Array.isArray(userRolePermissions) && userRolePermissions.includes(77) && (\r\n                      <ButtonGroup\r\n                        type=\"submit\"\r\n                        aria-label=\"split button\"\r\n                      >\r\n                        <Button type=\"submit\" className=\"plus-button\">\r\n                          Submit\r\n                        </Button>\r\n                        <Button variant=\"contained\" className=\"icon-button\">\r\n                          <MdSave size={20} />\r\n                        </Button>\r\n                      </ButtonGroup>\r\n                    )}\r\n\r\n                  </Div>\r\n                  <div>\r\n                    <Div\r\n                      className=\"card\"\r\n                      sx={{ m: 1, ml: 0, mr: 0, p: 1, minHeight: \"466px\" }}\r\n                    >\r\n                      <Div\r\n                        sx={{\r\n                          display: \"flex\",\r\n                          justifyContent: \"space-between\",\r\n                          fontSize: 18,\r\n                          fontWeight: 500,\r\n                          cursor: \"pointer\",\r\n                          overflow: \"auto\",\r\n                        }}\r\n                      >\r\n                        <Button\r\n                          onClick={ShowCompanyProfile}\r\n                          sx={{\r\n                            color: showProfile === true ? \"#00BFFF\" : \"#000000\", minWidth: \"200px !important\"\r\n                          }}\r\n                        >\r\n                          Company Profile\r\n                        </Button>\r\n                        <Button\r\n                          onClick={ShowCompanyDetails}\r\n                          sx={{\r\n                            color: showDetails === true ? \"#00BFFF\" : \"#000000\", minWidth: \"200px !important\"\r\n                          }}\r\n                        >\r\n                          Company Details\r\n                        </Button>\r\n                        <Button\r\n                          onClick={ShowFiscalYear}\r\n                          sx={{\r\n                            color: showYear === true ? \"#00BFFF\" : \"#000000\", minWidth: \"200px !important\"\r\n                          }}\r\n                        >\r\n                          Financial Year\r\n                        </Button>\r\n                        <Button\r\n                          onClick={ShowBusinessHour}\r\n                          sx={{\r\n                            color: showHour === true ? \"#00BFFF\" : \"#000000\", minWidth: \"200px !important\"\r\n                          }}\r\n                        >\r\n                          Business Hour\r\n                        </Button>\r\n                        <Button\r\n                          onClick={ShowCurrencies}\r\n                          sx={{\r\n                            color:\r\n                              showCurrencies === true ? \"#00BFFF\" : \"#000000\", minWidth: \"200px !important\"\r\n                          }}\r\n                        >\r\n                          Currencies\r\n                        </Button>\r\n                      </Div>\r\n\r\n                      {/* code for company profile */}\r\n\r\n                      <Div>\r\n                        <Div\r\n                          sx={{\r\n                            display: showProfile === true ? \"block\" : \"none\",\r\n                          }}\r\n                        >\r\n                          <Typography\r\n                            variant=\"h3\"\r\n                            sx={{ pl: { xs: 0, md: 3.5 }, pt: 3, fontWeight: 600 }}\r\n                          >\r\n                            Company Profile\r\n                          </Typography>\r\n                          <Typography\r\n                            variant=\"h4\"\r\n                            sx={{ pl: { xs: 0, md: 3.5 }, fontWeight: 500 }}\r\n                          >\r\n                            You can fix your Company Profile Details here\r\n                          </Typography>\r\n                          <form>\r\n                            <Div\r\n                              sx={{\r\n                                mt: 4,\r\n                                ml: { xs: 0, md: 2 },\r\n                              }}\r\n                            >\r\n                              <Grid item xs={12} sm={4} lg={4} className=\"row\">\r\n                                <Typography\r\n                                  className=\"input-label col-md-6 col-lg-4 col-xl-3\"\r\n                                  sx={{ mt: 1 }}\r\n                                >\r\n                                  Company Name <Span className=\"required\">*</Span>\r\n                                </Typography>\r\n                                <Div className=\"col-md-5\">\r\n\r\n                                  <TextField\r\n                                    className=\"col-12 input-box\"\r\n                                    id=\"outlined-basic\"\r\n                                    placeholder=\"Company Name\"\r\n                                    variant=\"outlined\"\r\n                                    value={companyName}\r\n                                    name=\"companyName\"\r\n                                    onChange={(e) => setCompanyName(e.target.value)}\r\n                                    autoComplete=\"off\"\r\n                                  />\r\n                                </Div>\r\n                              </Grid>\r\n                            </Div>\r\n\r\n                            <Div sx={{ mt: 2, ml: { xs: 0, md: 2 } }}>\r\n                              <Typography\r\n                                variant=\"h3\"\r\n                                fontWeight={600}\r\n                                sx={{ ml: 1.5 }}\r\n                              >\r\n                                Address :\r\n                              </Typography>\r\n                              <br />\r\n                              <Grid container>\r\n                                <Grid item xs={12} className=\"row\">\r\n                                  <Typography\r\n                                    className=\"input-label col-md-6 col-lg-4 col-xl-3\"\r\n                                    sx={{ mt: 1 }}\r\n                                  >\r\n                                    Street & Building Name{\" \"}\r\n                                    <Span className=\"required\">*</Span>\r\n                                  </Typography>\r\n                                  <Div className=\"col-md-5\">\r\n\r\n                                    <TextField\r\n                                      className=\"col-12 input-box\"\r\n                                      id=\"outlined-basic\"\r\n                                      placeholder=\"Street & Building Name\"\r\n                                      variant=\"outlined\"\r\n                                      value={companyAdd.Building_Street}\r\n                                      name=\"Building_Street\"\r\n                                      onChange={handleInputChange}\r\n                                      autoComplete=\"off\"\r\n                                    />\r\n                                  </Div>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={12} className=\"row\" sx={{ mt: 1 }}>\r\n                                  <Typography\r\n                                    className=\"input-label col-md-6 col-lg-4 col-xl-3\"\r\n                                    sx={{ mt: 1 }}\r\n                                  >\r\n                                    Area Name <Span className=\"required\">*</Span>\r\n                                  </Typography>\r\n                                  <Div className=\"col-md-5\">\r\n\r\n                                    <TextField\r\n                                      className=\"col-12 input-box\"\r\n                                      id=\"outlined-basic\"\r\n                                      placeholder=\"Area Name\"\r\n                                      variant=\"outlined\"\r\n                                      value={companyAdd.Building_Area}\r\n                                      name=\"Building_Area\"\r\n                                      onChange={handleInputChange}\r\n                                      autoComplete=\"off\"\r\n                                    />\r\n                                  </Div>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={12} className=\"row\" sx={{ mt: 1 }}>\r\n                                  <Typography\r\n                                    className=\"input-label col-md-6 col-lg-4 col-xl-3\"\r\n                                    sx={{ mt: 1 }}\r\n                                  >\r\n                                    Country <Span className=\"required\">*</Span>\r\n                                  </Typography>\r\n                                  <Div className=\"col-md-5\">\r\n                                    {/* <Select\r\n                          className=\"input-select\"\r\n                          placeholder=\"Select Country\"\r\n                          name=\"selectedCountry\"\r\n                          options={Country.getAllCountries()}\r\n                          getOptionLabel={(options) => {\r\n                            return options[\"name\"];\r\n                          }}\r\n                          getOptionValue={(options) => {\r\n                            return options[\"name\"];\r\n                          }}\r\n                          value={selectedCountry}\r\n                          onChange={(item) => {\r\n                            setSelectedCountry(item);\r\n                            console.log(\"PP\", item);\r\n                          }}\r\n                        /> */}\r\n\r\n                                    <Autocomplete\r\n                                      className=\"search-select\"\r\n                                      name=\"selectedCountry\"\r\n                                      options={Country.getAllCountries()}\r\n                                      getOptionLabel={(option) => {\r\n                                        return option[\"name\"];\r\n                                      }}\r\n                                      // isOptionEqualToValue={(option, value) => option.value === value.value}\r\n                                      value={selectedCountry}\r\n                                      onChange={(event, newValue) => {\r\n                                        // setStatus(newValue);\r\n                                        setSelectedCountry(newValue);\r\n                                      }}\r\n                                      renderInput={(params) => <TextField {...params} placeholder=\"Select Country\" variant=\"outlined\" />}\r\n                                    />\r\n                                  </Div>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={12} className=\"row\" sx={{ mt: 1 }}>\r\n                                  <Typography\r\n                                    className=\"input-label col-md-6 col-lg-4 col-xl-3\"\r\n                                    sx={{ mt: 1 }}\r\n                                  >\r\n                                    State <Span className=\"required\">*</Span>\r\n                                  </Typography>\r\n                                  <Div className=\"col-md-5\">\r\n                                    {/* <Select\r\n                          className=\"react-select-box\"\r\n                          placeholder=\"Select State\"\r\n                          name=\"selectedState\"\r\n                          options={State?.getStatesOfCountry(\r\n                            selectedCountry?.isoCode\r\n                          )}\r\n                          getOptionLabel={(options) => {\r\n                            return options[\"name\"];\r\n                          }}\r\n                          getOptionValue={(options) => {\r\n                            return options[\"name\"];\r\n                          }}\r\n                          value={selectedState}\r\n                          onChange={(item) => {\r\n                            setSelectedState(item);\r\n                            console.log(\"PP\", item);\r\n                          }}\r\n                        /> */}\r\n\r\n                                    <Autocomplete\r\n                                      className=\"search-select\"\r\n                                      name=\"selectedState\"\r\n                                      options={State?.getStatesOfCountry(\r\n                                        selectedCountry?.isoCode\r\n                                      )}\r\n                                      getOptionLabel={(options) => {\r\n                                        return options[\"name\"];\r\n                                      }}\r\n                                      getOptionValue={(options) => {\r\n                                        return options[\"name\"];\r\n                                      }}\r\n                                      value={selectedState}\r\n                                      // isOptionEqualToValue={(option, value) => option.value === value.value}\r\n\r\n                                      onChange={(event, newValue) => {\r\n\r\n                                        setSelectedState(newValue);\r\n                                      }}\r\n                                      renderInput={(params) => <TextField {...params} placeholder=\"Select State\" variant=\"outlined\" />}\r\n                                    />\r\n                                  </Div>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={12} className=\"row\" sx={{ mt: 1 }}>\r\n                                  <Typography\r\n                                    className=\"input-label col-md-6 col-lg-4 col-xl-3\"\r\n                                    sx={{ mt: 1 }}\r\n                                  >\r\n                                    City <Span className=\"required\">*</Span>\r\n                                  </Typography>\r\n                                  <Div className=\"col-md-5\">\r\n                                    {/* <Select\r\n                          className=\"react-select-box\"\r\n                          placeholder=\"Select City\"\r\n                          name=\"selectedCity\"\r\n                          options={City.getCitiesOfState(\r\n                            selectedState?.countryCode,\r\n                            selectedState?.isoCode\r\n                          )}\r\n                          getOptionLabel={(options) => {\r\n                            return options[\"name\"];\r\n                          }}\r\n                          getOptionValue={(options) => {\r\n                            return options[\"name\"];\r\n                          }}\r\n                          value={selectedCity}\r\n                          onChange={(item) => {\r\n                            setSelectedCity(item);\r\n                            console.log(\"PP\", item);\r\n                          }}\r\n                        /> */}\r\n\r\n\r\n                                    <Autocomplete\r\n                                      className=\"search-select\"\r\n                                      name=\"selectedCity\"\r\n                                      options={City.getCitiesOfState(\r\n                                        selectedState?.countryCode,\r\n                                        selectedState?.isoCode\r\n                                      )}\r\n                                      getOptionLabel={(options) => {\r\n                                        return options[\"name\"];\r\n                                      }}\r\n                                      getOptionValue={(options) => {\r\n                                        return options[\"name\"];\r\n                                      }}\r\n                                      value={selectedCity}\r\n                                      // isOptionEqualToValue={(option, value) => option.value === value.value}\r\n\r\n                                      onChange={(event, newValue) => {\r\n\r\n                                        setSelectedCity(newValue);\r\n                                      }}\r\n                                      renderInput={(params) => <TextField {...params} placeholder=\"Select City\" variant=\"outlined\" />}\r\n                                    />\r\n                                  </Div>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={12} className=\"row\" sx={{ mt: 1 }}>\r\n                                  <Typography\r\n                                    className=\"input-label col-md-6 col-lg-4 col-xl-3\"\r\n                                    sx={{ mt: 1 }}\r\n                                  >\r\n                                    Pincode <Span className=\"required\">*</Span>\r\n                                  </Typography>\r\n                                  <Div className=\"col-md-5\">\r\n\r\n                                    <TextField\r\n                                      className=\"col-12 input-box\"\r\n                                      id=\"outlined-basic\"\r\n                                      placeholder=\"Pincode\"\r\n                                      variant=\"outlined\"\r\n                                      value={companyAdd.Zip_Code}\r\n                                      name=\"Zip_Code\"\r\n                                      onChange={handleInputChange}\r\n                                      autoComplete=\"off\"\r\n                                    />\r\n                                  </Div>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={12} className=\"row\" sx={{ mt: 1 }}>\r\n                                  <Typography\r\n                                    className=\"input-label col-md-6 col-lg-4 col-xl-3\"\r\n                                    sx={{ mt: 1 }}\r\n                                  >\r\n                                    Date Format\r\n                                    <Span className=\"required\">*</Span>\r\n                                  </Typography>\r\n                                  <Div className=\"col-md-5\">\r\n                                    <Autocomplete\r\n                                      className=\"search-select col-12\"\r\n                                      id=\"highlights-demo\"\r\n                                      name=\"dateFormat\"\r\n                                      getOptionLabel={(option) => option.yearformat}\r\n                                      options={date}\r\n                                      value={date.find(\r\n                                        (option) => option.yearformat === dateFormat\r\n                                      )}\r\n                                      onChange={(e, item) => {\r\n                                        setDateFormat(item?.yearformat);\r\n                                        console.log(\"abc\", item);\r\n                                      }}\r\n                                      renderInput={(params) => (\r\n                                        <TextField\r\n                                          {...params}\r\n                                          placeholder=\"Date Format\"\r\n                                          variant=\"outlined\"\r\n                                        />\r\n                                      )}\r\n                                    ></Autocomplete>\r\n                                  </Div>\r\n                                </Grid>\r\n                              </Grid>\r\n\r\n                            </Div>\r\n                          </form>\r\n                        </Div>\r\n\r\n                        {/* code for company details */}\r\n                        <Div\r\n                          sx={{\r\n                            display: showDetails === true ? \"block\" : \"none\",\r\n                          }}\r\n                        >\r\n                          <Typography\r\n                            variant=\"h2\"\r\n                            sx={{ pl: { xs: 0, md: 3.5 }, pt: 3, fontWeight: 600 }}\r\n                          >\r\n                            Company Details\r\n                          </Typography>\r\n                          <Typography\r\n                            variant=\"h3\"\r\n                            sx={{ pl: { xs: 0, md: 3.5 }, fontWeight: 500 }}\r\n                          >\r\n                            You can fix your  Company Details here\r\n                          </Typography>\r\n                          <Grid container>\r\n                            <Grid item xs={12} md={12} lg={6} sx={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                              <Div sx={{ mt: 10 }}>\r\n                                <Div\r\n                                  sx={{\r\n                                    p: 3,\r\n                                    width: 200,\r\n                                    height: { xs: 230, xl: 225 },\r\n                                    border: \"1px solid #B2BABB \",\r\n                                    borderRadius: 0, textAlign: { xs: \"center\", md: \"center\" }, display: \"flex\",\r\n                                    justifyContent: \"center\",\r\n                                    alignItems: \"center\",\r\n                                  }}\r\n                                >\r\n                                  {base64 ? (\r\n                                    <img\r\n                                      alt=\"Company Logo\"\r\n                                      src={`data:image/png;base64,${base64}`}\r\n                                      width={150}\r\n                                      height={150}\r\n                                      style={{\r\n                                        display: \"flex\",\r\n                                        justifyContent: \"center\",\r\n                                        alignItems: \"center\",\r\n                                      }}\r\n                                    />\r\n                                  ) : (\r\n                                    <img\r\n                                      alt=\"Company\"\r\n                                      src={\"../images/default.jpg\"}\r\n                                      width={150}\r\n                                      height={150}\r\n                                      style={{\r\n                                        display: \"flex\",\r\n                                        justifyContent: \"center\",\r\n                                        alignItems: \"center\",\r\n                                      }}\r\n                                    />\r\n                                  )}\r\n                                </Div>\r\n\r\n                                <Button\r\n                                  component=\"label\"\r\n                                  onChange={handleChangeImage}\r\n                                  sx={{\r\n                                    color: \"#00BFFF\",\r\n                                    textTransform: \"capitalize\",\r\n                                  }}\r\n                                >\r\n                                  Upload Company Logo\r\n                                  <input\r\n                                    hidden\r\n                                    accept=\"image/*\"\r\n                                    multiple\r\n                                    type=\"file\"\r\n                                    style={{\r\n                                      backgroundColor: \"transparent\",\r\n                                    }}\r\n                                    // value={companyLogo}\r\n                                    name=\"companyLogo\"\r\n                                    onChange={handleInputChange}\r\n                                  />\r\n                                </Button>\r\n                              </Div>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={12} lg={6}>\r\n                              <Div sx={{ mt: { md: 0, lg: 10 }, ml: { md: 0, lg: 10 }, textAlign: { xs: \"center\", md: \"center\" } }}>\r\n                                <Div\r\n                                  sx={{\r\n                                    fontSize: { xs: 16, md: 18 },\r\n                                    fontWeight: 600,\r\n                                    color: \"#00BFFF\",\r\n                                    marginBottom: \"5px\",\r\n                                  }}\r\n                                >\r\n                                  {companyName}\r\n                                </Div>\r\n\r\n                                <Div>\r\n                                  <TextField\r\n                                    className=\"col-md-8 input-box\"\r\n                                    id=\"outlined-basic\"\r\n                                    placeholder=\"Company Mail\"\r\n                                    variant=\"outlined\"\r\n                                    value={companyMail}\r\n                                    name=\"companyMail\"\r\n                                    onChange={(e) =>\r\n                                      setCompanyMail(e.target.value)\r\n                                    }\r\n                                    autoComplete=\"off\"\r\n                                  />\r\n                                </Div>\r\n                              </Div>\r\n                            </Grid>\r\n                          </Grid>\r\n                        </Div>\r\n\r\n                        {/* code for fiscal year */}\r\n                        <Div\r\n                          style={{\r\n                            display: showYear === true ? \"block\" : \"none\",\r\n                          }}\r\n                        >\r\n                          <Typography\r\n                            variant=\"h2\"\r\n                            sx={{ pl: { xs: 0, md: 3.5 }, pt: 3, fontWeight: 600 }}\r\n                          >\r\n                            Accounting Period\r\n                          </Typography>\r\n                          <Typography\r\n                            variant=\"h3\"\r\n                            sx={{ pl: { xs: 0, md: 3.5 }, fontWeight: 500 }}\r\n                          >\r\n                            You can fix your company's accounting period here\r\n                          </Typography>\r\n                          <Div sx={{ mt: 5 }}>\r\n                            <Grid container>\r\n                              <Grid item xs={12} md={2} lg={3} xl={2}></Grid>\r\n                              <Grid item xs={12} md={5} xl={3}>\r\n                                <Typography className=\"input-label\">\r\n                                  Accounting Period\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12} md={4} lg={4}>\r\n                                <FormControl className=\"col-12 col-md-12 col-xl-6\">\r\n                                  <Autocomplete\r\n                                    className=\"search-select\"\r\n                                    name=\"fiscalMonth\"\r\n                                    getOptionLabel={(option) => {\r\n                                      if (typeof option === \"string\") {\r\n                                        return option;\r\n                                      }\r\n                                      if (option && option?.CalendarName) {\r\n                                        return option?.CalendarName;\r\n                                      }\r\n                                      return \"\";\r\n                                    }}\r\n                                    options={accountingPeriods}\r\n                                    value={\r\n                                      fiscalMonth\r\n                                      // manufacturer.find(\r\n                                      // (option) => option && option.month === fiscalMonth\r\n                                      // )\r\n                                    }\r\n                                    onChange={(e, newValue) => {\r\n                                      setFiscalMonth(newValue);\r\n                                      console.log(\"HHH\", newValue);\r\n                                    }}\r\n                                    isOptionEqualToValue={(option, value) =>\r\n                                      option?.CalendarName === value\r\n                                    }\r\n                                    renderInput={(params) => (\r\n                                      <TextField\r\n                                        {...params}\r\n                                        placeholder=\"Fiscal Year\"\r\n                                        variant=\"outlined\"\r\n                                        autoComplete=\"off\"\r\n                                      />\r\n                                    )}\r\n                                  />\r\n                                </FormControl>\r\n                              </Grid>\r\n                            </Grid>\r\n\r\n                            <Grid container>\r\n                              <Grid item xs={12} md={2} lg={3} xl={2}></Grid>\r\n                              <Grid item xs={12} md={5} xl={3}>\r\n                                <Typography className=\"input-label\" sx={{ pt: 1 }}>\r\n                                  Allow Editing GL Closing Balance\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12} md={4} xl={4}>\r\n                                <Div sx={{ pt: 1 }}>\r\n                                  <FormControlLabel\r\n                                    control={<Checkbox size=\"small\" />}\r\n                                    value=\"checkMonth\"\r\n                                    checked={checkMonth}\r\n                                    onChange={handleChangeMonth}\r\n                                  />\r\n                                </Div>\r\n                              </Grid>\r\n                            </Grid>\r\n\r\n\r\n                          </Div>\r\n                        </Div>\r\n\r\n                        {/* code for Business hour */}\r\n                        <Div\r\n                          style={{\r\n                            display: showHour === true ? \"block\" : \"none\",\r\n                          }}\r\n                        >\r\n                          <Typography\r\n                            variant=\"h2\"\r\n                            sx={{ pl: { xs: 0, md: 3.5 }, pt: 3, fontWeight: 600 }}\r\n                          >\r\n                            Business Hour\r\n                          </Typography>\r\n                          <Typography\r\n                            variant=\"h3\"\r\n                            sx={{ pl: { xs: 0, md: 3.5 }, fontWeight: 500 }}\r\n                          >\r\n                            You can fix your company's business hour here\r\n                          </Typography>\r\n                          <Div sx={{ mt: 3, fontWeight: 400 }}>\r\n                            <Grid container>\r\n\r\n                              <Grid className=\"row\" item xs={12} md={5} lg={4}>\r\n                                <Typography\r\n                                  variant=\"h3\"\r\n                                  sx={{ color: \"#00BFFF\", pl: { lg: 0, xl: 10 } }}\r\n                                >\r\n                                  Business Days\r\n                                </Typography>\r\n                                <Typography variant=\"h3\" sx={{ pt: 1, pl: { lg: 0, xl: 9 } }}>\r\n                                  <Checkbox\r\n                                    size=\"small\"\r\n                                    name=\"sunCheckbox\"\r\n                                    checked={sunCheckbox}\r\n                                    onChange={(e) => {\r\n                                      setSunCheckbox(e.target.checked);\r\n                                      console.log(\"C\", e.target.checked);\r\n                                    }}\r\n                                  />\r\n                                  Sunday\r\n                                </Typography>\r\n                                <Typography variant=\"h3\" sx={{ pt: 0, pl: { lg: 0, xl: 9 } }}>\r\n                                  <Checkbox\r\n                                    size=\"small\"\r\n                                    name=\"monCheckbox\"\r\n                                    checked={monCheckbox}\r\n                                    onChange={(e) => {\r\n                                      setMonCheckbox(e.target.checked);\r\n                                      console.log(\"C\", e.target.checked);\r\n                                    }}\r\n                                  />\r\n                                  Monday\r\n                                </Typography>\r\n                                <Typography variant=\"h3\" sx={{ pt: 0, pl: { lg: 0, xl: 9 } }}>\r\n                                  <Checkbox\r\n                                    size=\"small\"\r\n                                    name=\"tueCheckbox\"\r\n                                    checked={tueCheckbox}\r\n                                    onChange={(e) => {\r\n                                      setTueCheckbox(e.target.checked);\r\n                                      console.log(\"C\", e.target.checked);\r\n                                    }}\r\n                                  />\r\n                                  Tuesday\r\n                                </Typography>\r\n                                <Typography variant=\"h3\" sx={{ pt: 0, pl: { lg: 0, xl: 9 } }}>\r\n                                  <Checkbox\r\n                                    size=\"small\"\r\n                                    name=\"wedCheckbox\"\r\n                                    checked={wedCheckbox}\r\n                                    onChange={(e) => {\r\n                                      setWedCheckbox(e.target.checked);\r\n                                      console.log(\"C\", e.target.checked);\r\n                                    }}\r\n                                  />\r\n                                  Wednesday\r\n                                </Typography>\r\n                                <Typography variant=\"h3\" sx={{ pt: 0, pl: { lg: 0, xl: 9 } }}>\r\n                                  <Checkbox\r\n                                    size=\"small\"\r\n                                    name=\"thuCheckbox\"\r\n                                    checked={thuCheckbox}\r\n                                    onChange={(e) => {\r\n                                      setThuCheckbox(e.target.checked);\r\n                                      console.log(\"C\", e.target.checked);\r\n                                    }}\r\n                                  />\r\n                                  Thursday\r\n                                </Typography>\r\n                                <Typography variant=\"h3\" sx={{ pt: 0, pl: { lg: 0, xl: 9 } }}>\r\n                                  <Checkbox\r\n                                    size=\"small\"\r\n                                    name=\"friCheckbox\"\r\n                                    checked={friCheckbox}\r\n                                    onChange={(e) => {\r\n                                      setFriCheckbox(e.target.checked);\r\n                                      console.log(\"C\", e.target.checked);\r\n                                    }}\r\n                                  />\r\n                                  Friday\r\n                                </Typography>\r\n                                <Typography variant=\"h3\" sx={{ pt: 0, pl: { lg: 0, xl: 9 } }}>\r\n                                  <Checkbox\r\n                                    size=\"small\"\r\n                                    name=\"satCheckbox\"\r\n                                    checked={satCheckbox}\r\n                                    onChange={(e) => {\r\n                                      setSatCheckbox(e.target.checked);\r\n                                      console.log(\"C\", e.target.checked);\r\n                                    }}\r\n                                  />\r\n                                  Saturday\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid className=\"row\" item xs={6} md={3.5} lg={4}>\r\n                                <Typography\r\n                                  className=\"col\"\r\n                                  variant=\"h3\"\r\n                                  sx={{ pt: 0, pl: { lg: 0, xl: 10 }, color: \"#00BFFF\" }}\r\n                                >\r\n                                  Start Time\r\n                                </Typography>\r\n                                <TextField\r\n                                  type=\"time\"\r\n                                  className=\"input-box col-10\"\r\n                                  sx={{ pt: 0, pl: { lg: 0, xl: 10 } }}\r\n                                  name=\"Sunday_Starttime\"\r\n                                  value={business.Sunday_Starttime}\r\n                                  onChange={handleInputChange}\r\n                                  autoComplete=\"off\"\r\n                                />\r\n                                <TextField\r\n                                  type=\"time\"\r\n                                  className=\"input-box col-10\"\r\n                                  sx={{ pt: 0, pl: { lg: 0, xl: 10 } }}\r\n                                  name=\"Monday_Starttime\"\r\n                                  value={business.Monday_Starttime}\r\n                                  onChange={handleInputChange}\r\n                                  autoComplete=\"off\"\r\n                                />\r\n                                <TextField\r\n                                  type=\"time\"\r\n                                  className=\"input-box col-10\"\r\n                                  sx={{ pt: 0, pl: { lg: 0, xl: 10 } }}\r\n                                  name=\"Tuesday_Starttime\"\r\n                                  value={business.Tuesday_Starttime}\r\n                                  onChange={handleInputChange}\r\n                                  autoComplete=\"off\"\r\n                                />\r\n                                <TextField\r\n                                  type=\"time\"\r\n                                  className=\"input-box col-10\"\r\n                                  sx={{ pt: 0, pl: { lg: 0, xl: 10 } }}\r\n                                  name=\"Wednessday_Starttime\"\r\n                                  value={business.Wednessday_Starttime}\r\n                                  onChange={handleInputChange}\r\n                                  autoComplete=\"off\"\r\n                                />\r\n                                <TextField\r\n                                  type=\"time\"\r\n                                  className=\"input-box col-10\"\r\n                                  sx={{ pt: 0, pl: { lg: 0, xl: 10 } }}\r\n                                  name=\"Thursday_Starttime\"\r\n                                  value={business.Thursday_Starttime}\r\n                                  onChange={handleInputChange}\r\n                                  autoComplete=\"off\"\r\n                                />\r\n                                <TextField\r\n                                  type=\"time\"\r\n                                  className=\"input-box col-10\"\r\n                                  sx={{ pt: 0, pl: { lg: 0, xl: 10 } }}\r\n                                  name=\"Friday_Starttime\"\r\n                                  value={business.Friday_Starttime}\r\n                                  onChange={handleInputChange}\r\n                                  autoComplete=\"off\"\r\n                                />\r\n                                <TextField\r\n                                  type=\"time\"\r\n                                  className=\"input-box col-10\"\r\n                                  sx={{ pt: 0, pl: { lg: 0, xl: 10 } }}\r\n                                  name=\"Saturday_Starttime\"\r\n                                  value={business.Saturday_Starttime}\r\n                                  onChange={handleInputChange}\r\n                                  autoComplete=\"off\"\r\n                                />\r\n                              </Grid>\r\n                              <Grid className=\"row\" item xs={6} md={3.5} lg={4}>\r\n                                <Typography\r\n                                  variant=\"h3\"\r\n                                  sx={{ pt: 0, pl: { lg: 0, xl: 10 }, color: \"#00BFFF\" }}\r\n                                >\r\n                                  End Time\r\n                                </Typography>\r\n\r\n                                <TextField\r\n                                  type=\"time\"\r\n                                  className=\"input-box col-10\"\r\n                                  sx={{ pt: 0, pl: { lg: 0, xl: 10 } }}\r\n                                  name=\"Sunday_Endtime\"\r\n                                  value={business.Sunday_Endtime}\r\n                                  onChange={handleInputChange}\r\n                                  autoComplete=\"off\"\r\n                                />\r\n                                <TextField\r\n                                  type=\"time\"\r\n                                  className=\"input-box col-10\"\r\n                                  sx={{ pt: 0, pl: { lg: 0, xl: 10 } }}\r\n                                  name=\"Monday_EndTime\"\r\n                                  value={business.Monday_EndTime}\r\n                                  onChange={handleInputChange}\r\n                                  autoComplete=\"off\"\r\n                                />\r\n                                <TextField\r\n                                  type=\"time\"\r\n                                  className=\"input-box col-10\"\r\n                                  sx={{ pt: 0, pl: { lg: 0, xl: 10 } }}\r\n                                  name=\"Tuesday_Endtime\"\r\n                                  value={business.Tuesday_Endtime}\r\n                                  onChange={handleInputChange}\r\n                                  autoComplete=\"off\"\r\n                                />\r\n                                <TextField\r\n                                  type=\"time\"\r\n                                  className=\"input-box col-10\"\r\n                                  sx={{ pt: 0, pl: { lg: 0, xl: 10 } }}\r\n                                  name=\"Wednessday_Endtime\"\r\n                                  value={business.Wednessday_Endtime}\r\n                                  onChange={handleInputChange}\r\n                                  autoComplete=\"off\"\r\n                                />\r\n                                <TextField\r\n                                  type=\"time\"\r\n                                  className=\"input-box col-10\"\r\n                                  sx={{ pt: 0, pl: { lg: 0, xl: 10 } }}\r\n                                  name=\"Thursday_Endtime\"\r\n                                  value={business.Thursday_Endtime}\r\n                                  onChange={handleInputChange}\r\n                                  autoComplete=\"off\"\r\n                                />\r\n                                <TextField\r\n                                  type=\"time\"\r\n                                  className=\"input-box col-10\"\r\n                                  sx={{ pt: 0, pl: { lg: 0, xl: 10 } }}\r\n                                  name=\"Friday_Endtime\"\r\n                                  value={business.Friday_Endtime}\r\n                                  onChange={handleInputChange}\r\n                                  autoComplete=\"off\"\r\n                                />\r\n                                <TextField\r\n                                  type=\"time\"\r\n                                  className=\"input-box col-10\"\r\n                                  sx={{ pt: 0, pl: { lg: 0, xl: 10 } }}\r\n                                  name=\"Saturday_Endtime\"\r\n                                  value={business.Saturday_Endtime}\r\n                                  onChange={handleInputChange}\r\n                                  autoComplete=\"off\"\r\n                                />\r\n                              </Grid>\r\n\r\n                            </Grid>\r\n                          </Div>\r\n                        </Div>\r\n\r\n                        {/* code for Currencies */}\r\n                        <Div\r\n                          style={{\r\n                            display: showCurrencies === true ? \"block\" : \"none\",\r\n                          }}\r\n                        >\r\n                          <Typography\r\n                            variant=\"h2\"\r\n                            sx={{ pl: { xs: 0, md: 3.5 }, pt: 3, fontWeight: 600 }}\r\n                          >\r\n                            Currencies\r\n                          </Typography>\r\n                          <Typography\r\n                            variant=\"h3\"\r\n                            sx={{ pl: { xs: 0, md: 3.5 }, fontWeight: 500 }}\r\n                          >\r\n                            You can fix your currencies which will be used to\r\n                            transact all financial transactions. Once you setup\r\n                            you can not change later\r\n                          </Typography>\r\n                          <Div sx={{ mt: 5, pl: { xs: 0, md: 3.5 } }}>\r\n                            <Grid container>\r\n                              <Grid className=\"row\" item xs={12} md={5} lg={4} xl={2.8}>\r\n                                <Typography\r\n                                  variant=\"h3\"\r\n                                  className=\"col-12\"\r\n                                  sx={{ color: \"#00BFFF\" }}\r\n                                >\r\n                                  Home Currencies\r\n                                </Typography>\r\n                                <Div className=\"col-12 col-lg-12 col-md-12 col-xl-12\">\r\n                                  <Autocomplete\r\n                                    className=\"search-select\"\r\n                                    name=\"currency\"\r\n                                    getOptionLabel={(option) => option?.curency}\r\n                                    options={currencies}\r\n                                    value={currencies?.find(\r\n                                      (option) => option?.curency === currency\r\n                                    )}\r\n                                    onChange={(e, newValue) => {\r\n                                      setCurrency(newValue?.curency);\r\n                                      console.log(\"HHH\", newValue);\r\n                                    }}\r\n                                    renderInput={(params) => (\r\n                                      <TextField\r\n                                        {...params}\r\n                                        placeholder=\"Currency Format\"\r\n                                        autoComplete=\"off\"\r\n                                      />\r\n                                    )}\r\n                                  />\r\n                                </Div>\r\n                              </Grid>\r\n                              <Grid className=\"row\" item xs={12} md={6} lg={5} xl={3}>\r\n                                <Typography\r\n                                  className=\"col-12 col-xl-12\"\r\n                                  variant=\"h3\"\r\n                                  sx={{ pt: 0, pl: 6, color: \"#00BFFF\" }}\r\n                                >\r\n                                  Format\r\n                                </Typography>\r\n                                <Div className=\"col-12 col-md-10 col-lg-10 col-xl-12\">\r\n                                  <TextField\r\n                                    className=\"input-box col-12 col-md-12 col-lg-12 col-xl-12\"\r\n                                    value={currencyFormat}\r\n                                    placeholder=\"Currency Format\"\r\n                                    autoComplete=\"off\"\r\n                                    disabled\r\n                                  />\r\n                                </Div>\r\n                              </Grid>\r\n                            </Grid>\r\n                            <Div sx={{ mt: 10, pl: 2 }}>\r\n                              <ButtonGroup\r\n                                aria-label=\"split button\"\r\n                                sx={{\r\n                                  mt: { xs: 0.5, lg: 0 },\r\n                                  mr: { xs: 0, md: 1 }\r\n                                }}\r\n                              >\r\n                                <Button className=\"plus-button\" sx={{ width: \"99px\" }} onClick={handleClickConfirm}>\r\n                                  Confirm\r\n                                </Button>\r\n                                <Button variant=\"contained\" className=\"icon-button\">\r\n                                  <FaSave size={18} />\r\n                                </Button>\r\n                              </ButtonGroup>\r\n                            </Div>\r\n                          </Div>\r\n                        </Div>\r\n                      </Div>\r\n                    </Div>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </Div>\r\n          }\r\n\r\n\r\n          {showUpdate &&\r\n            <UpdateCompanyDetails\r\n              showEdit={showEdit}\r\n              showUpdate={showUpdate}\r\n              setShowEdit={setShowEdit}\r\n              setShowUpdate={setShowUpdate}\r\n              id={id}\r\n              compId={compId}\r\n            />\r\n          }\r\n\r\n          <ScrollToTop Scrollheight={180} />\r\n        </Suspense>\r\n      </JumboContentLayoutMain>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditCompanyDetails;\r\n","// @mui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport useMediaQuery from '@mui/material/useMediaQuery';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function useResponsive(query, key, start, end) {\r\n  const theme = useTheme();\r\n\r\n  const mediaUp = useMediaQuery(theme.breakpoints.up(key));\r\n\r\n  const mediaDown = useMediaQuery(theme.breakpoints.down(key));\r\n\r\n  const mediaBetween = useMediaQuery(theme.breakpoints.between(start, end));\r\n\r\n  const mediaOnly = useMediaQuery(theme.breakpoints.only(key));\r\n\r\n  if (query === 'up') {\r\n    return mediaUp;\r\n  }\r\n\r\n  if (query === 'down') {\r\n    return mediaDown;\r\n  }\r\n\r\n  if (query === 'between') {\r\n    return mediaBetween;\r\n  }\r\n\r\n  if (query === 'only') {\r\n    return mediaOnly;\r\n  }\r\n  return null;\r\n}\r\n"],"names":["_ref","Scrollheight","isVisible","setIsVisible","useState","isAboveXl","useResponsive","handleScroll","window","scrollY","useEffect","addEventListener","removeEventListener","_jsx","style","display","justifyContent","alignItems","position","bottom","right","zIndex","borderRadius","boxShadow","padding","width","height","backgroundColor","color","transition","cursor","onClick","scrollToTopHandler","scrollTo","top","behavior","className","children","FaArrowCircleUp","size","Setting","_Fragment","Div","Typography","variant","sx","fontWeight","mt","date","label","yearformat","currencies","curency","format","skeleton","id","compId","token","localStorage","getItem","header","headers","Authorization","concat","Accept","dispatch","useDispatch","userRolePermissions","formPermissions","modulePermissions","useSelector","selectedUserRolePermissions","business","setBusiness","companyAdd","setCompanyAdd","fiscal","setFiscal","companyLogo","setCompanyLogo","companyMail","setCompanyMail","companyName","setCompanyName","currency","setCurrency","currencyFormat","setCurrencyFormat","dateFormat","setDateFormat","fiscalMonth","setFiscalMonth","checkMonth","setCheckMonth","base64","setbase64","selectedCountry","setSelectedCountry","selectedState","setSelectedState","selectedCity","setSelectedCity","countries","setCountries","states","setStates","cities","setCities","showProfile","setShowProfile","showDetails","setShowDetails","showYear","setShowYear","showHour","setShowHour","showCurrencies","setShowCurrencies","accountingPeriods","setAccountingPeriods","errors","setErrors","sunCheckbox","setSunCheckbox","monCheckbox","setMonCheckbox","tueCheckbox","setTueCheckbox","wedCheckbox","setWedCheckbox","thuCheckbox","setThuCheckbox","friCheckbox","setFriCheckbox","satCheckbox","setSatCheckbox","loadingStatus","setLoadingStatus","companyId","async","axios","BASE_URL","then","res","_res$data","_res$data2","_res$data2$Business_H","_res$data3","_res$data3$Business_H","_res$data4","_res$data4$Business_H","_res$data5","_res$data5$Business_H","_res$data6","_res$data6$Business_H","_res$data7","_res$data7$Business_H","_res$data8","_res$data8$Business_H","_res$data9","_res$data10","_res$data11","_res$data12","_res$data13","_res$data14","_res$data15","_res$data16","_res$data17","_res$data18","_res$data19","_res$data20","_res$data21","_res$data22","_res$data23","_res$data23$CompanyAd","_res$data24","_res$data24$CompanyAd","_res$data25","_res$data25$CompanyAd","_res$data26","console","log","data","Business_Hour","Sunday_Chekbox","Monday_Chekbox","Tuesday_Chekbox","Wednessday_Chekbox","Thursday_Chekbox","Friday_Chekbox","Saturday_Chekbox","CompanyAddress","Fiscal_Year","CompanyMail","Company_Name","CompanyLogo","Currencies","DateFormat","Allow_Edit","Building_Country","Building_State","Building_City","fetch","response","arrayBuffer","buffer","_res$data27","btoa","Uint8Array","reduce","byte","String","fromCharCode","urlParts","split","length","catch","error","getCompanyDetails","lists","listofAccountingPeriod","countryId","setCountryId","stateId","setStateId","getStateLists","country","_res$data30","_res$data31","state","getCityLists","payload","_res$data32","city","citynames","map","cityname","_res$data28","_res$data29","handleInputChange","event","name","value","target","values","_objectSpread","Calendar_MonthName","handleReaderLoaded","e","binaryString","result","fetchUserRolePermissions","_jsxs","onSubmit","preventDefault","validForm","validate","Building_Street","Zip_Code","Building_Area","Object","keys","companyPayload","Company_Id","CompanyLogo_Name","Address_Id","parseInt","Address_Type","Building_Name","Created_By","Updated_By","Businesshours_Id","Monday_Starttime","Monday_EndTime","Tuesday_Starttime","Tuesday_Endtime","Wednessday_Starttime","Wednessday_Endtime","Thursday_Starttime","Thursday_Endtime","Friday_Starttime","Friday_Endtime","Saturday_Starttime","Saturday_Endtime","Sunday_Starttime","Sunday_Endtime","_res$data33","_res$data34","_res$data35","status","toast","success","setItem","mr","Array","isArray","includes","ButtonGroup","type","Button","MdSave","m","ml","p","minHeight","CommonOverviewSkeleton","fontSize","overflow","ShowCompanyProfile","minWidth","ShowCompanyDetails","ShowFiscalYear","ShowBusinessHour","ShowCurrencies","pl","xs","md","pt","Grid","item","sm","lg","Span","TextField","placeholder","onChange","autoComplete","container","Autocomplete","options","getOptionLabel","option","newValue","renderInput","params","getOptionValue","isOptionEqualToValue","xl","border","textAlign","alt","src","component","files","file","reader","FileReader","onload","readAsBinaryString","textTransform","hidden","accept","multiple","marginBottom","FormControl","CalendarName","FormControlLabel","control","Checkbox","checked","month","disabled","handleClickConfirm","FaSave","styled","Dialog","theme","spacing","EditCompanyDetails","useTheme","useMediaQuery","breakpoints","down","setId","setCompId","showEdit","setShowEdit","showUpdate","setShowUpdate","setSkeleton","_res$data$Business_Ho","_res$data$Business_Ho2","_res$data$Business_Ho3","_res$data$Business_Ho4","_res$data$Business_Ho5","_res$data$Business_Ho6","_res$data$Business_Ho7","_res$data13$CompanyAd","_res$data14$CompanyAd","_res$data15$CompanyAd","JumboContentLayoutMain","Suspense","fallback","alignContent","px","companyPayload1","Country","getAllCountries","State","isoCode","City","getCitiesOfState","countryCode","find","UpdateCompanyDetails","ScrollToTop","query","key","start","end","mediaUp","up","mediaDown","mediaBetween","between","mediaOnly","only"],"sourceRoot":""}