{"version":3,"file":"static/js/444.c91e9970.chunk.js","mappings":"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","sources":["app/pages/analytics/data.js","app/shared/metrics/NewSubscribers/data.js","app/pages/analytics/MonthlyProfit.js"],"sourcesContent":["const data = [\r\n  { name: 'Cost of Goods Sold', pv: 2400, amt: 2400 },\r\n  { name: 'Gross Profit', pv: 1398, amt: 2210 },\r\n  { name: 'Total Operating Expense', pv: 9800, amt: 2290 },\r\n  { name: 'Operating Profit', pv: 3908, amt: 2000 },\r\n  { name: 'Partner Earnings', pv: 4800, amt: 2181 },\r\n  { name: 'EBIT', pv: 2390, amt: 2500 },\r\n];\r\nexport default data;\r\n","export const newSubscribers = [\r\n    {month: 'Jan', count: 300},\r\n    {month: 'Feb', count: 500},\r\n    {month: 'Mar', count: 700},\r\n    {month: 'Apr', count: 900},\r\n    {month: 'May', count: 1050},\r\n    {month: 'Jun', count: 1250},\r\n    {month: 'Jul', count: 1500},\r\n];\r\n","import JumboContentLayoutMain from '@jumbo/components/JumboContentLayout/JumboContentLayoutMain';\r\nimport Div from '@jumbo/shared/Div';\r\nimport { Grid, Typography } from '@mui/material';\r\nimport React from 'react';\r\nimport data from './data';\r\nimport { Area, Bar, BarChart, CartesianGrid, Cell, ComposedChart, Legend, Line, Pie, PieChart, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { newSubscribers } from 'app/shared/metrics/NewSubscribers/data';\r\n\r\n\r\nconst datas = [\r\n    { name: 'Earning', value: 18756, color: '#00BFFF' },\r\n    { name: 'Pending', value: 5599, color: 'green' },\r\n];\r\n\r\n\r\nconst MonthlyProfit = () => {\r\n    const { t } = useTranslation();\r\n    return (\r\n        <>\r\n            <JumboContentLayoutMain>\r\n                <br /><br />\r\n                <Typography variant='h3'>Monthly Profit and Loss Statement</Typography>\r\n                <br /><br /><br />\r\n                <Div className='row'>\r\n                    <Div className='col-4'>\r\n                        <br /><br /><br /><br />\r\n                        <ResponsiveContainer width=\"95%\" height={350}>\r\n                            <ComposedChart layout=\"vertical\" data={data} margin={{ top: 0, right: 0, left: 10, bottom: 0 }}>\r\n                                <XAxis type=\"number\" />\r\n                                <YAxis dataKey=\"name\" type=\"category\" />\r\n                                <Tooltip labelStyle={{ color: 'black' }} itemStyle={{ color: 'black' }} cursor={false} />\r\n                                <Legend />\r\n                                <CartesianGrid stroke=\"#f5f5f5\" />\r\n                                <Bar dataKey=\"pv\" barSize={20} fill={\"#1e88e5\"} />\r\n                            </ComposedChart>\r\n                        </ResponsiveContainer>\r\n                    </Div>\r\n                    <Div className='col-8'>\r\n                        <br /><br /><br />\r\n                        <Grid container columnSpacing={6}>\r\n                            <Grid item xs={3}>\r\n                                <div>\r\n                                    <Typography variant={\"h3\"} color={\"common.black\"}>Total Revenue</Typography>\r\n                                    <Typography variant={\"h5\"} color={\"common.black\"}\r\n                                        mb={0}>{t('63,500.00')}</Typography>\r\n                                </div>\r\n                                <div>\r\n                                    <ResponsiveContainer height={100}>\r\n                                        <BarChart data={newSubscribers} margin={{ top: 0, right: 0, left: 0, bottom: 0 }}>\r\n                                            <Tooltip\r\n                                                cursor={false}\r\n                                                content={({ active, label, payload }) => {\r\n                                                    return active ? (\r\n                                                        <Div sx={{ color: \"common.white\" }}>\r\n                                                            {payload.map((row, index) => (\r\n                                                                <div key={index}>{`${label}: ${row.value} Subscribers`}</div>\r\n                                                            ))}\r\n                                                        </Div>\r\n                                                    ) : null;\r\n                                                }}\r\n                                                wrapperStyle={{\r\n                                                    backgroundColor: 'rgba(0,0,0,.8)',\r\n                                                    padding: '5px 8px',\r\n                                                    borderRadius: 4,\r\n                                                    overflow: 'hidden',\r\n                                                    boxShadow: 'rgba(0, 0, 0, 0.24) 0px 3px 8px'\r\n                                                }}\r\n                                            />\r\n                                            <XAxis dataKey=\"month\" color='white' />\r\n                                            <Bar dataKey=\"count\" stackId=\"a\" fill=\"green\" barSize={10} />\r\n                                        </BarChart>\r\n                                    </ResponsiveContainer>\r\n                                </div>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <div>\r\n                                    <Typography variant={\"h3\"} color={\"common.black\"}>Cost of Goods Sold</Typography>\r\n                                    <Typography variant={\"h5\"} color={\"common.black\"}\r\n                                        mb={0}>{t('63,500.00')}</Typography>\r\n                                </div>\r\n                                <div>\r\n                                    <ResponsiveContainer height={100}>\r\n                                        <BarChart data={newSubscribers} margin={{ top: 0, right: 0, left: 0, bottom: 0 }}>\r\n                                            <Tooltip\r\n                                                cursor={false}\r\n                                                content={({ active, label, payload }) => {\r\n                                                    return active ? (\r\n                                                        <Div sx={{ color: \"common.white\" }}>\r\n                                                            {payload.map((row, index) => (\r\n                                                                <div key={index}>{`${label}: ${row.value} Subscribers`}</div>\r\n                                                            ))}\r\n                                                        </Div>\r\n                                                    ) : null;\r\n                                                }}\r\n                                                wrapperStyle={{\r\n                                                    backgroundColor: 'rgba(0,0,0,.8)',\r\n                                                    padding: '5px 8px',\r\n                                                    borderRadius: 4,\r\n                                                    overflow: 'hidden',\r\n                                                    boxShadow: 'rgba(0, 0, 0, 0.24) 0px 3px 8px'\r\n                                                }}\r\n                                            />\r\n                                            <XAxis dataKey=\"month\" color='white' />\r\n                                            <Bar dataKey=\"count\" stackId=\"a\" fill=\"green\" barSize={10} />\r\n                                        </BarChart>\r\n                                    </ResponsiveContainer>\r\n                                </div>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <div>\r\n                                    <Typography variant={\"h3\"} color={\"common.black\"}>Gross Profit</Typography>\r\n                                    <Typography variant={\"h5\"} color={\"common.black\"}\r\n                                        mb={0}>{t('63,500.00')}</Typography>\r\n                                </div>\r\n                                <div>\r\n                                    <ResponsiveContainer height={100}>\r\n                                        <BarChart data={newSubscribers} margin={{ top: 0, right: 0, left: 0, bottom: 0 }}>\r\n                                            <Tooltip\r\n                                                cursor={false}\r\n                                                content={({ active, label, payload }) => {\r\n                                                    return active ? (\r\n                                                        <Div sx={{ color: \"common.white\" }}>\r\n                                                            {payload.map((row, index) => (\r\n                                                                <div key={index}>{`${label}: ${row.value} Subscribers`}</div>\r\n                                                            ))}\r\n                                                        </Div>\r\n                                                    ) : null;\r\n                                                }}\r\n                                                wrapperStyle={{\r\n                                                    backgroundColor: 'rgba(0,0,0,.8)',\r\n                                                    padding: '5px 8px',\r\n                                                    borderRadius: 4,\r\n                                                    overflow: 'hidden',\r\n                                                    boxShadow: 'rgba(0, 0, 0, 0.24) 0px 3px 8px'\r\n                                                }}\r\n                                            />\r\n                                            <XAxis dataKey=\"month\" color='white' />\r\n                                            <Bar dataKey=\"count\" stackId=\"a\" fill=\"green\" barSize={10} />\r\n                                        </BarChart>\r\n                                    </ResponsiveContainer>\r\n                                </div>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <div>\r\n                                    <Typography variant={\"h3\"} color={\"common.black\"}>Total Operating Exp</Typography>\r\n                                    <Typography variant={\"h5\"} color={\"common.black\"}\r\n                                        mb={0}>{t('63,500.00')}</Typography>\r\n                                </div>\r\n                                <div>\r\n                                    <ResponsiveContainer height={100}>\r\n                                        <BarChart data={newSubscribers} margin={{ top: 0, right: 0, left: 0, bottom: 0 }}>\r\n                                            <Tooltip\r\n                                                cursor={false}\r\n                                                content={({ active, label, payload }) => {\r\n                                                    return active ? (\r\n                                                        <Div sx={{ color: \"common.white\" }}>\r\n                                                            {payload.map((row, index) => (\r\n                                                                <div key={index}>{`${label}: ${row.value} Subscribers`}</div>\r\n                                                            ))}\r\n                                                        </Div>\r\n                                                    ) : null;\r\n                                                }}\r\n                                                wrapperStyle={{\r\n                                                    backgroundColor: 'rgba(0,0,0,.8)',\r\n                                                    padding: '5px 8px',\r\n                                                    borderRadius: 4,\r\n                                                    overflow: 'hidden',\r\n                                                    boxShadow: 'rgba(0, 0, 0, 0.24) 0px 3px 8px'\r\n                                                }}\r\n                                            />\r\n                                            <XAxis dataKey=\"month\" color='white' />\r\n                                            <Bar dataKey=\"count\" stackId=\"a\" fill=\"green\" barSize={10} />\r\n                                        </BarChart>\r\n                                    </ResponsiveContainer>\r\n                                </div>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n\r\n                        <br />\r\n                        <br />\r\n                        <Grid container columnSpacing={6}>\r\n                            <Grid item xs={3}>\r\n                                <div>\r\n                                    <Typography variant={\"h3\"} color={\"common.black\"}>Operating Profit</Typography>\r\n                                    <Typography variant={\"h5\"} color={\"common.black\"}\r\n                                        mb={0}>{t('63,500.00')}</Typography>\r\n                                </div>\r\n                                <div>\r\n                                    <ResponsiveContainer height={100}>\r\n                                        <BarChart data={newSubscribers} margin={{ top: 0, right: 0, left: 0, bottom: 0 }}>\r\n                                            <Tooltip\r\n                                                cursor={false}\r\n                                                content={({ active, label, payload }) => {\r\n                                                    return active ? (\r\n                                                        <Div sx={{ color: \"common.white\" }}>\r\n                                                            {payload.map((row, index) => (\r\n                                                                <div key={index}>{`${label}: ${row.value} Subscribers`}</div>\r\n                                                            ))}\r\n                                                        </Div>\r\n                                                    ) : null;\r\n                                                }}\r\n                                                wrapperStyle={{\r\n                                                    backgroundColor: 'rgba(0,0,0,.8)',\r\n                                                    padding: '5px 8px',\r\n                                                    borderRadius: 4,\r\n                                                    overflow: 'hidden',\r\n                                                    boxShadow: 'rgba(0, 0, 0, 0.24) 0px 3px 8px'\r\n                                                }}\r\n                                            />\r\n                                            <XAxis dataKey=\"month\" color='white' />\r\n                                            <Bar dataKey=\"count\" stackId=\"a\" fill=\"red\" barSize={10} />\r\n                                        </BarChart>\r\n                                    </ResponsiveContainer>\r\n                                </div>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <div>\r\n                                    <Typography variant={\"h3\"} color={\"common.black\"}>Partner Earnings</Typography>\r\n                                    <Typography variant={\"h5\"} color={\"common.black\"}\r\n                                        mb={0}>{t('63,500.00')}</Typography>\r\n                                </div>\r\n                                <div>\r\n                                    <ResponsiveContainer height={100}>\r\n                                        <BarChart data={newSubscribers} margin={{ top: 0, right: 0, left: 0, bottom: 0 }}>\r\n                                            <Tooltip\r\n                                                cursor={false}\r\n                                                content={({ active, label, payload }) => {\r\n                                                    return active ? (\r\n                                                        <Div sx={{ color: \"common.white\" }}>\r\n                                                            {payload.map((row, index) => (\r\n                                                                <div key={index}>{`${label}: ${row.value} Subscribers`}</div>\r\n                                                            ))}\r\n                                                        </Div>\r\n                                                    ) : null;\r\n                                                }}\r\n                                                wrapperStyle={{\r\n                                                    backgroundColor: 'rgba(0,0,0,.8)',\r\n                                                    padding: '5px 8px',\r\n                                                    borderRadius: 4,\r\n                                                    overflow: 'hidden',\r\n                                                    boxShadow: 'rgba(0, 0, 0, 0.24) 0px 3px 8px'\r\n                                                }}\r\n                                            />\r\n                                            <XAxis dataKey=\"month\" color='white' />\r\n                                            <Bar dataKey=\"count\" stackId=\"a\" fill=\"red\" barSize={10} />\r\n                                        </BarChart>\r\n                                    </ResponsiveContainer>\r\n                                </div>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <div>\r\n                                    <Typography variant={\"h3\"} color={\"common.black\"}>% of Revenue</Typography>\r\n                                    <Typography variant={\"h5\"} color={\"common.black\"}\r\n                                        mb={0}>{t('63,500.00')}</Typography>\r\n                                </div>\r\n                                <div>\r\n                                    <Div sx={{ mt: 0.5, mb: 1.5 }}>\r\n                                        <ResponsiveContainer height={90}>\r\n                                            <PieChart>\r\n                                                <text x=\"50%\" fontSize={16} y=\"50%\" textAnchor=\"middle\" dominantBaseline=\"middle\" fill=\"#000000\">\r\n                                                    1800\r\n                                                </text>\r\n                                                <Pie data={datas} dataKey=\"value\" cx=\"50%\" cy=\"50%\" innerRadius={36} outerRadius={44} fill=\"green\" >\r\n                                                    {\r\n                                                        datas.map((entry, index) => (\r\n                                                            <Cell key={index} fill={entry.color} />\r\n                                                        ))\r\n                                                    }\r\n                                                </Pie>\r\n                                            </PieChart>\r\n                                        </ResponsiveContainer>\r\n                                    </Div>\r\n                                    <Div>\r\n                                        <Typography variant={\"h4\"} textAlign={\"center\"} color={\"common.black\"}>65,300.00</Typography>\r\n                                        <Typography\r\n                                            variant={\"h5\"}\r\n                                            color={\"common.black\"}\r\n                                            mb={0}\r\n                                            textAlign={\"center\"}\r\n                                            sx={{ whiteSpace: 'nowrap' }}\r\n                                        >\r\n                                            {t('BUDGET')}\r\n                                        </Typography>\r\n                                    </Div>\r\n                                </div>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <div>\r\n                                    <Typography variant={\"h3\"} color={\"common.black\"}>% of Expense</Typography>\r\n                                    <Typography variant={\"h5\"} color={\"common.black\"}\r\n                                        mb={0}>{t('63,500.00')}</Typography>\r\n                                </div>\r\n                                <div>\r\n                                    <Div sx={{ mt: 0.5, mb: 1.5 }}>\r\n                                        <ResponsiveContainer height={90}>\r\n                                            <PieChart>\r\n                                                <text x=\"50%\" fontSize={16} y=\"50%\" textAnchor=\"middle\" dominantBaseline=\"middle\" fill=\"#000000\">\r\n                                                    1800\r\n                                                </text>\r\n                                                <Pie data={datas} dataKey=\"value\" cx=\"50%\" cy=\"50%\" innerRadius={36} outerRadius={44} fill=\"green\" >\r\n                                                    {\r\n                                                        datas.map((entry, index) => (\r\n                                                            <Cell key={index} fill={entry.color} />\r\n                                                        ))\r\n                                                    }\r\n                                                </Pie>\r\n                                            </PieChart>\r\n                                        </ResponsiveContainer>\r\n                                    </Div>\r\n                                    <Div>\r\n                                        <Typography variant={\"h4\"} textAlign={\"center\"} color={\"common.black\"}>65,300.00</Typography>\r\n                                        <Typography\r\n                                            variant={\"h5\"}\r\n                                            color={\"common.black\"}\r\n                                            mb={0}\r\n                                            textAlign={\"center\"}\r\n                                            sx={{ whiteSpace: 'nowrap' }}\r\n                                        >\r\n                                            {t('BUDGET')}\r\n                                        </Typography>\r\n                                    </Div>\r\n                                </div>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Div>\r\n                </Div>\r\n            </JumboContentLayoutMain>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MonthlyProfit;"],"names":["name","pv","amt","newSubscribers","month","count","datas","value","color","MonthlyProfit","t","useTranslation","_jsx","_Fragment","children","_jsxs","JumboContentLayoutMain","Typography","variant","Div","className","ResponsiveContainer","width","height","ComposedChart","layout","data","margin","top","right","left","bottom","XAxis","type","YAxis","dataKey","Tooltip","labelStyle","itemStyle","cursor","Legend","CartesianGrid","stroke","Bar","barSize","fill","Grid","container","columnSpacing","item","xs","mb","BarChart","content","_ref","active","label","payload","sx","map","row","index","concat","wrapperStyle","backgroundColor","padding","borderRadius","overflow","boxShadow","stackId","_ref2","_ref3","_ref4","_ref5","_ref6","mt","PieChart","x","fontSize","y","textAnchor","dominantBaseline","Pie","cx","cy","innerRadius","outerRadius","entry","Cell","textAlign","whiteSpace"],"sourceRoot":""}