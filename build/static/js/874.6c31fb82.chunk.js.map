{"version":3,"file":"static/js/874.6c31fb82.chunk.js","mappings":"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","sources":["app/pages/ScrollToTop.js","app/pages/settings/Setting.js","app/pages/settings/Workflow/WorkflowRules/CreateWorkflowRules.js","app/pages/settings/Workflow/WorkflowRules/EditWorkflowRules.js","app/pages/settings/Workflow/WorkflowRules/ListWorkflowRules.js","app/pages/useResponsive.js","app/schemas/SettingValidationSchemas.js","app/shared/ReuseComponents/CommonPagination.js","app/shared/ReuseComponents/ErpDialogBoxes.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { FaArrowCircleUp } from 'react-icons/fa';\r\nimport useResponsive from './useResponsive';\r\n\r\nconst ScrollToTop = ({ Scrollheight }) => {\r\n  const [isVisible, setIsVisible] = useState(false);\r\n  const isAboveXl = useResponsive(\"up\", \"xl\");\r\n\r\n  const handleScroll = () => {\r\n    if (window.scrollY > Scrollheight) {\r\n      setIsVisible(true);\r\n    } else {\r\n      setIsVisible(false);\r\n    }\r\n  };\r\n\r\n  const scrollToTopHandler = () => {\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: 'smooth',\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', handleScroll);\r\n\r\n    return () => {\r\n      window.removeEventListener('scroll', handleScroll);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: isVisible ? 'flex' : 'none',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        position: 'fixed',\r\n        bottom: isAboveXl ? \"10%\" : \"10.5%\",\r\n        right: '10px',\r\n        zIndex: 99999,\r\n        borderRadius: '50%',\r\n        boxShadow: '0px 2px 9px lightgray',\r\n        padding: 0.5,\r\n        width: '35px',\r\n        height: '35px',\r\n        backgroundColor: 'white',\r\n        color: '#00bfff',\r\n        transition: 'linear 1.5s ease-in-out',\r\n        cursor: 'pointer',\r\n      }}\r\n      onClick={scrollToTopHandler}\r\n      className=\"topToBottomAnimation\"\r\n    >\r\n      <FaArrowCircleUp size={22} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ScrollToTop;\r\n","import React from 'react';\nimport { Typography } from '@mui/material';\nimport Div from \"@jumbo/shared/Div\";\nimport './Setting.css';\n\n\n\n\nconst Setting = () => {\n  return ( \n    <>\n      <Div>\n        {/* <img src='.\\images\\mainlogo-icon.jpg' width={30} height={30}></img> */}\n        <Typography variant='h1' sx={{ fontWeight: 800, mt: -2}}>Settings</Typography>\n      </Div>\n    </>\n    \n  )\n}\n\nexport default Setting;\n","import {\r\n  Autocomplete,\r\n  Button,\r\n  ButtonGroup,\r\n  FormControl,\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\nimport Div from \"@jumbo/shared/Div/Div\";\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"app/services/auth-services\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { workflowRuleValidationSchema } from \"app/schemas/SettingValidationSchemas\";\r\nimport { FaSave } from \"react-icons/fa\";\r\nimport { TiCancel } from \"react-icons/ti\";\r\nimport { todayDate } from \"app/shared/ReuseComponents/DateFormatter\";\r\n\r\nconst actionNames = [\r\n  { id: 0, name: \"Create\" },\r\n  { id: 1, name: \"Create/Edit\" },\r\n  { id: 2, name: \"Delete\" },\r\n];\r\n\r\nconst CreateWorkflowRules = ({\r\n  setListWorkflow,\r\n  setCreateWorkflow,\r\n  listOfWorkflows,\r\n  workflows\r\n}) => {\r\n  const token = localStorage.getItem(\"accesstoken\");\r\n\r\n  const header = {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n      \"Content-Type\": \"application/json\",\r\n      Accept: \"application/json\",\r\n    },\r\n  };\r\n\r\n  const [ruleName1, setRuleName1] = useState(\"\");\r\n  const [action, setAction] = useState(null);\r\n\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({\r\n    mode: \"onBlur\",\r\n    resolver: yupResolver(workflowRuleValidationSchema),\r\n  });\r\n\r\n  const handleSaveActions = (e) => {\r\n    // e.preventDefault();\r\n    if (workflows?.find((opt) => opt?.Rule_Name === ruleName1)) {\r\n      toast.warning(`Workflow Rule ${ruleName1} is already created.`)\r\n    } else {\r\n      var payload = {\r\n        Partner_Id: parseInt(localStorage.getItem(\"PartnerId\")),\r\n        Rule_Name: ruleName1.replace(/[&!@#$%^0-9]/g, ''),\r\n        Action: action,\r\n        Company_Id: parseInt(localStorage.getItem(\"OrganizationId\")),\r\n        Created_By: parseInt(localStorage.getItem(\"UserId\")),\r\n        Updated_By: parseInt(localStorage.getItem(\"UserId\")),\r\n        Created_Date: todayDate\r\n      };\r\n      axios\r\n        .post(`${BASE_URL}/Erpapp/WorkflowRuleCRUD/`, payload, header)\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res?.status === 201 && res?.data?.id) {\r\n            toast.success(\"Created Successfully\");\r\n            setListWorkflow(true);\r\n            setCreateWorkflow(false);\r\n            setRuleName1(\"\");\r\n            setAction(\"\");\r\n            listOfWorkflows();\r\n          } else {\r\n            toast.error(\"Check Your Inputs\");\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n\r\n      <Typography variant=\"h3\" sx={{ fontWeight: 600 }}>\r\n        Create Workflow Rule\r\n      </Typography>\r\n      <Typography variant=\"h4\" sx={{ fontWeight: 500 }}>\r\n        Users shall use this form to set up the approvers to approve various\r\n        documents\r\n      </Typography>\r\n\r\n      <Div>\r\n        <form onSubmit={handleSubmit(handleSaveActions)}>\r\n          <Div className=\"\" sx={{ minHeight: { sm: \"250px\", md: \"350px\" } }}>\r\n            <Grid container rowSpacing={2} sx={{ mt: { sm: 2, md: 3 }, ml: { sm: 0, md: 1 } }}>\r\n              <Grid item xs={12} className=\"row\">\r\n                <Typography className=\"col-12 col-md-4 col-lg-3 col-xl-2\">\r\n                  Rule Name <span className=\"required\">*</span>\r\n                </Typography>\r\n\r\n                <Div className=\"col-12 col-md-4\">\r\n                  <TextField\r\n                    className=\"input-box col-12\"\r\n                    name=\"ruleName1\"\r\n                    {...register(\"ruleName1\")}\r\n                    value={ruleName1}\r\n                    onChange={(e) => setRuleName1(e.target.value)}\r\n                    placeholder=\"Rule Name\"\r\n                    variant=\"outlined\"\r\n                  />\r\n                  <Div style={{ color: \"red\" }}>\r\n                    {errors.ruleName1?.message}\r\n                  </Div>\r\n                </Div>\r\n              </Grid>\r\n              <Grid item xs={12} className=\"row\">\r\n                <Typography className=\"col-12 col-md-4 col-lg-3 col-xl-2\">\r\n                  Action When <span className=\"required\">*</span>\r\n                </Typography>\r\n\r\n                <Div className=\"col-12 col-md-4\">\r\n                  <FormControl className=\"col-12\">\r\n                    <Autocomplete\r\n                      className={`search-select col-12 ${errors.action ? \"is-invalid\" : \"\"\r\n                        }`}\r\n                      name=\"action\"\r\n                      getOptionLabel={(option) => {\r\n                        if (typeof option === \"string\") {\r\n                          return option;\r\n                        }\r\n                        if (option && option?.name) {\r\n                          return option?.name;\r\n                        }\r\n                        return \"\";\r\n                      }}\r\n                      options={actionNames}\r\n                      value={actionNames?.find(\r\n                        (option) => option?.name === action\r\n                      ) || null}\r\n                      onChange={(e, newValue) => {\r\n                        console.log(newValue);\r\n                        setAction(newValue?.name);\r\n                      }}\r\n                      isOptionEqualToValue={(option, value) =>\r\n                        option?.id === value.id || value === \"\"\r\n                      }\r\n                      renderInput={(params) => (\r\n                        <TextField\r\n                          {...params}\r\n                          placeholder=\"Action Name\"\r\n                          {...register(\"action\")}\r\n                          variant=\"outlined\"\r\n                          autoComplete=\"off\"\r\n                        />\r\n                      )}\r\n                    />\r\n                    <Div style={{ color: \"red\" }}>\r\n                      {errors.action?.message}\r\n                    </Div>\r\n                  </FormControl>\r\n                </Div>\r\n              </Grid>\r\n            </Grid>\r\n          </Div>\r\n\r\n\r\n          {/* code for save and cancel button */}\r\n          <Div className=\"buttons\" sx={{ mt: 5 }}>\r\n            <ButtonGroup\r\n              aria-label=\"split button\"\r\n              type=\"submit\"\r\n              sx={{\r\n                mt: { xs: 0.5, lg: 0 },\r\n                mr: { xs: 0, md: 1 }\r\n              }}\r\n            >\r\n              <Button type=\"submit\" className=\"plus-button\">\r\n                Save\r\n              </Button>\r\n              <Button variant=\"contained\" className=\"icon-button\">\r\n                <FaSave size={18} />\r\n              </Button>\r\n            </ButtonGroup>\r\n\r\n            <ButtonGroup\r\n              aria-label=\"split button\"\r\n              sx={{\r\n                mt: { xs: 0.5, lg: 0 },\r\n                mr: { xs: 0, md: 1 }\r\n              }}\r\n              onClick={() => {\r\n                setListWorkflow(true);\r\n                setCreateWorkflow(false);\r\n                setRuleName1(\"\");\r\n                setAction(\"\");\r\n              }}\r\n            >\r\n              <Button className=\"plus-button\">Cancel</Button>\r\n              <Button variant=\"contained\" className=\"icon-button\">\r\n                <TiCancel size={24} />\r\n              </Button>\r\n            </ButtonGroup>\r\n          </Div>\r\n        </form>\r\n      </Div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateWorkflowRules;\r\n","import {\r\n  Autocomplete,\r\n  Button,\r\n  ButtonGroup,\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Div from \"@jumbo/shared/Div/Div\";\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"app/services/auth-services\";\r\nimport { toast } from \"react-toastify\";\r\nimport { FaSave } from \"react-icons/fa\";\r\nimport { TiCancel } from \"react-icons/ti\";\r\n\r\nconst actionNames = [\r\n  { id: 0, name: \"Create\" },\r\n  { id: 1, name: \"Create/Edit\" },\r\n  { id: 2, name: \"Delete\" },\r\n];\r\n\r\nconst EditWorkflowRules = ({\r\n  setListWorkflow,\r\n  setEditWorkflow,\r\n  listOfWorkflows,\r\n  currentWorkflows,\r\n}) => {\r\n  const token = localStorage.getItem(\"accesstoken\");\r\n\r\n  const header = {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n      \"Content-Type\": \"application/json\",\r\n      Accept: \"application/json\",\r\n    },\r\n  };\r\n\r\n  const [ruleName1, setRuleName1] = useState(\"\");\r\n  const [action, setAction] = useState(null);\r\n  const [errors, setErrors] = useState();\r\n\r\n\r\n  useEffect(() => {\r\n    const getWorkflowRule = async () => {\r\n      await axios.get(`${BASE_URL}/Erpapp/WorkflowRuleCRUD/?WorkflowRule_Id=${currentWorkflows?.WorkflowRule_Id}`, header).then((res) => {\r\n        const response = res?.data;\r\n        setRuleName1(response?.Rule_Name);\r\n        setAction(response?.Action)\r\n      }).catch((error) => {\r\n        console.log(error);\r\n      })\r\n    }\r\n\r\n    getWorkflowRule()\r\n  }, [currentWorkflows]);\r\n\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n\r\n    if (!ruleName1) {\r\n      newErrors.ruleName1 = [\r\n        { string: \"Rule Name is required.\", code: \"required\" },\r\n      ];\r\n    }\r\n    if (!action) {\r\n      newErrors.action = [\r\n        { string: \"Action is required.\", code: \"required\" },\r\n      ];\r\n    }\r\n\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleSaveActions = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (validateForm()) {\r\n      const payload = {\r\n        id: currentWorkflows?.id,\r\n        WorkflowRule_Id: currentWorkflows?.WorkflowRule_Id,\r\n        Partner_Id: currentWorkflows?.Partner_Id,\r\n        Rule_Name: ruleName1.replace(/[&!@#$%^0-9]/g, ''),\r\n        Action: action,\r\n        Company_Id: currentWorkflows?.Company_Id,\r\n        Created_By: currentWorkflows?.Created_By,\r\n        Updated_By: parseInt(localStorage.getItem(\"UserId\")),\r\n      };\r\n\r\n      axios\r\n        .put(`${BASE_URL}/Erpapp/WorkflowRuleCRUD/`, payload, header)\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res?.status === 200 && res?.data?.id) {\r\n            toast.success(\"Updated Successfully\");\r\n            setListWorkflow(true);\r\n            setEditWorkflow(false);\r\n            listOfWorkflows();\r\n            setErrors({});\r\n          } else {\r\n            toast.error(\"Check Your Inputs\");\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n\r\n      <Typography variant=\"h3\" sx={{ fontWeight: 600 }}>\r\n        Edit Workflow Rule\r\n      </Typography>\r\n      <Typography variant=\"h4\" sx={{ fontWeight: 500 }}>\r\n        Users shall use this form to set up the approvers to approve various\r\n        documents\r\n      </Typography>\r\n\r\n      <Div>\r\n        <form onSubmit={handleSaveActions}>\r\n          <Div className=\"\" sx={{ minHeight: { sm: \"250px\", md: \"350px\" } }}>\r\n            <Grid container rowSpacing={2} sx={{ mt: { sm: 2, md: 3 }, ml: { sm: 0, md: 1 } }}>\r\n              <Grid item xs={12} className=\"row\">\r\n                <Typography className=\"col-12 col-md-4 col-lg-3 col-xl-2 input-label\">\r\n                  Rule Name <span className=\"required\">*</span>\r\n                </Typography>\r\n\r\n                <Div className=\"col-12 col-md-4\">\r\n                  <TextField\r\n                    className=\"input-box col-12\"\r\n                    name=\"ruleName1\"\r\n                    value={ruleName1 || \"\"}\r\n                    onChange={(e) => setRuleName1(e.target.value)}\r\n                    placeholder=\"Rule Name\"\r\n                  />\r\n                  <Div style={{ color: \"red\" }}>\r\n                    {!ruleName1 && errors?.ruleName1?.[0] && (\r\n                      <div\r\n                        className=\"error\"\r\n                        style={{ color: \"red\", fontSize: \"12px\" }}\r\n                      >\r\n                        {errors?.ruleName1[0]?.string}\r\n                      </div>\r\n                    )}\r\n                  </Div>\r\n                </Div>\r\n              </Grid>\r\n              <Grid item xs={12} className=\"row\">\r\n                <Typography className=\"col-12 col-md-4 col-lg-3 col-xl-2 input-label\">\r\n                  Action When <span className=\"required\">*</span>\r\n                </Typography>\r\n\r\n                <Div className=\"col-12 col-md-4\">\r\n                  <Autocomplete\r\n                    className=\"search-select col-12\"\r\n                    name=\"action\"\r\n                    getOptionLabel={(option) => {\r\n                      if (typeof option === \"string\") {\r\n                        return option;\r\n                      }\r\n                      if (option && option?.name) {\r\n                        return option?.name;\r\n                      }\r\n                      return \"\";\r\n                    }}\r\n                    options={actionNames}\r\n                    value={action || \"\"}\r\n                    onChange={(e, newValue) => {\r\n                      console.log(newValue);\r\n                      setAction(newValue?.name);\r\n                    }}\r\n                    isOptionEqualToValue={(option, value) =>\r\n                      option?.name === value || value === \"\"\r\n                    }\r\n                    renderInput={(params) => (\r\n                      <TextField\r\n                        {...params}\r\n                        placeholder=\"Action Name\"\r\n                        variant=\"outlined\"\r\n                        autoComplete=\"off\"\r\n                      />\r\n                    )}\r\n                  />\r\n                  <Div style={{ color: \"red\" }}>\r\n                    <Div style={{ color: \"red\" }}>\r\n                      {!action && errors?.action?.[0] && (\r\n                        <div\r\n                          className=\"error\"\r\n                          style={{ color: \"red\", fontSize: \"12px\" }}\r\n                        >\r\n                          {errors?.action[0]?.string}\r\n                        </div>\r\n                      )}\r\n                    </Div>\r\n                  </Div>\r\n                </Div>\r\n\r\n              </Grid>\r\n            </Grid>\r\n          </Div>\r\n\r\n          {/* code for update and cancel button */}\r\n          <Div className=\"buttons\" sx={{ mt: 5 }}>\r\n            <ButtonGroup\r\n              aria-label=\"split button\"\r\n              type=\"submit\"\r\n              sx={{\r\n                mt: { xs: 0.5, lg: 0 },\r\n                mr: { xs: 0, md: 1 }\r\n              }}\r\n            >\r\n              <Button type=\"submit\" className=\"plus-button\">\r\n                Update\r\n              </Button>\r\n              <Button variant=\"contained\" className=\"icon-button\">\r\n                <FaSave size={18} />\r\n              </Button>\r\n            </ButtonGroup>\r\n\r\n            <ButtonGroup\r\n              aria-label=\"split button\"\r\n              sx={{\r\n                mt: { xs: 0.5, lg: 0 },\r\n                mr: { xs: 0, md: 1 }\r\n              }}\r\n              onClick={() => {\r\n                setListWorkflow(true);\r\n                setEditWorkflow(false);\r\n                setErrors({});\r\n              }}\r\n            >\r\n              <Button className=\"plus-button\">Cancel</Button>\r\n              <Button variant=\"contained\" className=\"icon-button\">\r\n                <TiCancel size={24} />\r\n              </Button>\r\n            </ButtonGroup>\r\n          </Div>\r\n        </form>\r\n      </Div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditWorkflowRules;\r\n","import JumboContentLayoutMain from \"@jumbo/components/JumboContentLayout/JumboContentLayoutMain\";\r\nimport JumboScrollbar from \"@jumbo/components/JumboScrollbar\";\r\nimport Div from \"@jumbo/shared/Div\";\r\nimport {\r\n  Grid,\r\n  IconButton,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { BiEdit } from \"react-icons/bi\";\r\nimport { MdDelete } from \"react-icons/md\";\r\nimport { toast } from \"react-toastify\";\r\nimport settingServices from \"app/services/setting-api-services\";\r\nimport CreateWorkflowRules from \"./CreateWorkflowRules\";\r\nimport EditWorkflowRules from \"./EditWorkflowRules\";\r\nimport Setting from \"../../Setting\";\r\nimport ScrollToTop from \"app/pages/ScrollToTop\";\r\nimport useResponsive from \"app/pages/useResponsive\";\r\nimport { DateFormatter } from \"app/shared/ReuseComponents/DateFormatter\";\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"app/services/auth-services\";\r\nimport CommonPagination from \"app/shared/ReuseComponents/CommonPagination\";\r\nimport { ErpDeleteDialogBox } from \"app/shared/ReuseComponents/ErpDialogBoxes\";\r\nimport { ErpCreateButton, ErpSearchBox } from \"app/shared/ReuseComponents/ButtonComponent\";\r\nimport { CustomSkeleton } from \"app/shared/ReuseComponents/StyledComponents\";\r\n\r\nconst ListWorkflowRules = ({ scrollHeight }) => {\r\n  const token = localStorage.getItem(\"accesstoken\");\r\n\r\n  const header = {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n      \"Content-Type\": \"application/json\",\r\n      Accept: \"application/json\",\r\n    },\r\n  };\r\n\r\n  const [listWorkflow, setListWorkflow] = useState(true);\r\n  const [createWorkflow, setCreateWorkflow] = useState(false);\r\n  const [editWorkflow, setEditWorkflow] = useState(false);\r\n  const [openDelete, setOpenDelete] = useState(false);\r\n\r\n  const [currentDeleteId, setCurrentDeleteId] = useState(\"\");\r\n  const [currentDeleteWorkflowNo, setCurrentDeleteWorkflowNo] = useState(\"\");\r\n\r\n  const [workflows, setWorkflows] = useState([]);\r\n  const [currentWorkflows, setCurrentWorkflows] = useState([]);\r\n  const [searchData, setSearchData] = useState(\"\")\r\n\r\n\r\n  // skeleton flag\r\n  const [skeleton, setSkeleton] = useState(false);\r\n\r\n\r\n  const [page, setPage] = useState(1);\r\n  const [count, setCount] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const rowsPerPageOptions = [10];\r\n  const totalRecords = count;\r\n  const totalPages = Math.ceil(totalRecords / rowsPerPage);\r\n  const visitedPages = page - 1;\r\n\r\n  let isMobile = useResponsive(\"down\", \"md\");\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(1);\r\n  };\r\n\r\n  const listOfWorkflows = () => {\r\n    setSkeleton(true);\r\n    settingServices\r\n      .listWorkflowRules(header)\r\n      .then((res) => {\r\n        console.log(res?.count);\r\n        setWorkflows(res?.results);\r\n        setCount(res?.count);\r\n        setSkeleton(false);\r\n      }).catch((error) => {\r\n        console.log(error);\r\n        setSkeleton(false);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    listOfWorkflows();\r\n  }, [setWorkflows]);\r\n\r\n\r\n  const CreateWorkFlow = () => {\r\n    setListWorkflow(false);\r\n    setCreateWorkflow(true);\r\n  };\r\n\r\n\r\n  const handleEditPopup = (data) => {\r\n    setEditWorkflow(true);\r\n    setListWorkflow(false);\r\n    setCurrentWorkflows(data);\r\n  };\r\n\r\n  const handleDeletePopup = (data) => {\r\n    setOpenDelete(true);\r\n    setCurrentDeleteId(data?.id);\r\n    setCurrentDeleteWorkflowNo(data?.WorkflowRule_Id);\r\n    setCurrentWorkflows(data);\r\n  };\r\n\r\n  const deleteData = (e) => {\r\n    e.preventDefault();\r\n\r\n    settingServices\r\n      .deleteWorkflowRule(currentDeleteWorkflowNo, header)\r\n      .then((response) => {\r\n        console.log(response);\r\n        toast.success(`${currentDeleteWorkflowNo} is Deleted Successfully`);\r\n        setOpenDelete(false);\r\n        listOfWorkflows();\r\n        // window.location.reload();\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const handleSearch = async (data) => {\r\n    await axios\r\n      .get(`${BASE_URL}/Erpapp/workflowrulesearch/?search=${data}`, header)\r\n      .then((res) => {\r\n        console.log(res?.data);\r\n        setWorkflows(res?.data);\r\n        setCount(res?.data?.length);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"ds\", error);\r\n      });\r\n  };\r\n\r\n\r\n  const handleSearchWorkflows = (e) => {\r\n    var data = e.target.value;\r\n    setSearchData(data);\r\n    data !== \"\" ? handleSearch(data) : listOfWorkflows();\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <JumboContentLayoutMain>\r\n        <Setting />\r\n        <Div sx={{ display: listWorkflow === true ? \"block\" : \"none\" }}>\r\n          <Typography variant=\"h3\" sx={{ fontWeight: 600 }}>\r\n            List Workflow Rules - Count : {count || 0}\r\n          </Typography>\r\n          <Typography variant=\"h4\" sx={{ fontWeight: 500 }}>\r\n            User shall use this form to list all the workflow rules created by\r\n            administrator. Administrator can also edit and remove a workflow\r\n            rule.\r\n          </Typography>\r\n\r\n          <Grid container sx={{ mt: 2 }}>\r\n            <Grid\r\n              item\r\n              className=\"filter\"\r\n              xs={12}\r\n              md={1}\r\n              lg={3}\r\n              xl={5}\r\n            ></Grid>\r\n\r\n            <Grid item xs={12} md={5} sm={12} lg={4} xl={4} >\r\n              <ErpSearchBox handleChange={handleSearchWorkflows} searchData={searchData} />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={6} sm={12} lg={5} xl={3} sx={{ display: \"flex\", justifyContent: \"flex-end\", mt: { xs: 1, md: 0 } }}>\r\n              <ErpCreateButton handleClick={CreateWorkFlow} name={\"Create Rule\"} />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {/* code for purchase list table */}\r\n          <Div sx={{ mt: 1 }} >\r\n            <JumboScrollbar\r\n              autoHeight={true}\r\n              autoHideTimeout={4000}\r\n              autoHeightMin={scrollHeight ? scrollHeight : 360}\r\n              autoHide={true}\r\n              hideTracksWhenNotNeeded\r\n              id=\"no-more-tables\"\r\n            >\r\n              <Table stickyHeader className=\"table\">\r\n                <TableHead className=\"table-head\">\r\n                  <TableRow sx={{ height: \"53px\" }}>\r\n                    <TableCell>Date</TableCell>\r\n                    <TableCell>Rule Id</TableCell>\r\n                    <TableCell>Rule Name</TableCell>\r\n                    <TableCell>Rule Actions</TableCell>\r\n                    <TableCell>Action</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {skeleton ? <CustomSkeleton headCount={5} rowCount={10} />\r\n                    : count > 0 ? (\r\n                      workflows\r\n                        .slice(\r\n                          visitedPages * rowsPerPage,\r\n                          visitedPages * rowsPerPage + rowsPerPage\r\n                        )\r\n                        .map((data) => {\r\n                          return (\r\n                            <TableRow hover key={data.id} sx={{ fontSize: 14 }}>\r\n                              <TableCell data-title=\"Date\">\r\n                                {/* {dateFormat && data?.Created_Date && format(new Date(data?.Created_Date), dateFormat) || data?.Created_Date} */}\r\n                                <DateFormatter date={data?.Created_Date} />\r\n                              </TableCell>\r\n                              <TableCell data-title=\"Rule Id\">\r\n                                {data?.WorkflowRule_Id}\r\n                              </TableCell>\r\n                              <TableCell data-title=\"Rule Name\">\r\n                                {data?.Rule_Name}\r\n                              </TableCell>\r\n                              <TableCell data-title=\"Rule Actions\">\r\n                                {data?.Action}\r\n                              </TableCell>\r\n\r\n                              <TableCell data-title=\"Action\">\r\n                                <Div>\r\n                                  <IconButton\r\n                                    size=\"small\"\r\n                                    className=\"edit-icon\"\r\n                                    onClick={() => handleEditPopup(data)}\r\n                                  >\r\n                                    <BiEdit />\r\n                                  </IconButton>\r\n\r\n                                  <IconButton\r\n                                    size=\"small\"\r\n                                    className=\"delete-icon\"\r\n                                    onClick={() => {\r\n                                      handleDeletePopup(data);\r\n                                    }}\r\n                                  >\r\n                                    <MdDelete />\r\n                                  </IconButton>\r\n                                </Div>\r\n                              </TableCell>\r\n\r\n                              {/* <Dialog onClose={handleClose} open={open}>\r\n                          <List sx={{ pt: 0 }}>\r\n                            <ListItem button\r\n                            // onClick={() => handleListItemClick()}\r\n                            >\r\n                              <ListItemText>\r\n                                <IconButton\r\n                                  size=\"small\"\r\n                                  sx={{\r\n                                    cursor: \"pointer\",\r\n                                    \"&:hover\": {\r\n                                      color: \"#00BFFF\",\r\n                                    },\r\n                                  }}\r\n                                >\r\n                                  <BiEdit />\r\n                                </IconButton>Edit\r\n                              </ListItemText>\r\n                            </ListItem>\r\n                            <ListItem button\r\n                            // onClick={() => handleListItemClick()}\r\n                            >\r\n                              <ListItemText>\r\n                                <IconButton\r\n                                  size=\"small\"\r\n                                  sx={{\r\n                                    cursor: \"pointer\",\r\n                                    \"&:hover\": {\r\n                                      color: \"#00BFFF\",\r\n                                    },\r\n                                  }}\r\n                                >\r\n                                  <MdDelete />\r\n                                </IconButton> Delete</ListItemText>\r\n                            </ListItem>\r\n                          </List>\r\n                        </Dialog> */}\r\n                            </TableRow>\r\n                          );\r\n                        })\r\n                    ) : (\r\n                      <TableRow>\r\n                        <TableCell colSpan={8} align=\"center\">\r\n                          No Workflows\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    )}\r\n                </TableBody>\r\n              </Table>\r\n            </JumboScrollbar>\r\n          </Div>\r\n\r\n          {/* pagination */}\r\n          <Div sx={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n            <CommonPagination\r\n              totalPages={totalPages}\r\n              page={page}\r\n              handleChangePage={handleChangePage}\r\n              rowsPerPageOptions={rowsPerPageOptions}\r\n              rowsPerPage={rowsPerPage}\r\n              handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n            />\r\n          </Div>\r\n\r\n          {/* Delete workflow popup */}\r\n          <ErpDeleteDialogBox flag={openDelete} setFlag={setOpenDelete} handleClick={deleteData} content={\"Are you sure you want to delete the workflow\"} id={currentWorkflows?.Rule_Name} />\r\n\r\n\r\n        </Div>\r\n\r\n        <Div sx={{ display: createWorkflow === true ? \"block\" : \"none\" }}>\r\n          <CreateWorkflowRules\r\n            setCreateWorkflow={setCreateWorkflow}\r\n            setListWorkflow={setListWorkflow}\r\n            listOfWorkflows={listOfWorkflows}\r\n            workflows={workflows}\r\n          />\r\n        </Div>\r\n        <Div sx={{ display: editWorkflow === true ? \"block\" : \"none\" }}>\r\n          <EditWorkflowRules\r\n            setEditWorkflow={setEditWorkflow}\r\n            setListWorkflow={setListWorkflow}\r\n            listOfWorkflows={listOfWorkflows}\r\n            currentWorkflows={currentWorkflows}\r\n          />\r\n        </Div>\r\n        <ScrollToTop Scrollheight={180} />\r\n      </JumboContentLayoutMain>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListWorkflowRules;\r\n","// @mui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport useMediaQuery from '@mui/material/useMediaQuery';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function useResponsive(query, key, start, end) {\r\n  const theme = useTheme();\r\n\r\n  const mediaUp = useMediaQuery(theme.breakpoints.up(key));\r\n\r\n  const mediaDown = useMediaQuery(theme.breakpoints.down(key));\r\n\r\n  const mediaBetween = useMediaQuery(theme.breakpoints.between(start, end));\r\n\r\n  const mediaOnly = useMediaQuery(theme.breakpoints.only(key));\r\n\r\n  if (query === 'up') {\r\n    return mediaUp;\r\n  }\r\n\r\n  if (query === 'down') {\r\n    return mediaDown;\r\n  }\r\n\r\n  if (query === 'between') {\r\n    return mediaBetween;\r\n  }\r\n\r\n  if (query === 'only') {\r\n    return mediaOnly;\r\n  }\r\n  return null;\r\n}\r\n","import React from \"react\";\r\nimport * as yup from \"yup\";\r\nimport * as Yup from \"yup\";\r\n\r\nexport const entityValidationSchema = yup.object({\r\n  entityName: yup\r\n    .string(\"Enter your entity name\")\r\n    .required(\"Entity name is required\"),\r\n  entityDescription: yup\r\n    .string(\"Enter your entity description\")\r\n    .required(\"Entity Description is required\")\r\n    .min(10, \"Entity Description must be at least 10 characters\")\r\n    .max(240, \"Entity Description must not exceed 240 characters\"),\r\n});\r\n\r\nexport const countryValidationSchema = Yup.object({\r\n  // entityName: Yup.string().required(\"Entity name is required\"),\r\n  countryName: Yup.string().required(\"Country name is required\"),\r\n  countryDescription: Yup.string()\r\n    .required(\"Country Description is required\")\r\n    .min(10, \"Country Description must be at least 10 characters\")\r\n    .max(240, \"Country Description must not exceed 240 characters\"),\r\n});\r\n\r\nexport const regionValidationSchema = yup.object({\r\n  // entityName: yup.string().required(\"Entity name is required\"),\r\n  // countryName: yup.string().required(\"Country name is required\"),\r\n  regionName: yup.string().required(\"Region name is required\"),\r\n  regionDescription: yup\r\n    .string()\r\n    .required(\"Region Description is required\")\r\n    .min(10, \"Region Description must be at least 10 characters\")\r\n    .max(240, \"Region Description must not exceed 240 characters\"),\r\n});\r\n\r\nexport const stateValidationSchema = yup.object({\r\n  // entityName: yup.string().required(\"Entity name is required\"),\r\n  // countryName: yup.string().required(\"Country name is required\"),\r\n  // regionName: yup.string().required(\"Region name is required\"),\r\n  stateName: yup.string().required(\"State name is required\"),\r\n  stateDescription: yup\r\n    .string()\r\n    .required(\"State Description is required\")\r\n    .min(10, \"State Description must be at least 10 characters\")\r\n    .max(240, \"State Description must not exceed 240 characters\"),\r\n});\r\n\r\nexport const cityValidationSchema = yup.object({\r\n  // entityName: yup.string().required(\"Entity name is required\"),\r\n  // countryName: yup.string().required(\"Country name is required\"),\r\n  // regionName: yup.string().required(\"Region name is required\"),\r\n  // stateName: yup.string().required(\"State name is required\"),\r\n  cityName: yup.string().required(\"City name is required\"),\r\n  cityDescription: yup\r\n    .string()\r\n    .required(\"City Description is required\")\r\n    .min(10, \"City Description must be at least 10 characters\")\r\n    .max(240, \"City Description must not exceed 240 characters\"),\r\n});\r\n\r\nexport const zoneValidationSchema = yup.object({\r\n  // cityName: yup\r\n  //   .string(\"Enter your city name\")\r\n  //   .required(\"City name is required\"),\r\n  pincode: yup.string(\"Enter the pincode\").required(\"Enter valid pincode\"),\r\n  zoneName: yup.string(\"Enter the zone name\").required(\"Zone name is required\"),\r\n});\r\n\r\nexport const itemMasterValidationSchema = yup.object({\r\n  itemName: yup.string().required(\"Item name is required\"),\r\n  uom: yup.string().required(\"Uom is required\"),\r\n  // imageName: yup.string().required(\"Item Image is required\"),\r\n  purchaseDescription: yup.string(),\r\n  inventoryDescription: yup.string(),\r\n  purchaseAccount: yup.string().required(\"Purchase account is required\"),\r\n  inventoryAccount: yup.string().required(\"Inventory account is required\"),\r\n});\r\n\r\n\r\nexport const lookupValidationSchema = yup.object({\r\n  itemName: yup.string().required(\"Lookup name is required\"),\r\n  // Lookupname: yup.string().required(\"Lookup Name is required\"),\r\n  // value: yup.string().required(\"Value is required\"),\r\n\r\n});\r\n\r\nexport const EditlookupValidationSchema = yup.object({\r\n  // Lookupname: yup.string().required(\"Lookup Name is required\"),\r\n  // value: yup.string().required(\"Value is required\"),\r\n});\r\n\r\n\r\nexport const storesValidationSchema = yup.object({\r\n  // storeId: yup.string().required(\"Store Id is required\"),\r\n  // partnerName: yup.string().required(\"Business Unit is required\"),\r\n  storeName: yup.string().required(\"Store Name is required\"),\r\n  // storeIncharge: yup.string().required(\"Store Incharge is required\"),\r\n  // buildingName: yup.string().required(\"Building Name is required\"),\r\n  // location: yup.string().required(\"Location is required\"),\r\n  // countryName: yup.string().required(\"Country is required\"),\r\n  // stateName: yup.string().required(\"State is required\"),\r\n  // cityName: yup.string().required(\"City is required\"),\r\n})\r\n\r\nexport const costcentreValidationSchema = yup.object({\r\n  // buName: yup.string().required(\"Business Unit is required\"),\r\n  costCentreName: yup.string().required(\"Cost Centre Name is required\"),\r\n})\r\n\r\nexport const mailConfigureValidationSchema = yup.object({\r\n  mailId: yup\r\n    .string()\r\n    .required(\"Mail Id is required\"),\r\n  mailPassword: yup\r\n    .string()\r\n    .required(\"Mail Password is required\")\r\n    .min(8, \"Mail Password must be at least 8 characters\"),\r\n});\r\n\r\n\r\nexport const workflowAssignValidationSchema = yup.object({\r\n  partnerName: yup\r\n    .string()\r\n    .required(\"Partner Name is required\"),\r\n  workflowName: yup\r\n    .string()\r\n    .required(\"Workflow Name is required\"),\r\n  basedOnWorkflow: yup\r\n    .string()\r\n    .required(\"Workflow Based On is required\"),\r\n  documentName: yup\r\n    .string()\r\n    .required(\"Document Name is required\"),\r\n  fieldName: yup\r\n    .string()\r\n    .required(\"Field Name is required\"),\r\n  noOfLevels: yup\r\n    .string()\r\n    .required(\"No of Level is required\"),\r\n});\r\n\r\n\r\n\r\nexport const workflowRuleValidationSchema = yup.object({\r\n  // partnerName: yup\r\n  //   .string()\r\n  //   .required(\"Partner Name is required\"),\r\n  ruleName1: yup\r\n    .string()\r\n    .required(\"Rule Name is required\"),\r\n  action: yup\r\n    .string()\r\n    .required(\"Action is required\"),\r\n});\r\n\r\n\r\n\r\nexport const workflowValidationSchema = yup.object({\r\n  partnerName: yup\r\n    .string()\r\n    .required(\"Partner Name is required\"),\r\n  workflowName: yup\r\n    .string()\r\n    .required(\"Workflow Name is required\"),\r\n  basedOnWorkflow: yup\r\n    .string()\r\n    .required(\"Workflow Based On is required\"),\r\n  ruleName: yup\r\n    .string()\r\n    .required(\"Rule Name is required\"),\r\n  noOfLevels: yup\r\n    .string()\r\n    .required(\"No of Level is required\"),\r\n});","import { useJumboLayoutSidebar } from \"@jumbo/hooks\";\r\nimport { Grid, MenuItem, Pagination, Select } from \"@mui/material\";\r\nimport useResponsive from \"app/pages/useResponsive\";\r\nimport React, { memo } from \"react\";\r\n\r\nconst CommonPagination = ({\r\n  totalPages,\r\n  page = 1,\r\n  handleChangePage = () => { },\r\n  rowsPerPageOptions,\r\n  rowsPerPage,\r\n  handleChangeRowsPerPage = () => { }\r\n}) => {\r\n\r\n  let isMobile = useResponsive(\"down\", \"md\");\r\n  let isTabOnly = useResponsive(\"down\", \"lg\");\r\n\r\n  const { sidebarOptions, setSidebarOptions } = useJumboLayoutSidebar();\r\n\r\n  console.log(\"sidebarOptions from pagination\", sidebarOptions?.open);\r\n\r\n  return (\r\n    <Grid container spacing={1} sx={{ mt: 2, display: \"flex\", alignItems: \"center\" }}>\r\n      <Grid item xs={12} md={0} lg={sidebarOptions?.open ? 1.5 : 3} xl={4.5}></Grid>\r\n      <Grid item xs={12} md={sidebarOptions?.open ? 5 : 4} lg={sidebarOptions?.open ? 4 : 4} xl={3.5} sx={{ display: \"flex\", justifyContent: { xs: \"center\", md: \"flex-end\" }, alignItems: \"center\", gap: \"10px !important\" }}>\r\n        {/* <label className=\"input-label\">Rows per page</label>\r\n        <Select\r\n          className=\"input-pagination-select\"\r\n          value={rowsPerPage}\r\n          onChange={handleChangeRowsPerPage}\r\n          variant=\"outlined\"\r\n          sx={{ minWidth: \"60px !important\" }}\r\n        >\r\n          {rowsPerPageOptions?.map((option) => (\r\n            <MenuItem key={option} value={option}>\r\n              {option}\r\n            </MenuItem>\r\n          ))}\r\n        </Select> */}\r\n      </Grid>\r\n      <Grid item xs={12} md={sidebarOptions?.open ? 7 : 8} lg={sidebarOptions?.open ? 6.5 : 5} xl={4} sx={{ display: \"flex\", justifyContent: { xs: \"center\", md: \"flex-end\" }, alignItems: \"center\", gap: \"10px !important\" }}>\r\n        <Pagination\r\n          color=\"primary\"\r\n          count={totalPages}\r\n          page={page}\r\n          onChange={(e, newValue) => handleChangePage(e, newValue)}\r\n          variant=\"outlined\"\r\n          shape=\"rounded\"\r\n          showFirstButton={Boolean(isMobile || isTabOnly) ? Boolean(sidebarOptions?.open || isMobile) ? false : true : true}\r\n          showLastButton={Boolean(isMobile || isTabOnly) ? Boolean(sidebarOptions?.open || isMobile) ? false : true : true}\r\n          siblingCount={0}\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default memo(CommonPagination);\r\n","import Div from '@jumbo/shared/Div'\r\nimport { Box, Button, ButtonGroup, Dialog, DialogActions, DialogContent, IconButton, Typography, styled, useMediaQuery, useTheme } from '@mui/material'\r\nimport React from 'react'\r\nimport { MdCheck, MdClear, MdClose, MdDelete } from 'react-icons/md'\r\nimport { TiCancel } from 'react-icons/ti'\r\n\r\n\r\nconst DialogBox = styled(Dialog)(({ theme }) => ({\r\n    '& .MuiDialog-paper': {\r\n        borderRadius: 5,\r\n        backgroundColor: theme.palette.background.default,\r\n        border: `1px solid ${theme.palette.divider}`,\r\n    },\r\n}));\r\n\r\nconst StyledIconButton = styled(IconButton)(({ theme }) => ({\r\n    color: theme.palette.error.main,\r\n    '&:hover': {\r\n        backgroundColor: theme.palette.error.light,\r\n        color: theme.palette.background.default,\r\n    },\r\n}));\r\n\r\nconst CustomTypography = styled(Typography)(({ theme }) => ({\r\n    padding: theme.spacing(0.5),\r\n    textAlign: 'left',\r\n    // backgroundColor: theme.palette.error.light,\r\n    // color: theme.palette.error.contrastText,\r\n    borderRadius: theme.shape.borderRadius,\r\n}));\r\n\r\n\r\nexport const ErpDeleteDialogBox = ({ flag, setFlag, handleClick, content, id, isMobile }) => {\r\n    const theme = useTheme();\r\n    const isMdUp = useMediaQuery(theme.breakpoints.down('md'));\r\n\r\n    return (\r\n        <DialogBox open={flag}\r\n            maxWidth={window.innerWidth <= 600 ? 'xs' : window.innerWidth <= 768 ? 'sm' : window.innerWidth <= 992 ? 'sm' : 'sm'}\r\n            fullWidth\r\n            onClose={() => setFlag(false)}\r\n        >\r\n            <DialogContent>\r\n                <Typography variant=\"h3\">\r\n                    {content}\r\n                    <span>&nbsp;</span>\r\n                    <span style={{ fontWeight: 700 }}>\r\n                        {\" \"}\r\n                        \"{id}\" ?\r\n                    </span>\r\n                </Typography>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                {isMobile ? isMobile : isMdUp ? (\r\n                    <>\r\n                        <Button variant=\"contained\" color={\"error\"} endIcon={<MdDelete />} onClick={handleClick}>\r\n                            Delete\r\n                        </Button>\r\n                        <Button variant=\"contained\" endIcon={<TiCancel />} onClick={() => setFlag(false)}>\r\n                            Cancel\r\n                        </Button>\r\n                    </>\r\n                ) :\r\n                    <Div className=\"buttons\">\r\n                        <ButtonGroup\r\n                            aria-label=\"split button\"\r\n                            onClick={handleClick}\r\n                            sx={{\r\n                                mt: { xs: 0.5, lg: 0 },\r\n                                mr: { xs: 0, md: 1 }\r\n                            }}\r\n                        >\r\n                            <Button className=\"plus-button\">\r\n                                Delete\r\n                            </Button>\r\n                            <Button variant=\"contained\" className=\"icon-button\">\r\n                                <MdDelete size={18} />\r\n                            </Button>\r\n                        </ButtonGroup>\r\n\r\n                        <ButtonGroup\r\n                            aria-label=\"split button\"\r\n                            onClick={() => setFlag(false)}\r\n                            sx={{\r\n                                mt: { xs: 0.5, lg: 0 },\r\n                                mr: { xs: 0, md: 1 }\r\n                            }}\r\n                        >\r\n                            <Button className=\"plus-button\">Cancel</Button>\r\n                            <Button variant=\"contained\" className=\"icon-button\">\r\n                                <TiCancel size={22} />\r\n                            </Button>\r\n                        </ButtonGroup>\r\n                    </Div>\r\n                }\r\n            </DialogActions>\r\n        </DialogBox>\r\n    )\r\n}\r\n\r\n\r\nexport const ErpConfirmDialogBox = ({ flag, setFlag, handleClick, content, isMobile }) => {\r\n    return (\r\n        <Dialog\r\n            open={flag}\r\n            maxWidth=\"sm\"\r\n            fullWidth\r\n        >\r\n            <DialogContent>\r\n                <Typography variant='h4'>\r\n                    {content}\r\n                </Typography>\r\n                <br />\r\n                <Typography variant='h4'>\r\n                    Do you want still to continue...\r\n                </Typography>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                {isMobile ? (\r\n                    <>\r\n                        <Button variant=\"contained\" color={\"error\"} endIcon={<MdCheck />} onClick={() => setFlag(false)} >\r\n                            Yes\r\n                        </Button>\r\n                        <Button variant=\"contained\" endIcon={<MdClear />} onClick={handleClick}>\r\n                            No\r\n                        </Button>\r\n                    </>\r\n                ) :\r\n                    <Div className=\"buttons\">\r\n                        <ButtonGroup\r\n                            aria-label=\"split button\"\r\n                            onClick={() => setFlag(false)}\r\n                            sx={{\r\n                                mt: { xs: 0.5, lg: 0 },\r\n                                mr: { xs: 0, md: 1 }\r\n                            }}\r\n                        >\r\n                            <Button className=\"plus-button\">\r\n                                Yes\r\n                            </Button>\r\n                            <Button variant=\"contained\" className=\"icon-button\">\r\n                                <MdCheck size={16} />\r\n                            </Button>\r\n                        </ButtonGroup>\r\n                        <ButtonGroup\r\n                            aria-label=\"split button\"\r\n                            onClick={handleClick}\r\n                            sx={{\r\n                                mt: { xs: 0.5, lg: 0 },\r\n                                mr: { xs: 0, md: 1 }\r\n                            }}\r\n                        >\r\n                            <Button className=\"plus-button\">\r\n                                No\r\n                            </Button>\r\n                            <Button variant=\"contained\" className=\"icon-button\">\r\n                                <MdClear size={16} />\r\n                            </Button>\r\n                        </ButtonGroup>\r\n                    </Div>\r\n                }\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\n\r\nexport const ErpStatusConfirmDialogBox = ({ flag, setFlag, handleClick, content, isMobile }) => {\r\n    return (\r\n        <Dialog\r\n            open={flag}\r\n            maxWidth=\"sm\"\r\n            fullWidth\r\n        >\r\n            <DialogContent>\r\n                <Typography variant='h4'>\r\n                    {content}\r\n                </Typography>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                {isMobile ? (\r\n                    <>\r\n                        <Button variant=\"contained\" color={\"error\"} endIcon={<MdCheck />} onClick={handleClick} >\r\n                            Yes\r\n                        </Button>\r\n                        <Button variant=\"contained\" endIcon={<MdClear />} onClick={() => setFlag(false)} >\r\n                            No\r\n                        </Button>\r\n                    </>\r\n                ) :\r\n                    <Div className=\"buttons\">\r\n                        <ButtonGroup\r\n                            aria-label=\"split button\"\r\n                            onClick={handleClick}\r\n                            sx={{\r\n                                mt: { xs: 0.5, lg: 0 },\r\n                                mr: { xs: 0, md: 1 }\r\n                            }}\r\n                        >\r\n                            <Button className=\"plus-button\">\r\n                                Yes\r\n                            </Button>\r\n                            <Button variant=\"contained\" className=\"icon-button\">\r\n                                <MdCheck size={16} />\r\n                            </Button>\r\n                        </ButtonGroup>\r\n                        <ButtonGroup\r\n                            aria-label=\"split button\"\r\n                            onClick={() => setFlag(false)}\r\n                            sx={{\r\n                                mt: { xs: 0.5, lg: 0 },\r\n                                mr: { xs: 0, md: 1 }\r\n                            }}\r\n                        >\r\n                            <Button className=\"plus-button\">\r\n                                No\r\n                            </Button>\r\n                            <Button variant=\"contained\" className=\"icon-button\">\r\n                                <MdClear size={16} />\r\n                            </Button>\r\n                        </ButtonGroup>\r\n                    </Div>\r\n                }\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\n\r\nexport const ErpAlertViewDialogBox = ({ flag, setFlag, isMobile }) => {\r\n    return (\r\n        <DialogBox\r\n            open={flag}\r\n            maxWidth=\"xs\"\r\n        // onClose={() => setFlag(false)} // Optional: You can enable this if you want the dialog to close on backdrop click.\r\n        >\r\n            <DialogContent>\r\n                <Div sx={{ p: 0, m: 0, mb: 2, display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\r\n                    <CustomTypography variant='h3'>\r\n                        Alert\r\n                    </CustomTypography>\r\n\r\n                    <StyledIconButton onClick={() => setFlag(false)} sx={{ p: 0.3 }}>\r\n                        <MdClose size={22} />\r\n                    </StyledIconButton>\r\n                </Div>\r\n                <Typography variant='h4' sx={{ color: 'text.secondary' }}>\r\n                    You don't have the permission to view this page.\r\n                </Typography>\r\n            </DialogContent>\r\n        </DialogBox>\r\n    )\r\n}\r\n\r\n\r\n"],"names":["_ref","Scrollheight","isVisible","setIsVisible","useState","isAboveXl","useResponsive","handleScroll","window","scrollY","useEffect","addEventListener","removeEventListener","_jsx","style","display","justifyContent","alignItems","position","bottom","right","zIndex","borderRadius","boxShadow","padding","width","height","backgroundColor","color","transition","cursor","onClick","scrollToTopHandler","scrollTo","top","behavior","className","children","FaArrowCircleUp","size","Setting","_Fragment","Div","Typography","variant","sx","fontWeight","mt","actionNames","id","name","_errors$ruleName","_errors$action","setListWorkflow","setCreateWorkflow","listOfWorkflows","workflows","token","localStorage","getItem","header","headers","Authorization","concat","Accept","ruleName1","setRuleName1","action","setAction","register","handleSubmit","formState","errors","useForm","mode","resolver","yupResolver","workflowRuleValidationSchema","_jsxs","onSubmit","e","find","opt","Rule_Name","toast","warning","payload","Partner_Id","parseInt","replace","Action","Company_Id","Created_By","Updated_By","Created_Date","todayDate","axios","BASE_URL","then","res","_res$data","console","log","status","data","success","error","minHeight","sm","md","Grid","container","rowSpacing","ml","item","xs","TextField","_objectSpread","value","onChange","target","placeholder","message","FormControl","Autocomplete","getOptionLabel","option","options","newValue","isOptionEqualToValue","renderInput","params","autoComplete","ButtonGroup","type","lg","mr","Button","FaSave","TiCancel","_errors$ruleName1$","_errors$action$","setEditWorkflow","currentWorkflows","setErrors","async","WorkflowRule_Id","response","catch","getWorkflowRule","preventDefault","validateForm","newErrors","string","code","Object","keys","length","fontSize","scrollHeight","listWorkflow","createWorkflow","editWorkflow","openDelete","setOpenDelete","currentDeleteId","setCurrentDeleteId","currentDeleteWorkflowNo","setCurrentDeleteWorkflowNo","setWorkflows","setCurrentWorkflows","searchData","setSearchData","skeleton","setSkeleton","page","setPage","count","setCount","rowsPerPage","setRowsPerPage","totalRecords","totalPages","Math","ceil","visitedPages","settingServices","listWorkflowRules","results","JumboContentLayoutMain","xl","ErpSearchBox","handleChange","handleSearch","ErpCreateButton","handleClick","CreateWorkFlow","JumboScrollbar","autoHeight","autoHideTimeout","autoHeightMin","autoHide","hideTracksWhenNotNeeded","Table","stickyHeader","TableHead","TableRow","TableCell","TableBody","CustomSkeleton","headCount","rowCount","slice","map","hover","DateFormatter","date","IconButton","handleEditPopup","BiEdit","handleDeletePopup","MdDelete","colSpan","align","flexWrap","CommonPagination","handleChangePage","event","newPage","rowsPerPageOptions","handleChangeRowsPerPage","ErpDeleteDialogBox","flag","setFlag","deleteWorkflowRule","content","CreateWorkflowRules","EditWorkflowRules","ScrollToTop","query","key","start","end","theme","useTheme","mediaUp","useMediaQuery","breakpoints","up","mediaDown","down","mediaBetween","between","mediaOnly","only","yup","entityName","required","entityDescription","min","max","Yup","countryName","countryDescription","regionName","regionDescription","stateName","stateDescription","cityName","cityDescription","pincode","zoneName","itemName","uom","purchaseDescription","inventoryDescription","purchaseAccount","inventoryAccount","storesValidationSchema","storeName","costCentreName","mailId","mailPassword","partnerName","workflowName","basedOnWorkflow","documentName","fieldName","noOfLevels","workflowValidationSchema","ruleName","isMobile","isTabOnly","sidebarOptions","setSidebarOptions","useJumboLayoutSidebar","open","spacing","gap","Pagination","shape","showFirstButton","Boolean","showLastButton","siblingCount","memo","DialogBox","styled","Dialog","palette","background","default","border","divider","StyledIconButton","_ref2","main","light","CustomTypography","_ref3","textAlign","_ref4","isMdUp","maxWidth","innerWidth","fullWidth","onClose","DialogContent","DialogActions","endIcon","ErpConfirmDialogBox","_ref5","MdCheck","MdClear","ErpAlertViewDialogBox","_ref7","p","m","mb","MdClose"],"sourceRoot":""}