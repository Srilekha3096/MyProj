{"version":3,"file":"static/js/568.b8932b29.chunk.js","mappings":"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","sources":["app/pages/settings/Workflow/PartnerWorkflow/CreatePartnerWorkflow.js","app/pages/settings/Workflow/PartnerWorkflow/EditPartnerWorkflow.js","app/pages/settings/Workflow/PartnerWorkflow/ListPartnerWorkflow.js","app/shared/ReuseComponents/CommonPagination.js"],"sourcesContent":["import {\r\n  Autocomplete,\r\n  Button,\r\n  ButtonGroup,\r\n  Checkbox,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  FormControl,\r\n  FormControlLabel,\r\n  Grid,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Setting from \"../../Setting\";\r\nimport Div from \"@jumbo/shared/Div/Div\";\r\nimport itemServices from \"app/services/item-master-services\";\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"app/services/auth-services\";\r\nimport settingServices from \"app/services/setting-api-services\";\r\nimport { toast } from \"react-toastify\";\r\nimport { FaSave } from \"react-icons/fa\";\r\nimport { TiCancel } from \"react-icons/ti\";\r\nimport JumboScrollbar from \"@jumbo/components/JumboScrollbar\";\r\nimport hrApiServices from \"app/services/hr-api-services\";\r\nimport { todayDate } from \"app/shared/ReuseComponents/DateFormatter\";\r\nimport { handleError } from \"app/pages/auth-pages/login/AuthGuard\";\r\nimport { NumericTextField } from \"app/shared/ReuseComponents/StyledComponents\";\r\n\r\nconst CreatePartnerWorkflow = ({\r\n  setListWorkflow,\r\n  setCreateWorkflow,\r\n  listOfWorkflows,\r\n  scrollHeight\r\n}) => {\r\n  const token = localStorage.getItem(\"accesstoken\");\r\n\r\n  const header = {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n      \"Content-Type\": \"application/json\",\r\n      Accept: \"application/json\",\r\n    },\r\n  };\r\n\r\n  const [workflows, setWorkflows] = useState([]);\r\n  const [approverHead, setApproverHead] = useState(false);\r\n  const [openForms, setOpenForms] = useState(false);\r\n  const [employees, setEmployees] = useState([]);\r\n  const [approvers, setApprovers] = useState([]);\r\n  const [listModules, setListModules] = useState([]);\r\n  const [listFormNames, setListFormNames] = useState([]);\r\n  const [listDocumentNames, setListDocumentNames] = useState([]);\r\n  const [listFieldNames, setListFieldNames] = useState([]);\r\n  const [listFieldNames2, setListFieldNames2] = useState([]);\r\n\r\n  const [partnerId, setPartnerId] = useState(\"\");\r\n  const [partnerName, setPartnerName] = useState(\"\");\r\n  const [documentId, setDocumentId] = useState(\"\");\r\n  const [documentName, setDocumentName] = useState(\"\");\r\n  const [ruleName, setRuleName] = useState(\"\");\r\n  const [workflowName, setWorkflowName] = useState(\"\");\r\n  const [fieldName, setFieldName] = useState(\"\");\r\n  const [basedOnWorkflow, setBasedOnWorkflow] = useState(\"Amount\");\r\n  const [amount, setAmount] = useState(false);\r\n  const [noOfLevels, setNoOfLevels] = useState(\"\");\r\n\r\n  const [moduleName, setModuleName] = useState(\"\");\r\n  const [formName, setFormName] = useState(\"\");\r\n  const [fieldName2, setFieldName2] = useState(\"\");\r\n\r\n\r\n  const [approverNameLists, setApproverNameLists] = useState([]);\r\n\r\n\r\n  const [rows, setRows] = useState([{\r\n    id: \"\",\r\n    level: \"Level 1\",\r\n    from_value: \"\",\r\n    to_value: \"\",\r\n    approver_name: \"\",\r\n    role: \"\",\r\n  }]);\r\n\r\n  const [errors, setErrors] = useState();\r\n\r\n\r\n\r\n  const handleAddRow = () => {\r\n    let arr = [];\r\n    rows?.map((item, ind) => {\r\n      console.log(\"kkkkk\", item);\r\n      if (\r\n        item?.id == \"\" ||\r\n        item?.level == \"\" ||\r\n        item?.approver_name == \"\" ||\r\n        item?.role == \"\"\r\n      ) {\r\n        toast.error(\r\n          \"You cannot add more item without adding information in previous Item.\"\r\n        );\r\n        arr.push(ind);\r\n      } else if (\r\n        item?.id == undefined ||\r\n        item?.level == undefined ||\r\n        item?.approver_name == undefined ||\r\n        item?.role == undefined\r\n      ) {\r\n        toast.error(\r\n          \"You cannot add more item without adding information in previous Item.\"\r\n        );\r\n        arr.push(ind);\r\n      }\r\n    });\r\n\r\n    if (arr?.length == 0) {\r\n      let items = {\r\n        id: \"\",\r\n        level: \"\",\r\n        from_value: \"\",\r\n        to_value: \"\",\r\n        approver_name: \"\",\r\n        role: \"\",\r\n      };\r\n      setRows([...rows, items]);\r\n    }\r\n\r\n  };\r\n\r\n  const handleRemoveRow = (index) => {\r\n    const list = [...rows];\r\n    if (rows?.length !== 1) {\r\n      list.splice(index, 1);\r\n    }\r\n    setRows(list);\r\n  };\r\n\r\n\r\n  // get a employee lists\r\n  useEffect(() => {\r\n    const getUsers = () => {\r\n      hrApiServices.listofDropdownAllEmployees(header).then((res) => {\r\n        console.log(res);\r\n        // const list = res?.filter((opt) => opt?.Business_Unit === partnerName)\r\n        setEmployees(res);\r\n      }).catch((error) => {\r\n        console.log(error);\r\n      });\r\n    };\r\n\r\n    getUsers();\r\n  }, [partnerName])\r\n\r\n  const getListOfPartners = () => {\r\n    itemServices.listPartners(header).then((res) => {\r\n      console.log(\"Partners\", res);\r\n      setApprovers(res);\r\n    }).catch((error) => {\r\n      console.log(error);\r\n    });\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    const getPreviousWorkflows = async () => {\r\n      await axios.get(`${BASE_URL}/Erpapp/Workflowlistwithoutpagination/?Partner_Id=${partnerId}`, header).then((res) => {\r\n        setWorkflows(res?.data);\r\n      }).catch((error) => {\r\n        console.log(error);\r\n      })\r\n    }\r\n\r\n    getPreviousWorkflows()\r\n  }, [partnerId])\r\n\r\n  // assign workflow filter based on document name\r\n  const filterWorkflowDocumentName = async (newValue) => {\r\n    await axios\r\n      .get(\r\n        `${BASE_URL}/Erpapp/Assignworkflowfilter/?Document_Name=${newValue}`, header)\r\n      .then((res) => {\r\n        console.log(\"WFNAmesWFNAmes\", res?.data);\r\n        setWorkflowName(res?.data[0]?.Workflow_Name);\r\n        setFieldName(res?.data[0]?.Field_Name);\r\n        setRuleName(res?.data[0]?.Rule_Name);\r\n        setNoOfLevels(res?.data[0]?.Noof_Level);\r\n        setApproverHead(res?.data[0]?.Head_Approval);\r\n\r\n        if (res?.data[0]?.Field_Name === \"\") {\r\n          setAmount(false);\r\n          setBasedOnWorkflow(\"Level\");\r\n        } else {\r\n          setAmount(true);\r\n          setBasedOnWorkflow(\"Amount\");\r\n        }\r\n\r\n        const levels = res.data[0]?.Noof_Level;\r\n        if (levels) {\r\n          const newRows = [];\r\n          for (let i = 0; i < levels; i++) {\r\n            const data = {\r\n              id: \"\",\r\n              level: `Level ${i + 1}`,\r\n              from_value: \"\",\r\n              to_value: \"\",\r\n              approver_name: \"\",\r\n              role: \"\",\r\n            };\r\n            newRows.push(data);\r\n          }\r\n          setRows(newRows);\r\n        }\r\n      }).catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n\r\n  // useEffect(() => {\r\n  //   filterWorkflowDocumentName(documentName)\r\n  // }, [documentName]);\r\n\r\n\r\n  const getModuleNames = () => {\r\n    settingServices.filterFormNames(header).then((res) => {\r\n      console.log(res?.results);\r\n      setListModules(res?.results);\r\n    }).catch((error) => {\r\n      console.log(error);\r\n    });\r\n  };\r\n\r\n  const getFormNames = (newValue) => {\r\n    var payload = {\r\n      ModuleName: newValue?.ModuleName,\r\n    };\r\n    axios\r\n      .post(`${BASE_URL}/Erpapp/Formpermissionfilter/`, payload, header)\r\n      .then((res) => {\r\n        console.log(\"res\", res);\r\n        setListFormNames(res.data);\r\n      }).catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getDocumentNames = () => {\r\n    axios\r\n      .get(`${BASE_URL}/Erpapp/Assignworkflowdropdwonlist/`, header)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setListDocumentNames(res?.data);\r\n      }).catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getFieldNames = (newValue) => {\r\n    settingServices\r\n      .filterFieldNamesFromWorkflowOrigin(newValue, header)\r\n      .then((res) => {\r\n        console.log(\"res1\", res?.length);\r\n        setFieldName(res[0]?.Field_Name);\r\n        if (res?.length === 0) {\r\n          setAmount(false);\r\n          setBasedOnWorkflow(\"Level\");\r\n        } else {\r\n          setAmount(true);\r\n          setBasedOnWorkflow(\"Amount\");\r\n        }\r\n      }).catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   getFieldNames(documentName);\r\n  // }, []);\r\n\r\n  const getFieldNames2 = (newValue) => {\r\n    console.log(\"newValue.FormName\", newValue?.FormName);\r\n    var formname = newValue?.FormName;\r\n    settingServices.filterlistFieldNames(formname, header).then((res) => {\r\n      console.log(\"res1\", res);\r\n      setListFieldNames2(res);\r\n      setFieldName(res[0]?.Field_Name);\r\n      if (res) {\r\n        setAmount(true);\r\n      } else {\r\n        setAmount(false);\r\n      }\r\n    }).catch((error) => {\r\n      console.log(error);\r\n    });\r\n  };\r\n\r\n  const handleSubmitCreateFormFields = (e) => {\r\n    e.preventDefault();\r\n    var payload = {\r\n      Form_Name: formName,\r\n      Field_Name: fieldName2,\r\n      FieldShort_Name: \"\",\r\n      Created_By: parseInt(localStorage.getItem(\"UserId\")),\r\n      Updated_By: parseInt(localStorage.getItem(\"UserId\")),\r\n      Created_Date: todayDate\r\n    };\r\n    axios\r\n      .post(`${BASE_URL}/Erpapp/WorkfloworiginCRUD/`, payload, header)\r\n      .then((res) => {\r\n        console.log(res);\r\n        setOpenForms(false);\r\n        if (res.status === 201) {\r\n          toast.success(\"Fields Created Successfully\");\r\n        }\r\n      }).catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const handleValueChange = (event, index) => {\r\n    const { name, value } = event.target;\r\n    const list = [...rows];\r\n    if (name === \"from_value\" || name === \"to_value\") {\r\n      list[index][name] = Number(value);\r\n    } else {\r\n      list[index][name] = value;\r\n    }\r\n    setRows(list);\r\n    console.log(list);\r\n  };\r\n\r\n  // const handleChangeApproverName = (event, newValue, index) => {\r\n  //   const list = [...rows];\r\n  //   list[index].approver_name = newValue?.first_name || \"\";\r\n  //   list[index].id = newValue?.id || \"\";\r\n  //   list[index].role = newValue?.Designation || \"\";\r\n  //   setRows(list);\r\n  // };\r\n\r\n\r\n  let loginUser = localStorage.getItem(\"Username\");\r\n  let loginUserRole = localStorage.getItem(\"Designation\");\r\n\r\n  const handleChangeApproverName = (e, newValue, index) => {\r\n    // Create a copy of the rows array\r\n    const list = [...rows];\r\n\r\n    // Ensure index is valid\r\n    if (index < 0 || index >= list.length) return;\r\n\r\n    // Get the current row data\r\n    const rowlist = { ...list[index] };\r\n\r\n    // Get the previous approver name if exists\r\n    const previousApproverName = rowlist?.approver_name;\r\n\r\n    // Update the row with the new approver data\r\n    rowlist[\"approver_name\"] = `${newValue?.Employee_FirstName} ${newValue?.Employee_LasttName}` || \"\";\r\n    rowlist[\"id\"] = newValue?.id || \"\";\r\n    rowlist[\"role\"] = newValue?.Designation || \"\";\r\n    rowlist[\"level\"] = \"\";\r\n\r\n    // Update the list with the modified row\r\n    list[index] = rowlist;\r\n\r\n    // Set the updated rows state\r\n    setRows(list);\r\n\r\n    // Manage the approver names list\r\n    const updatedApproverNameLists = [...approverNameLists];\r\n\r\n    // Remove the previous approver if it exists\r\n    if (previousApproverName) {\r\n      const prevIndex = updatedApproverNameLists.indexOf(previousApproverName);\r\n      if (prevIndex !== -1) {\r\n        updatedApproverNameLists.splice(prevIndex, 1);\r\n      }\r\n    }\r\n\r\n    // // Add the new approver if it's not already in the list\r\n    // if (newValue && !updatedApproverNameLists.includes(`${newValue?.first_name} ${newValue?.last_name}`)) {\r\n    //   updatedApproverNameLists.push(`${newValue?.first_name} ${newValue?.last_name}`);\r\n    // }\r\n\r\n    // Handle existing approver names\r\n    if (previousApproverName && previousApproverName !== `${newValue?.Employee_FirstName} ${newValue?.Employee_LasttName}`) {\r\n      const prevIndex = updatedApproverNameLists.indexOf(previousApproverName);\r\n      if (prevIndex !== -1) {\r\n        updatedApproverNameLists.splice(prevIndex, 1); // Remove the previous approver\r\n      }\r\n    }\r\n\r\n    // Add the new approver if it's not already in the list\r\n    const newApproverName = `${newValue?.Employee_FirstName} ${newValue?.Employee_LasttName}`;\r\n    if (newValue && newApproverName && !updatedApproverNameLists.includes(newApproverName)) {\r\n      updatedApproverNameLists.push(newApproverName);\r\n    }\r\n\r\n    // Set the updated approver names list state\r\n    setApproverNameLists(updatedApproverNameLists);\r\n  };\r\n\r\n\r\n  // Filter users whose first_name is not in the selectedNames array\r\n  const filteroptions = employees?.filter((user) => {\r\n    if (loginUserRole !== \"Admin\" && `${user?.Employee_FirstName} ${user?.Employee_LasttName}` === loginUser) {\r\n      return false; // Include the admin user\r\n    }\r\n    return !approverNameLists?.includes(`${user?.Employee_FirstName} ${user?.Employee_LasttName}`); // Exclude users in approverNameLists\r\n  });\r\n\r\n\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n\r\n    if (partnerName === undefined || partnerName === null || partnerName === \"\") {\r\n      newErrors.partnerName = \"Business Unit is required.\";\r\n    }\r\n    if (workflowName === undefined || workflowName === null || workflowName === \"\") {\r\n      newErrors.workflowName = \"Workflow is required.\";\r\n    }\r\n    if (ruleName === undefined || ruleName === null || ruleName === \"\") {\r\n      newErrors.ruleName = \"Rule Name is required.\";\r\n    }\r\n    if (!documentName) {\r\n      newErrors.documentName = \"Document Name is required.\";\r\n    }\r\n    if (!noOfLevels) {\r\n      newErrors.noOfLevels = \"No of level is required.\";\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n\r\n  const handleSubmitWorkflow = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"workflowsworkflows\", workflows)\r\n    if (validateForm()) {\r\n      if (workflows?.filter((i) => i?.Partner_Id?.id === partnerId)?.find((opt) => opt?.Document_Name === documentName)) {\r\n        toast.warning(`Workflow Approval For ${documentName} is already created.`)\r\n      } else {\r\n        var payload = {\r\n          Workflow_Name: workflowName,\r\n          Assignworkflow_Id: documentId,\r\n          Workflow_Basedon: basedOnWorkflow,\r\n          Document_Name: documentName,\r\n          Field_Name: fieldName,\r\n          Noof_Level: noOfLevels,\r\n          Amountjosn: rows,\r\n          leveljson: rows,\r\n          Head_Approval: approverHead,\r\n          Partner_Id: parseInt(partnerId),\r\n          Company_Id: parseInt(localStorage.getItem(\"OrganizationId\")),\r\n          Created_By: parseInt(localStorage.getItem(\"UserId\")),\r\n          Updated_By: parseInt(localStorage.getItem(\"UserId\")),\r\n          Created_Date: todayDate\r\n        };\r\n        axios\r\n          .post(`${BASE_URL}/Erpapp/WorkflowCRUD/`, payload, header)\r\n          .then((res) => {\r\n            console.log(res);\r\n            if (res?.status === 201 && res?.data?.id) {\r\n              toast.success(\"Workflow is Created Successfully\");\r\n              setCreateWorkflow(false);\r\n              setListWorkflow(true);\r\n              listOfWorkflows();\r\n              setPartnerName(\"\");\r\n              setDocumentName(\"\");\r\n              setWorkflowName(\"\");\r\n              setFieldName(\"\");\r\n              setRuleName(\"\");\r\n              setNoOfLevels(\"\");\r\n              setRows([\r\n                {\r\n                  id: \"\",\r\n                  from_value: \"\",\r\n                  to_value: \"\",\r\n                  approver_name: \"\",\r\n                  role: \"\",\r\n                  level: \"\",\r\n                },\r\n              ]);\r\n\r\n              setErrors({})\r\n            }\r\n          }).catch((error) => {\r\n            console.log(error);\r\n            handleError(error)\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Setting />\r\n      <Typography variant=\"h3\" sx={{ fontWeight: 600 }}>\r\n        Workflow Approval\r\n      </Typography>\r\n      <Typography variant=\"h4\" sx={{ fontWeight: 500 }}>\r\n        Users shall use this form to set up the approvers to approve various\r\n        documents\r\n      </Typography>\r\n\r\n      <Div>\r\n        <form onSubmit={handleSubmitWorkflow}>\r\n          <Div className=\"container\" sx={{ minHeight: \"300px\" }}>\r\n            <Grid container sx={{ mt: 2, ml: { sm: 0, md: 3 } }}>\r\n              <Grid item xs={12} className=\"row\" sx={{ mt: 1 }}>\r\n                <Typography variant=\"h4\" className=\"col-md-4 col-lg-3\" sx={{ mt: 2 }}>\r\n                  Business Unit <span className=\"required\">*</span>\r\n                </Typography>\r\n                <Div className=\"col-md-4\">\r\n                  <Autocomplete\r\n                    className=\"search-select\"\r\n                    name=\"partnerName\"\r\n                    onFocus={getListOfPartners}\r\n                    getOptionLabel={(option) => {\r\n                      if (typeof option === \"string\") {\r\n                        return option;\r\n                      }\r\n                      if (option && option?.Partner_Name) {\r\n                        return option?.Partner_Name;\r\n                      }\r\n                      return \"\";\r\n                    }}\r\n                    options={approvers}\r\n                    value={approvers?.find((opt) => opt?.Partner_Name === partnerName) || null}\r\n                    onChange={(e, newValue) => {\r\n                      console.log(newValue);\r\n                      setPartnerName(newValue?.Partner_Name);\r\n                      setPartnerId(newValue?.id)\r\n                    }}\r\n                    isOptionEqualToValue={(option, value) =>\r\n                      option?.Partner_Name === value || value === \"\"\r\n                    }\r\n                    renderInput={(params) => (\r\n                      <TextField\r\n                        {...params}\r\n                        placeholder=\"Business Unit\"\r\n                        variant=\"outlined\"\r\n                        autoComplete=\"off\"\r\n                      />\r\n                    )}\r\n                  />\r\n                  <Div style={{ color: \"red\" }}>\r\n                    {!partnerName && errors?.partnerName}\r\n                  </Div>\r\n                </Div>\r\n              </Grid>\r\n\r\n              <Grid item xs={12} className=\"row\" sx={{ mt: 1 }}>\r\n                <Typography variant=\"h4\" className=\"col-md-4 col-lg-3\" sx={{ mt: 2 }}>\r\n                  Document Name <span className=\"required\">*</span>\r\n                </Typography>\r\n\r\n                <Div className=\"col-md-4\">\r\n                  <Autocomplete\r\n                    className=\"search-select\"\r\n                    name=\"documentName\"\r\n                    onFocus={getDocumentNames}\r\n                    getOptionLabel={(option) => {\r\n                      if (typeof option === \"string\") {\r\n                        return option;\r\n                      }\r\n                      if (option && option?.Document_Name) {\r\n                        return option?.Document_Name;\r\n                      }\r\n                      return \"\";\r\n                    }}\r\n                    options={listDocumentNames}\r\n                    value={listDocumentNames?.find((opt) => opt?.Document_Name === documentName) || null}\r\n                    onChange={(e, newValue) => {\r\n                      console.log(newValue);\r\n                      if (newValue) {\r\n                        setDocumentName(newValue?.Document_Name);\r\n                        setDocumentId(newValue?.id)\r\n                        filterWorkflowDocumentName(newValue?.Document_Name);\r\n                        // getFieldNames(newValue?.Document_Name);\r\n                      } else {\r\n                        setWorkflowName(\"\");\r\n                        setFieldName(\"\");\r\n                        setRuleName(\"\");\r\n                        setNoOfLevels(\"\");\r\n                        setDocumentName(\"\");\r\n                        setApproverHead(false);\r\n                        setRows([{\r\n                          id: \"\",\r\n                          level: \"Level 1\",\r\n                          from_value: \"\",\r\n                          to_value: \"\",\r\n                          approver_name: \"\",\r\n                          role: \"\",\r\n                        }])\r\n                      }\r\n                    }}\r\n                    isOptionEqualToValue={(option, value) =>\r\n                      option?.Document_Name === value || value === \"\"\r\n                    }\r\n                    renderInput={(params) => (\r\n                      <TextField\r\n                        {...params}\r\n                        placeholder=\"Document Name\"\r\n                        variant=\"outlined\"\r\n                        autoComplete=\"off\"\r\n                      />\r\n                    )}\r\n                  />\r\n                  <Div style={{ color: \"red\" }}>\r\n                    {!documentName && errors?.documentName}\r\n                  </Div>\r\n                </Div>\r\n              </Grid>\r\n\r\n              <Grid item xs={12} className=\"row\" sx={{ mt: 1 }}>\r\n                <Typography variant=\"h4\" className=\"col-md-4 col-lg-3\" sx={{ mt: 2 }}>\r\n                  Workflow Name <span className=\"required\">*</span>\r\n                </Typography>\r\n\r\n                <Div className=\"col-md-4\">\r\n                  <TextField\r\n                    className=\"col-12 input-box\"\r\n                    name=\"workflowName\"\r\n                    value={workflowName}\r\n                    placeholder=\"Workflow Name\"\r\n                    variant=\"outlined\"\r\n                    autoComplete=\"off\"\r\n                    disabled\r\n                  />\r\n                  <Div style={{ color: \"red\" }}>\r\n                    {!workflowName && errors?.workflowName}\r\n                  </Div>\r\n                </Div>\r\n              </Grid>\r\n\r\n              {amount === true && (\r\n                <Grid item xs={12} className=\"row\" sx={{ mt: 1 }}>\r\n                  <Typography variant=\"h4\" className=\"col-md-4 col-lg-3\" sx={{ mt: 2 }}>\r\n                    Field Name\r\n                  </Typography>\r\n\r\n                  <Div className=\"col-md-4\">\r\n                    <TextField\r\n                      className=\"col-12 input-box\"\r\n                      name=\"fieldName\"\r\n                      value={fieldName}\r\n                      placeholder=\"Field Name\"\r\n                      variant=\"outlined\"\r\n                      autoComplete=\"off\"\r\n                      disabled\r\n                    />\r\n                  </Div>\r\n                </Grid>\r\n              )}\r\n\r\n              <Grid item xs={12} className=\"row\" sx={{ mt: 1 }}>\r\n                <Typography variant=\"h4\" className=\"col-md-4 col-lg-3\" sx={{ mt: 2 }}>\r\n                  Rule Name <span className=\"required\">*</span>\r\n                </Typography>\r\n\r\n                <Div className=\"col-md-4\">\r\n                  <TextField\r\n                    className=\"col-12 input-box\"\r\n                    name=\"ruleName\"\r\n                    value={ruleName}\r\n                    placeholder=\"Rule Name\"\r\n                    variant=\"outlined\"\r\n                    autoComplete=\"off\"\r\n                    disabled\r\n                  />\r\n                  <Div style={{ color: \"red\" }}>\r\n                    {!ruleName && errors?.ruleName}\r\n                  </Div>\r\n                </Div>\r\n              </Grid>\r\n\r\n              <Grid item xs={12} className=\"row\" sx={{ mt: 1 }}>\r\n                <Typography variant=\"h4\" className=\"col-md-4 col-lg-3\" sx={{ mt: 2 }}>\r\n                  No of Levels <span className=\"required\">*</span>\r\n                </Typography>\r\n\r\n                <Div className=\"col-md-4\">\r\n                  <TextField\r\n                    className=\"col-12 input-box\"\r\n                    name=\"noOfLevels\"\r\n                    value={noOfLevels}\r\n                    placeholder=\"No of Levels\"\r\n                    variant=\"outlined\"\r\n                    autoComplete=\"off\"\r\n                    disabled\r\n                  />\r\n                  <Div style={{ color: \"red\" }}>\r\n                    {!noOfLevels && errors?.noOfLevels}\r\n                  </Div>\r\n                </Div>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Div sx={{ mt: 2 }}>\r\n              <FormControlLabel\r\n                className=\"input-label\"\r\n                checked={approverHead}\r\n                onChange={(e) => setApproverHead(e.target.checked)}\r\n                control={<Checkbox size=\"small\" />}\r\n                label=\"Require Department Head Approval\"\r\n                labelPlacement=\"start\"\r\n              />\r\n            </Div>\r\n\r\n            <Div sx={{ mt: 2 }}>\r\n              <JumboScrollbar\r\n                autoHeight={true}\r\n                autoHideTimeout={4000}\r\n                autoHeightMin={scrollHeight ? scrollHeight : 200}\r\n                autoHide={true}\r\n                hideTracksWhenNotNeeded\r\n                id=\"no-more-tables\"\r\n              >\r\n                <Table className=\"table table-bordered\" sx={{ width: \"95%\" }}>\r\n                  <TableHead className=\"table-head\">\r\n                    <TableRow>\r\n                      <TableCell>Level</TableCell>\r\n                      {amount && (\r\n                        <>\r\n                          <TableCell>From Range</TableCell>\r\n                          <TableCell>To Range</TableCell>\r\n                        </>\r\n                      )}\r\n                      <TableCell>Approver's Name</TableCell>\r\n                      {/* <TableCell>Action</TableCell> */}\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {rows && rows?.map((option, index) => {\r\n                      const { level, from_value, to_value, approver_name } = option;\r\n                      return (\r\n                        <TableRow key={index}>\r\n                          <TableCell sx={{ minWidth: \"210px\" }} data-title=\"Level\">\r\n                            <TextField\r\n                              className=\"input-box col-12\"\r\n                              placeholder=\"Level\"\r\n                              name=\"level\"\r\n                              // value={level}\r\n                              value={`Level ${index + 1}`}\r\n                              autoComplete=\"off\"\r\n                              disabled\r\n                            />\r\n                          </TableCell>\r\n                          {amount && (\r\n                            <>\r\n                              <TableCell sx={{ minWidth: \"210px\" }} data-title=\"From Range\">\r\n                                <NumericTextField\r\n                                  className=\"input-box col-12\"\r\n                                  placeholder=\"From Range\"\r\n                                  name=\"from_value\"\r\n                                  value={from_value}\r\n                                  onChange={(event, newValue) => {\r\n                                    handleValueChange(event, index);\r\n                                  }}\r\n                                  autoComplete=\"off\"\r\n                                />\r\n                              </TableCell>\r\n                              <TableCell sx={{ minWidth: \"210px\" }} data-title=\"To Range\">\r\n                                <NumericTextField\r\n                                  className=\"input-box col-12\"\r\n                                  placeholder=\"To Range\"\r\n                                  name=\"to_value\"\r\n                                  value={to_value}\r\n                                  onChange={(event, newValue) => {\r\n                                    handleValueChange(event, index);\r\n                                  }}\r\n                                  autoComplete=\"off\"\r\n                                />\r\n                              </TableCell>\r\n                            </>\r\n                          )}\r\n\r\n                          <TableCell sx={{ minWidth: \"210px\" }} data-title=\"Approver's Name\">\r\n                            <FormControl className=\"col-12\">\r\n                              <Autocomplete\r\n                                className=\"search-select col-12\"\r\n                                name=\"approver_name\"\r\n                                getOptionLabel={(option) => `${option?.Employee_FirstName} ${option?.Employee_LasttName}`}\r\n                                options={filteroptions}\r\n                                // options={users?.filter((opt) => !approver_name?.includes(opt?.first_name))}\r\n                                value={employees?.find(\r\n                                  (option) => `${option?.Employee_FirstName} ${option?.Employee_LasttName}` === approver_name\r\n                                ) || null}\r\n                                onChange={(event, newValue) => {\r\n                                  handleChangeApproverName(\r\n                                    event,\r\n                                    newValue,\r\n                                    index\r\n                                  );\r\n                                }}\r\n                                isOptionEqualToValue={(option, value) =>\r\n                                  option?.id === value?.id || value === \"\"\r\n                                }\r\n                                renderInput={(params) => (\r\n                                  <TextField\r\n                                    {...params}\r\n                                    placeholder=\"Approver Name\"\r\n                                    variant=\"outlined\"\r\n                                    autoComplete=\"off\"\r\n                                  />\r\n                                )}\r\n                              />\r\n                            </FormControl>\r\n                          </TableCell>\r\n                          {/* <TableCell data-title=\"Action\">\r\n                            <Button\r\n                              color=\"error\"\r\n                              onClick={() => handleRemoveRow(index)}\r\n                            >\r\n                              <MdDelete size={24} />\r\n                            </Button>\r\n                          </TableCell> */}\r\n                        </TableRow>\r\n                      );\r\n                    })}\r\n                  </TableBody>\r\n                </Table>\r\n                {/* {noOfLevels === rows?.length ? (\r\n                  <Button disabled={true}>+ Add More</Button>\r\n                ) : (\r\n                  <Button onClick={handleAddRow}>+ Add More</Button>\r\n                )} */}\r\n              </JumboScrollbar>\r\n            </Div>\r\n          </Div>\r\n\r\n\r\n          {/* code for save and cancel button */}\r\n          <Div className=\"buttons\" sx={{ mt: 5 }}>\r\n            <ButtonGroup\r\n              aria-label=\"split button\"\r\n              type=\"submit\"\r\n              sx={{\r\n                mt: { xs: 0.5, lg: 0 },\r\n                mr: { xs: 0, md: 1 }\r\n              }}\r\n            >\r\n              <Button type=\"submit\" className=\"plus-button\">Save</Button>\r\n              <Button variant=\"contained\" className=\"icon-button\">\r\n                <FaSave size={18} />\r\n              </Button>\r\n            </ButtonGroup>\r\n            <ButtonGroup aria-label=\"split button\"\r\n              sx={{\r\n                mt: { xs: 0.5, lg: 0 },\r\n                mr: { xs: 0, md: 1 }\r\n              }}\r\n              onClick={() => {\r\n                setListWorkflow(true);\r\n                setCreateWorkflow(false);\r\n                setPartnerName(\"\");\r\n                setDocumentName(\"\");\r\n                setWorkflowName(\"\");\r\n                setFieldName(\"\");\r\n                setRuleName(\"\");\r\n                setNoOfLevels(\"\");\r\n                setRows([\r\n                  {\r\n                    id: \"\",\r\n                    level: \"\",\r\n                    from_value: \"\",\r\n                    to_value: \"\",\r\n                    approver_name: \"\",\r\n                    role: \"\",\r\n                  },\r\n                ]);\r\n\r\n                setErrors({})\r\n              }}\r\n            >\r\n              <Button className=\"plus-button\">Cancel</Button>\r\n              <Button variant=\"contained\" className=\"icon-button\">\r\n                <TiCancel size={24} />\r\n              </Button>\r\n            </ButtonGroup>\r\n          </Div>\r\n        </form>\r\n      </Div>\r\n\r\n      {/* create a new field */}\r\n      <Dialog\r\n        open={openForms}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <form onSubmit={handleSubmitCreateFormFields}>\r\n          <div>\r\n            <DialogContent>\r\n              <Typography variant=\"h3\">Create Field Name </Typography>\r\n              <Grid container sx={{ mt: 2 }}>\r\n                <Grid item xs={12} sx={{ ml: 2 }}>\r\n                  <Typography className=\"col-12 input-label\">\r\n                    Model Name <span className=\"required\">*</span>\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={12} sx={{ ml: 2 }}>\r\n                  <Autocomplete\r\n                    onFocus={getModuleNames}\r\n                    className=\"search-select col-12\"\r\n                    id=\"free-solo-demo\"\r\n                    options={listModules}\r\n                    getOptionLabel={(option) => option?.ModuleName}\r\n                    value={listModules?.find(\r\n                      (option) => option?.ModuleName === moduleName\r\n                    )}\r\n                    onChange={(e, newValue) => {\r\n                      console.log(newValue);\r\n                      setModuleName(newValue?.ModuleName);\r\n                      getFormNames(newValue);\r\n                    }}\r\n                    sx={{ minWidth: \"280px\", maxWidth: \"1005px\" }}\r\n                    renderInput={(params) => (\r\n                      <TextField\r\n                        {...params}\r\n                        placeholder=\"Form Name\"\r\n                        variant=\"outlined\"\r\n                        // {...register3(\"entityName\")}\r\n                        autoComplete=\"off\"\r\n                      />\r\n                    )}\r\n                  />\r\n                  <Div style={{ color: \"red\" }}>\r\n                    {/* {errors3.entityName?.message} */}\r\n                  </Div>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sx={{ ml: 2 }}>\r\n                  <Typography className=\"col-12 input-label\">\r\n                    Document Name/Form Name <span className=\"required\">*</span>\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={12} sx={{ ml: 2 }}>\r\n                  <Autocomplete\r\n                    // onFocus={getFormNames}\r\n                    className=\"search-select col-12\"\r\n                    id=\"free-solo-demo\"\r\n                    options={listFormNames}\r\n                    getOptionLabel={(option) => option?.FormName}\r\n                    value={listFormNames.find(\r\n                      (option) => option?.FormName === formName\r\n                    )}\r\n                    onChange={(e, newValue) => {\r\n                      console.log(newValue);\r\n                      setFormName(newValue?.FormName);\r\n                      getFieldNames2(newValue);\r\n                      // settingServices.filterFieldNames(newValue.FormName).then((res)=>{\r\n                      //   console.log(res);\r\n                      //   setListFieldNames(res);\r\n                      // })\r\n                    }}\r\n                    sx={{ minWidth: \"280px\", maxWidth: \"1005px\" }}\r\n                    renderInput={(params) => (\r\n                      <TextField\r\n                        {...params}\r\n                        placeholder=\"Document Name\"\r\n                        variant=\"outlined\"\r\n                        // {...register3(\"entityName\")}\r\n                        autoComplete=\"off\"\r\n                      />\r\n                    )}\r\n                  />\r\n                  <Div style={{ color: \"red\" }}>\r\n                    {/* {errors3.entityName?.message} */}\r\n                  </Div>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sx={{ ml: 2 }}>\r\n                  <Typography className=\"col-12 input-label\">\r\n                    Field Name <span className=\"required\">*</span>\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={12} sx={{ ml: 2 }}>\r\n                  <Autocomplete\r\n                    className=\"search-select col-12\"\r\n                    // className={`search-select col-12 ${\r\n                    //   errors3.regionName ? \"is-invalid\" : \"\"\r\n                    // }`}\r\n                    id=\"free-solo-demo\"\r\n                    name=\"fieldName2\"\r\n                    getOptionLabel={(option) => option?.Field_Name}\r\n                    value={listFieldNames2.find(\r\n                      (option) => option?.Field_Name === fieldName2\r\n                    )}\r\n                    options={listFieldNames2}\r\n                    onChange={(e, newValue) => {\r\n                      console.log(newValue);\r\n                      setFieldName2(newValue?.Field_Name);\r\n                    }}\r\n                    autoComplete=\"off\"\r\n                    sx={{ minWidth: \"280px\", maxWidth: \"1005px\" }}\r\n                    renderInput={(params) => (\r\n                      <TextField\r\n                        {...params}\r\n                        placeholder=\"Field Name\"\r\n                        variant=\"outlined\"\r\n                        // {...register3(\"regionName\")}\r\n                        autoComplete=\"off\"\r\n                      />\r\n                    )}\r\n                  />\r\n                  <Div style={{ color: \"red\" }}>\r\n                    {/* {errors3.regionName?.message} */}\r\n                  </Div>\r\n                </Grid>\r\n              </Grid>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <ButtonGroup aria-label=\"split button\" sx={{ mr: 3 }}>\r\n                <Button className=\"plus-button\" type=\"submit\">\r\n                  Save\r\n                </Button>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  type=\"submit\"\r\n                  className=\"icon-button\"\r\n                >\r\n                  <FaSave size={18} />\r\n                </Button>\r\n              </ButtonGroup>\r\n              <ButtonGroup\r\n                aria-label=\"split button\"\r\n                onClick={() => setOpenForms(false)}\r\n              >\r\n                <Button className=\"plus-button\">Cancel</Button>\r\n                <Button variant=\"contained\" className=\"icon-button\">\r\n                  <TiCancel size={24} />\r\n                </Button>\r\n              </ButtonGroup>\r\n            </DialogActions>\r\n          </div>\r\n        </form>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreatePartnerWorkflow;\r\n","import {\r\n  Autocomplete,\r\n  Button,\r\n  ButtonGroup,\r\n  Checkbox,\r\n  FormControl,\r\n  FormControlLabel,\r\n  Grid,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Setting from \"../../Setting\";\r\nimport Div from \"@jumbo/shared/Div/Div\";\r\nimport itemServices from \"app/services/item-master-services\";\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"app/services/auth-services\";\r\nimport settingServices from \"app/services/setting-api-services\";\r\nimport { toast } from \"react-toastify\";\r\nimport { FaSave } from \"react-icons/fa\";\r\nimport { TiCancel } from \"react-icons/ti\";\r\nimport JumboScrollbar from \"@jumbo/components/JumboScrollbar\";\r\nimport hrApiServices from \"app/services/hr-api-services\";\r\nimport { NumericTextField } from \"app/shared/ReuseComponents/StyledComponents\";\r\n\r\nconst EditPartnerWorkflow = ({\r\n  setListWorkflow,\r\n  setEditWorkflow,\r\n  listOfWorkflows,\r\n  currentWorkflows,\r\n  scrollHeight\r\n}) => {\r\n  const token = localStorage.getItem(\"accesstoken\");\r\n\r\n  const header = {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n      \"Content-Type\": \"application/json\",\r\n      Accept: \"application/json\",\r\n    },\r\n  };\r\n  const [showCreatePage, setShowCreatePage] = useState(true);\r\n  const [showUpdatePage, setShowUpdatePage] = useState(false);\r\n\r\n  const [approverHead, setApproverHead] = useState(false);\r\n  const [employees, setEmployees] = useState([]);\r\n  const [approvers, setApprovers] = useState([]);\r\n  const [listDocumentNames, setListDocumentNames] = useState([]);\r\n  const [listFieldNames, setListFieldNames] = useState([]);\r\n\r\n  const [partnerName, setPartnerName] = useState(\"\");\r\n  const [ruleName, setRuleName] = useState(\"\");\r\n  const [workflowName, setWorkflowName] = useState(\"\");\r\n  const [fieldName, setFieldName] = useState(\"\");\r\n  const [basedOnWorkflow, setBasedOnWorkflow] = useState(\"Amount\");\r\n  const [amount, setAmount] = useState(false);\r\n  const [documentName, setDocumentName] = useState(\"\");\r\n  const [noOfLevels, setNoOfLevels] = useState(\"\");\r\n\r\n  const [approverNameLists, setApproverNameLists] = useState([]);\r\n\r\n  const [rows, setRows] = useState([\r\n    {\r\n      id: \"\",\r\n      from_value: \"\",\r\n      to_value: \"\",\r\n      approver_name: \"\",\r\n      role: \"\",\r\n      level: \"\",\r\n    },\r\n  ]);\r\n\r\n\r\n  const defaultPartnerName = currentWorkflows?.Partner_Id;\r\n  const defaultWorkflowName = currentWorkflows?.Workflow_Name;\r\n  const defaultDocumentName = currentWorkflows?.Document_Name;\r\n  const defaultFieldName = currentWorkflows?.Field_Name;\r\n  const defaultRuleName = currentWorkflows?.Assignworkflow_Id?.Rule_Name;\r\n  const defaultNoofLevel = currentWorkflows?.Noof_Level;\r\n  const defaultHeadApprover = currentWorkflows?.Head_Approval;\r\n  const defaultRows = currentWorkflows?.Amountjosn;\r\n\r\n  useEffect(() => {\r\n    setPartnerName(defaultPartnerName);\r\n    setWorkflowName(defaultWorkflowName);\r\n    setDocumentName(defaultDocumentName);\r\n    setFieldName(defaultFieldName);\r\n    setRuleName(defaultRuleName);\r\n    setNoOfLevels(defaultNoofLevel);\r\n    setApproverHead(defaultHeadApprover);\r\n    setRows(defaultRows);\r\n  }, [\r\n    currentWorkflows,\r\n    defaultPartnerName,\r\n    defaultWorkflowName,\r\n    defaultDocumentName,\r\n    defaultFieldName,\r\n    defaultRuleName,\r\n    defaultNoofLevel,\r\n    defaultHeadApprover,\r\n    defaultRows,\r\n  ]);\r\n\r\n  useEffect((res) => {\r\n    if (res) {\r\n      setShowCreatePage(true);\r\n      setShowUpdatePage(false);\r\n    } else {\r\n      setShowCreatePage(false);\r\n      setShowUpdatePage(true);\r\n    }\r\n  }, []);\r\n\r\n  const numbers = Array.from({ length: 100 }, (_, i) => i + 1);\r\n\r\n  const handleAddRow = () => {\r\n    let arr = [];\r\n    rows?.map((item, ind) => {\r\n      console.log(\"kkkkk\", item);\r\n      if (\r\n        item?.id == \"\" ||\r\n        item?.level == \"\" ||\r\n        item?.approver_name == \"\" ||\r\n        item?.role == \"\"\r\n      ) {\r\n        toast.error(\r\n          \"You cannot add more item without adding information in previous Item.\"\r\n        );\r\n        arr.push(ind);\r\n      } else if (\r\n        item?.id == undefined ||\r\n        item?.level == undefined ||\r\n        item?.approver_name == undefined ||\r\n        item?.role == undefined\r\n      ) {\r\n        toast.error(\r\n          \"You cannot add more item without adding information in previous Item.\"\r\n        );\r\n        arr.push(ind);\r\n      }\r\n    });\r\n\r\n    if (arr.length == 0) {\r\n      let items = {\r\n        id: \"\",\r\n        level: \"\",\r\n        from_value: \"\",\r\n        to_value: \"\",\r\n        approver_name: \"\",\r\n        role: \"\",\r\n      };\r\n      setRows([...rows, items]);\r\n    }\r\n  };\r\n\r\n  const handleRemoveRow = (index) => {\r\n    const list = [...rows];\r\n    if (rows?.length !== 1) {\r\n      list.splice(index, 1);\r\n    }\r\n    setRows(list);\r\n  };\r\n\r\n\r\n  // get a employee lists\r\n  useEffect(() => {\r\n    const getUsers = () => {\r\n      hrApiServices.listofDropdownAllEmployees(header).then((res) => {\r\n        console.log(res);\r\n        // const list = res?.filter((opt) => opt?.Business_Unit === partnerName)\r\n        setEmployees(res);\r\n      }).catch((error) => {\r\n        console.log(error);\r\n      });\r\n    };\r\n\r\n    getUsers();\r\n  }, [])\r\n\r\n  const getListOfPartners = () => {\r\n    itemServices.listPartners(header).then((res) => {\r\n      console.log(\"Partners\", res);\r\n      setApprovers(res);\r\n    }).catch((error) => {\r\n      console.log(error)\r\n    });\r\n  };\r\n\r\n  // assign workflow filter based on document name\r\n  const filterWorkflowDocumentName = (newValue) => {\r\n    axios\r\n      .get(\r\n        `${BASE_URL}/Erpapp/Assignworkflowfilter/?Document_Name=${newValue}`, header)\r\n      .then((res) => {\r\n        console.log(\"WFNAmes\", res.data);\r\n        setWorkflowName(res.data[0]?.Workflow_Name);\r\n        setFieldName(res?.data[0]?.Field_Name);\r\n        setRuleName(res?.data[0]?.Rule_Name);\r\n        setNoOfLevels(res?.data[0]?.Noof_Level);\r\n        setApproverHead(res?.data[0]?.Head_Approval);\r\n\r\n        if (res?.data[0]?.Field_Name === \"\") {\r\n          setAmount(false);\r\n          setBasedOnWorkflow(\"Level\");\r\n        } else {\r\n          setAmount(true);\r\n          setBasedOnWorkflow(\"Amount\");\r\n        }\r\n\r\n        const levels = res.data[0]?.Noof_Level;\r\n        if (levels) {\r\n          const newRows = [];\r\n          for (let i = 0; i < levels; i++) {\r\n            const data = {\r\n              id: \"\",\r\n              level: `Level ${i + 1}`,\r\n              from_value: \"\",\r\n              to_value: \"\",\r\n              approver_name: \"\",\r\n              role: \"\",\r\n            };\r\n            newRows.push(data);\r\n          }\r\n          setRows(newRows);\r\n        }\r\n\r\n      }).catch((error) => {\r\n        console.log(error)\r\n      });\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    // filterWorkflowDocumentName(defaultDocumentName)\r\n    axios\r\n      .get(\r\n        `${BASE_URL}/Erpapp/Assignworkflowfilter/?Document_Name=${defaultDocumentName}`, header)\r\n      .then((res) => {\r\n        console.log(\"WFNAmes\", res.data);\r\n        if (res?.data[0]?.Field_Name === \"\") {\r\n          setAmount(false);\r\n          setBasedOnWorkflow(\"Level\");\r\n        } else {\r\n          setAmount(true);\r\n          setBasedOnWorkflow(\"Amount\");\r\n        }\r\n      }).catch((error) => {\r\n        console.log(error)\r\n      });\r\n  }, [currentWorkflows?.id])\r\n\r\n\r\n  const getFieldNames = (newValue) => {\r\n    settingServices\r\n      .filterFieldNamesFromWorkflowOrigin(newValue, header)\r\n      .then((res) => {\r\n        console.log(\"res1\", res?.length);\r\n        setListFieldNames(res);\r\n        setFieldName(res[0]?.Field_Name);\r\n        if (res?.length === 0) {\r\n          setAmount(false);\r\n          setBasedOnWorkflow(\"Level\");\r\n        } else {\r\n          setAmount(true);\r\n          setBasedOnWorkflow(\"Amount\");\r\n        }\r\n      }).catch((error) => {\r\n        console.log(error)\r\n      });\r\n  };\r\n\r\n\r\n  // useEffect(() => {\r\n  //   getFieldNames(defaultDocumentName);\r\n  // }, [currentWorkflows, defaultDocumentName]);\r\n\r\n  const getDocumentNames = () => {\r\n    // settingServices.listFormNames().then((res) => {\r\n    //   console.log(\"Res\", res);\r\n    //   setListDocumentNames(res);\r\n    // });\r\n    axios\r\n      .get(`${BASE_URL}/Erpapp/Assignworkflowdropdwonlist/`, header)\r\n      .then((res) => {\r\n        console.log(res?.data);\r\n        setListDocumentNames(res?.data);\r\n      }).catch((error) => {\r\n        console.log(error)\r\n      });\r\n  };\r\n\r\n  const handleValueChange = (event, index) => {\r\n    const { name, value } = event.target;\r\n    const list = [...rows];\r\n    if (name === \"from_value\" || name === \"to_value\") {\r\n      list[index][name] = Number(value);\r\n    } else {\r\n      list[index][name] = value;\r\n    }\r\n    setRows(list);\r\n    console.log(list);\r\n  };\r\n\r\n  // const handleChangeApproverName = (e, newValue, index) => {\r\n  //   const list = [...rows];\r\n  //   const rowlist = list[index];\r\n  //   rowlist[\"approver_name\"] = newValue?.first_name || \"\";\r\n  //   rowlist[\"id\"] = newValue?.id || \"\";\r\n  //   rowlist[\"role\"] = newValue?.Designation || \"\";\r\n  //   rowlist[\"level\"] = \"\"\r\n  //   setRows(list);\r\n  // };\r\n\r\n\r\n  let loginUser = localStorage.getItem(\"Username\");\r\n  let loginUserRole = localStorage.getItem(\"Designation\");\r\n\r\n  const handleChangeApproverName = (e, newValue, index) => {\r\n    // Create a copy of the rows array\r\n    const list = [...rows];\r\n\r\n    // Ensure index is valid\r\n    if (index < 0 || index >= list.length) return;\r\n\r\n    // Get the current row data\r\n    const rowlist = { ...list[index] };\r\n\r\n    // Get the previous approver name if exists\r\n    const previousApproverName = rowlist?.approver_name;\r\n\r\n    // Update the row with the new approver data\r\n    rowlist[\"approver_name\"] = newValue ? `${newValue?.Employee_FirstName} ${newValue?.Employee_LasttName}` : \"\";\r\n    rowlist[\"id\"] = newValue?.id || \"\";\r\n    rowlist[\"role\"] = newValue?.Designation || \"\";\r\n    rowlist[\"level\"] = `Level ${index + 1}`;\r\n\r\n    // Update the list with the modified row\r\n    list[index] = rowlist;\r\n\r\n    // Set the updated rows state\r\n    setRows(list);\r\n\r\n    // Manage the approver names list\r\n    // let updatedApproverNameLists = rows.map(row => row.approver_name).filter(name => name);\r\n    let updatedApproverNameLists = list?.map(row => row?.approver_name).filter(name => name && name !== \"\");\r\n\r\n    // Add the new approver if it's not already in the list\r\n    const newApproverName = newValue ? `${newValue?.Employee_FirstName} ${newValue?.Employee_LasttName}` : \"\";\r\n    if (newApproverName && !updatedApproverNameLists.includes(newApproverName)) {\r\n      updatedApproverNameLists.push(newApproverName);\r\n    }\r\n\r\n    // Remove the previous approver if it exists\r\n    if (previousApproverName && previousApproverName !== newApproverName) {\r\n      updatedApproverNameLists = updatedApproverNameLists?.filter(name => name !== previousApproverName);\r\n    }\r\n\r\n    // Set the updated approver names list state\r\n    setApproverNameLists(updatedApproverNameLists);\r\n  };\r\n\r\n\r\n\r\n  // Filter users whose first_name is not in the selectedNames array\r\n  const filteroptions = employees?.filter((user) => {\r\n    if (loginUserRole !== \"Admin\" && `${user?.Employee_FirstName} ${user?.Employee_LasttName}` === loginUser) {\r\n      return false; // Include the admin user\r\n    }\r\n    return !approverNameLists?.includes(`${user?.Employee_FirstName} ${user?.Employee_LasttName}`); // Exclude users in approverNameLists\r\n  });\r\n\r\n\r\n  const getFilteredOptions = (currentIndex) => {\r\n    // const selectedApprovers = rows?.map(row => row?.approver_name).filter(name => name && name !== \"\");\r\n    const selectedApprovers = rows?.map((row, index) => index !== currentIndex ? row.approver_name : null)?.filter(name => name && name !== \"\");\r\n    return employees?.filter(user => {\r\n      const userName = `${user?.Employee_FirstName} ${user?.Employee_LasttName}`;\r\n      if (loginUserRole !== \"Admin\" && userName === loginUser) {\r\n        return false; // Include the admin user\r\n      }\r\n      // Allow the current row's approver and exclude others\r\n      return !selectedApprovers.includes(userName) || rows[currentIndex].approver_name === userName;\r\n    });\r\n  };\r\n\r\n\r\n  const handleSubmitWorkflow = (e) => {\r\n    e.preventDefault();\r\n    var payload = {\r\n      id: currentWorkflows?.id,\r\n      Workflow_Id: currentWorkflows?.Workflow_Id,\r\n      Workflow_Name: workflowName?.Workflow_Name,\r\n      WorkflowName_Id: workflowName?.id,\r\n      Workflow_Basedon: basedOnWorkflow,\r\n      Document_Name: documentName?.Document_Name,\r\n      Field_Name: fieldName,\r\n      Noof_Level: noOfLevels,\r\n      Amountjosn: rows,\r\n      leveljson: rows,\r\n      Head_Approval: approverHead,\r\n      Partner_Id: partnerName?.id,\r\n      Company_Id: parseInt(localStorage.getItem(\"OrganizationId\")),\r\n      Created_By: parseInt(localStorage.getItem(\"UserId\")),\r\n      Updated_By: parseInt(localStorage.getItem(\"UserId\")),\r\n    };\r\n    axios\r\n      .put(`${BASE_URL}/Erpapp/WorkflowCRUD/`, payload, header)\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res?.data?.id) {\r\n          toast.success(\"Workflow is Updated Successfully\");\r\n          setEditWorkflow(false);\r\n          setListWorkflow(true);\r\n          listOfWorkflows();\r\n        }\r\n      }).catch((error) => {\r\n        console.log(error)\r\n      });\r\n  };\r\n\r\n\r\n  const handleClickCancel = () => {\r\n    setListWorkflow(true);\r\n    setEditWorkflow(false);\r\n    setPartnerName(defaultPartnerName);\r\n    setWorkflowName(defaultWorkflowName);\r\n    setDocumentName(defaultDocumentName);\r\n    setFieldName(defaultFieldName);\r\n    setRuleName(defaultRuleName);\r\n    setNoOfLevels(defaultNoofLevel);\r\n    setApproverHead(defaultHeadApprover);\r\n    setRows(defaultRows);\r\n  }\r\n\r\n  console.log(\"approverNameLists\", approverNameLists)\r\n\r\n  return (\r\n    <>\r\n      <Setting />\r\n      <Typography variant=\"h3\" sx={{ fontWeight: 600 }}>\r\n        Workflow Approval\r\n      </Typography>\r\n      <Typography variant=\"h4\" sx={{ fontWeight: 500 }}>\r\n        Users shall use this form to set up the approvers to approve various\r\n        documents\r\n      </Typography>\r\n\r\n      <Div>\r\n        <form onSubmit={handleSubmitWorkflow}>\r\n          <Div className=\"container\" sx={{ minHeight: \"300px\" }}>\r\n            <Grid container sx={{ mt: 2, ml: { sm: 0, md: 3 } }}>\r\n              <Grid item xs={12} className=\"row\" sx={{ mt: 1 }}>\r\n\r\n                <Typography variant=\"h4\" className=\"col-md-4 col-lg-3\" sx={{ mt: 2 }}>\r\n                  Business Unit <span className=\"required\">*</span>\r\n                </Typography>\r\n                <Div className=\"col-md-4\">\r\n                  <Autocomplete\r\n                    className=\"search-select\"\r\n                    name=\"partnerName\"\r\n                    onFocus={getListOfPartners}\r\n                    getOptionLabel={(option) => {\r\n                      if (typeof option === \"string\") {\r\n                        return option;\r\n                      }\r\n                      if (option && option?.Partner_Name) {\r\n                        return option?.Partner_Name;\r\n                      }\r\n                      return \"\";\r\n                    }}\r\n                    options={approvers}\r\n                    value={partnerName}\r\n                    onChange={(e, newValue) => {\r\n                      console.log(newValue);\r\n                      setPartnerName(newValue);\r\n                    }}\r\n                    isOptionEqualToValue={(option, value) =>\r\n                      option?.Partner_Name === value || value === \"\"\r\n                    }\r\n                    renderInput={(params) => (\r\n                      <TextField\r\n                        {...params}\r\n                        placeholder=\"Business Unit\"\r\n                        variant=\"outlined\"\r\n                        autoComplete=\"off\"\r\n                      />\r\n                    )}\r\n                  />\r\n                </Div>\r\n\r\n\r\n              </Grid>\r\n\r\n              <Grid item xs={12} className=\"row\" sx={{ mt: 1 }}>\r\n\r\n                <Typography variant=\"h4\" className=\"col-md-4 col-lg-3\" sx={{ mt: 2 }}>\r\n                  Document Name <span className=\"required\">*</span>\r\n                </Typography>\r\n\r\n                <Div className=\"col-md-4\">\r\n                  <Autocomplete\r\n                    className=\"col-12 search-select\"\r\n                    name=\"documentName\"\r\n                    onFocus={getDocumentNames}\r\n                    getOptionLabel={(option) => {\r\n                      if (typeof option === \"string\") {\r\n                        return option;\r\n                      }\r\n                      if (option && option?.Document_Name) {\r\n                        return option?.Document_Name;\r\n                      }\r\n                      return \"\";\r\n                    }}\r\n                    options={listDocumentNames}\r\n                    value={documentName}\r\n                    onChange={(e, newValue) => {\r\n                      console.log(newValue);\r\n                      setDocumentName(newValue);\r\n                      filterWorkflowDocumentName(newValue?.Document_Name);\r\n                      // getFieldNames(newValue?.Document_Name);\r\n                    }}\r\n                    isOptionEqualToValue={(option, value) =>\r\n                      option?.Document_Name === value || value === \"\"\r\n                    }\r\n                    renderInput={(params) => (\r\n                      <TextField\r\n                        {...params}\r\n                        placeholder=\"Document Name\"\r\n                        variant=\"outlined\"\r\n                        autoComplete=\"off\"\r\n                      />\r\n                    )}\r\n                  />\r\n                </Div>\r\n                {/* <Div className=\"col-md-1\">\r\n                      <Button\r\n                        className=\"save-button\"\r\n                        onClick={handleOpenWorkflowSetup}\r\n                      >\r\n                        Add\r\n                      </Button>\r\n                    </Div> */}\r\n              </Grid>\r\n\r\n              <Grid item xs={12} className=\"row\" sx={{ mt: 1 }}>\r\n\r\n                <Typography variant=\"h4\" className=\"col-md-4 col-lg-3\" sx={{ mt: 2 }}>\r\n                  Workflow Name <span className=\"required\">*</span>\r\n                </Typography>\r\n\r\n                <Div className=\"col-md-4\">\r\n                  <TextField\r\n                    className=\"col-12 input-box\"\r\n                    name=\"workflowName\"\r\n                    value={workflowName}\r\n                    // onChange={(e) => setWorkflowName(e.target.value)}\r\n                    placeholder=\"Workflow Name\"\r\n                    variant=\"outlined\"\r\n                    autoComplete=\"off\"\r\n                    disabled\r\n                  />\r\n                </Div>\r\n                {/* <Div className=\"col-md-6\">\r\n                      <Autocomplete\r\n                        className=\"search-select\"\r\n                        name=\"workflowName\"\r\n                        onFocus={getListofWorkflowNames}\r\n                        getOptionLabel={(option) => {\r\n                          if (typeof option === \"string\") {\r\n                            return option;\r\n                          }\r\n                          if (option && option?.Workflow_Name) {\r\n                            return option?.Workflow_Name;\r\n                          }\r\n                          return \"\";\r\n                        }}\r\n                        options={workflowNamesList}\r\n                        value={workflowNamesList.find(\r\n                          (option) => option?.Workflow_Name === workflowName\r\n                        )}\r\n                        onChange={(e, newValue) => {\r\n                          console.log(newValue);\r\n                          setWorkflowName(newValue);\r\n                        }}\r\n                        isOptionEqualToValue={(option, value) =>\r\n                          option?.Workflow_Name === value || value === \"\"\r\n                        }\r\n                        renderInput={(params) => (\r\n                          <TextField\r\n                            {...params}\r\n                            placeholder=\"Workflow Name\"\r\n                            variant=\"outlined\"\r\n                            autoComplete=\"off\"\r\n                          />\r\n                        )}\r\n                      />\r\n                    </Div> */}\r\n\r\n              </Grid>\r\n\r\n              {/* <Grid item xs={12} className=\"row\" sx={{ mt: 1 }}>\r\n    \r\n                    <Typography className=\"col-md-4 col-lg-3 input-label\" sx={{ mt: 2 }}>\r\n                      Workflow Based On <span className=\"required\">*</span>\r\n                    </Typography>\r\n                    <Div className=\"col-md-6\">\r\n                      <JumboAutocomplete\r\n                        className=\"search-select\"\r\n                        name=\"basedOnWorkflow\"\r\n                        // onFocus={getListBasedOnWorkflows}\r\n                        getOptionLabel={(option) => {\r\n                          if (typeof option === \"string\") {\r\n                            return option;\r\n                          }\r\n                          if (option && option.values) {\r\n                            return option.values;\r\n                          }\r\n                          return \"\";\r\n                        }}\r\n                        options={workflows}\r\n                        value={basedOnWorkflow}\r\n                        onChange={(e, newValue) => {\r\n                          console.log(newValue);\r\n                          setBasedOnWorkflow(newValue.values);\r\n                          switch (newValue.values) {\r\n                            case \"Amount\":\r\n                              setAmount(true);\r\n                              setLevels(false);\r\n                              break;\r\n                            case \"Level\":\r\n                              setLevels(true);\r\n                              setAmount(false);\r\n                              break;\r\n                            default:\r\n                              setAmount(true);\r\n                              setLevels(false);\r\n                              break;\r\n                          }\r\n                        }}\r\n                        isOptionEqualToValue={(option, value) =>\r\n                          option.values === value || value === \"\"\r\n                        }\r\n                        renderInput={(params) => (\r\n                          <TextField\r\n                            {...params}\r\n                            placeholder=\"Workflow Based On\"\r\n                            variant=\"outlined\"\r\n                            autoComplete=\"off\"\r\n                          />\r\n                        )}\r\n                      />\r\n                    </Div>\r\n    \r\n                  </Grid> */}\r\n\r\n              {amount === true && (\r\n                <Grid item xs={12} className=\"row\" sx={{ mt: 1 }}>\r\n\r\n                  <Typography variant=\"h4\" className=\"col-md-4 col-lg-3\" sx={{ mt: 2 }}>\r\n                    Field Name\r\n                  </Typography>\r\n\r\n                  <Div className=\"col-md-4\">\r\n                    <TextField\r\n                      className=\"col-12 input-box\"\r\n                      name=\"fieldName\"\r\n                      value={fieldName}\r\n                      placeholder=\"Field Name\"\r\n                      variant=\"outlined\"\r\n                      autoComplete=\"off\"\r\n                      disabled\r\n                    />\r\n                  </Div>\r\n                  {/* <FormControl className=\"col-md-6\">\r\n                        <Autocomplete\r\n                          className=\"search-select\"\r\n                          name=\"fieldName\"\r\n                          options={listFieldNames}\r\n                          getOptionLabel={(option) => {\r\n                            if (typeof option === \"string\") {\r\n                              return option;\r\n                            }\r\n                            if (option && option?.Field_Name) {\r\n                              return option?.Field_Name;\r\n                            }\r\n                            return \"\";\r\n                          }}\r\n                          value={listFieldNames.find(\r\n                            (option) => option?.Field_Name === fieldName\r\n                          )}\r\n                          onChange={(e, newValue) => {\r\n                            console.log(newValue);\r\n                            setFieldName(newValue?.Field_Name);\r\n                          }}\r\n                          isOptionEqualToValue={(option, value) =>\r\n                            option?.Field_Name === value || value === \"\"\r\n                          }\r\n                          renderInput={(params) => (\r\n                            <TextField\r\n                              {...params}\r\n                              placeholder=\"Field Name\"\r\n                              variant=\"outlined\"\r\n                              autoComplete=\"off\"\r\n                            />\r\n                          )}\r\n                        />\r\n                      </FormControl> */}\r\n\r\n\r\n                </Grid>\r\n              )}\r\n\r\n              <Grid item xs={12} className=\"row\" sx={{ mt: 1 }}>\r\n                <Typography variant=\"h4\" className=\"col-md-4 col-lg-3\" sx={{ mt: 2 }}>\r\n                  Rule Name <span className=\"required\">*</span>\r\n                </Typography>\r\n\r\n                <Div className=\"col-md-4\">\r\n                  <TextField\r\n                    className=\"col-12 input-box\"\r\n                    name=\"ruleName\"\r\n                    value={ruleName}\r\n                    placeholder=\"Rule Name\"\r\n                    variant=\"outlined\"\r\n                    autoComplete=\"off\"\r\n                    disabled\r\n                  />\r\n\r\n                </Div>\r\n              </Grid>\r\n\r\n              <Grid item xs={12} className=\"row\" sx={{ mt: 1 }}>\r\n\r\n                <Typography variant=\"h4\" className=\"col-md-4 col-lg-3\" sx={{ mt: 2 }}>\r\n                  No of Levels <span className=\"required\">*</span>\r\n                </Typography>\r\n\r\n                <Div className=\"col-md-4\">\r\n                  <TextField\r\n                    className=\"col-12 input-box\"\r\n                    name=\"noOfLevels\"\r\n                    value={noOfLevels}\r\n                    // onChange={(e) => setWorkflowName(e.target.value)}\r\n                    placeholder=\"No of Levels\"\r\n                    variant=\"outlined\"\r\n                    autoComplete=\"off\"\r\n                    disabled\r\n                  />\r\n                </Div>\r\n                {/* <FormControl className=\"col-md-6\">\r\n                      <Autocomplete\r\n                        className=\"search-select\"\r\n                        name=\"noOfLevels\"\r\n                        getOptionLabel={(option) => {\r\n                          if (typeof option === \"number\") {\r\n                            return option.toString();\r\n                          }\r\n                          if (option && option) {\r\n                            return option;\r\n                          }\r\n                          return 0;\r\n                        }}\r\n                        options={numbers}\r\n                        value={numbers.find((option) => option === noOfLevels)}\r\n                        onChange={(e, newValue) => {\r\n                          console.log(newValue);\r\n                          setNoOfLevels(newValue);\r\n                        }}\r\n                        isOptionEqualToValue={(option, value) =>\r\n                          option === value || value === 0\r\n                        }\r\n                        renderInput={(params) => (\r\n                          <TextField\r\n                            {...params}\r\n                            placeholder=\"No of Levels\"\r\n                            variant=\"outlined\"\r\n                            autoComplete=\"off\"\r\n                          />\r\n                        )}\r\n                      />\r\n                    </FormControl> */}\r\n\r\n\r\n              </Grid>\r\n              {/* )} */}\r\n            </Grid>\r\n\r\n            <Div sx={{ mt: 2, p: { xs: 0, md: 2 } }}>\r\n              <FormControlLabel\r\n                className=\"input-label\"\r\n                checked={approverHead}\r\n                onChange={(e) => setApproverHead(e.target.checked)}\r\n                control={<Checkbox size=\"small\" />}\r\n                label=\"Require Department Head Approval\"\r\n                labelPlacement=\"start\"\r\n              />\r\n            </Div>\r\n\r\n            <Div sx={{ mt: 2 }}>\r\n              <JumboScrollbar\r\n                autoHeight={true}\r\n                autoHideTimeout={4000}\r\n                autoHeightMin={scrollHeight ? scrollHeight : 200}\r\n                autoHide={true}\r\n                hideTracksWhenNotNeeded\r\n                id=\"no-more-tables\"\r\n              >\r\n                <Table className=\"table table-bordered\">\r\n                  <TableHead className=\"table-head\">\r\n                    <TableRow>\r\n                      <TableCell>Level</TableCell>\r\n                      {amount && (\r\n                        <>\r\n                          <TableCell>From Range</TableCell>\r\n                          <TableCell>To Range</TableCell>\r\n                        </>\r\n                      )}\r\n                      <TableCell>Approver's Name</TableCell>\r\n                      {/* <TableCell>Action</TableCell> */}\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {rows?.map((option, index) => {\r\n                      let { level, from_value, to_value, approver_name } = option;\r\n                      return (\r\n                        <TableRow key={index}>\r\n                          <TableCell sx={{ minWidth: \"210px\" }} data-title=\"Level\">\r\n                            <TextField\r\n                              className=\"input-box col-12\"\r\n                              placeholder=\"Level\"\r\n                              name=\"level\"\r\n                              value={`Level ${index + 1}`}\r\n                              // onChange={(event, newValue) => {\r\n                              //   handleValueChange(event, index);\r\n                              // }}\r\n                              autoComplete=\"off\"\r\n                              disabled\r\n                            />\r\n                          </TableCell>\r\n                          {amount && (\r\n                            <>\r\n                              <TableCell sx={{ minWidth: \"210px\" }} data-title=\"From Range\">\r\n                                <NumericTextField\r\n                                  className=\"input-box col-12\"\r\n                                  placeholder=\"From Range\"\r\n                                  name=\"from_value\"\r\n                                  value={from_value}\r\n                                  onChange={(event, newValue) => {\r\n                                    handleValueChange(event, index);\r\n                                  }}\r\n                                  autoComplete=\"off\"\r\n                                />\r\n                              </TableCell>\r\n                              <TableCell sx={{ minWidth: \"210px\" }} data-title=\"To Range\">\r\n                                <NumericTextField\r\n                                  className=\"input-box col-12\"\r\n                                  placeholder=\"To Range\"\r\n                                  name=\"to_value\"\r\n                                  value={to_value}\r\n                                  onChange={(event, newValue) => {\r\n                                    handleValueChange(event, index);\r\n                                  }}\r\n                                  autoComplete=\"off\"\r\n                                />\r\n                              </TableCell>\r\n                            </>\r\n                          )}\r\n\r\n                          <TableCell sx={{ minWidth: \"210px\" }} data-title=\"Approver Name\">\r\n                            <FormControl className=\"col-12\">\r\n                              <Autocomplete\r\n                                className=\"search-select col-12\"\r\n                                name=\"approver_name\"\r\n                                // onFocus={getUsers}\r\n                                getOptionLabel={(option) => {\r\n                                  if (typeof option === \"string\") {\r\n                                    return option;\r\n                                  }\r\n                                  if (option && `${option?.Employee_FirstName} ${option?.Employee_LasttName}`) {\r\n                                    return `${option?.Employee_FirstName} ${option?.Employee_LasttName}`;\r\n                                  }\r\n                                  return \"\";\r\n                                }}\r\n                                options={getFilteredOptions(index)}\r\n                                // options={filteroptions}\r\n                                // options={users?.filter((opt) => !approver_name?.includes(opt?.first_name))}\r\n                                value={approver_name || \"\"}\r\n                                onChange={(e, newValue) =>\r\n                                  handleChangeApproverName(e, newValue, index)\r\n                                }\r\n                                isOptionEqualToValue={(option, value) =>\r\n                                  `${option?.Employee_FirstName} ${option?.Employee_LasttName}` === value || value === \"\"\r\n                                }\r\n                                renderInput={(params) => (\r\n                                  <TextField\r\n                                    {...params}\r\n                                    placeholder=\"Approver Name\"\r\n                                    variant=\"outlined\"\r\n                                    autoComplete=\"off\"\r\n                                  />\r\n                                )}\r\n                              />\r\n                            </FormControl>\r\n                          </TableCell>\r\n                          {/* <TableCell data-title=\"Action\">\r\n                            <Button\r\n                              color=\"error\"\r\n                              onClick={() => handleRemoveRow(index)}\r\n                            >\r\n                              <MdDelete size={24} />\r\n                            </Button>\r\n                          </TableCell> */}\r\n                        </TableRow>\r\n                      );\r\n                    })}\r\n                  </TableBody>\r\n                </Table>\r\n                {/* <Button onClick={handleAddRow}>+ Add More</Button> */}\r\n              </JumboScrollbar>\r\n            </Div>\r\n          </Div>\r\n\r\n          <Div className=\"buttons\" sx={{ mt: 5 }}>\r\n            <ButtonGroup\r\n              aria-label=\"split button\"\r\n              type=\"submit\"\r\n              sx={{\r\n                mt: { xs: 0.5, lg: 0 },\r\n                mr: { xs: 0, md: 1 }\r\n              }}\r\n            >\r\n              <Button className=\"plus-button\" type=\"submit\">\r\n                Update\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                type=\"submit\"\r\n                className=\"icon-button\"\r\n              >\r\n                <FaSave size={18} />\r\n              </Button>\r\n            </ButtonGroup>\r\n            <ButtonGroup\r\n              aria-label=\"split button\"\r\n              onClick={handleClickCancel}\r\n              sx={{\r\n                mt: { xs: 0.5, lg: 0 },\r\n                mr: { xs: 0, md: 1 }\r\n              }}\r\n            >\r\n              <Button className=\"plus-button\">Cancel</Button>\r\n              <Button variant=\"contained\" className=\"icon-button\">\r\n                <TiCancel size={24} />\r\n              </Button>\r\n            </ButtonGroup>\r\n          </Div>\r\n        </form>\r\n      </Div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditPartnerWorkflow;\r\n","import JumboContentLayoutMain from \"@jumbo/components/JumboContentLayout/JumboContentLayoutMain\";\r\nimport JumboScrollbar from \"@jumbo/components/JumboScrollbar\";\r\nimport Div from \"@jumbo/shared/Div\";\r\nimport {\r\n  Grid,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport settingServices from \"app/services/setting-api-services\";\r\nimport CreatePartnerWorkflow from \"./CreatePartnerWorkflow\";\r\nimport EditPartnerWorkflow from \"./EditPartnerWorkflow\";\r\nimport ScrollToTop from \"app/pages/ScrollToTop\";\r\nimport useResponsive from \"app/pages/useResponsive\";\r\nimport { DateFormatter } from \"app/shared/ReuseComponents/DateFormatter\";\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"app/services/auth-services\";\r\nimport CommonPagination from \"app/shared/ReuseComponents/CommonPagination\";\r\nimport { ErpDeleteDialogBox } from \"app/shared/ReuseComponents/ErpDialogBoxes\";\r\nimport { CustomSkeleton } from \"app/shared/ReuseComponents/StyledComponents\";\r\nimport { ErpActionButton, ErpCreateButton, ErpSearchBox } from \"app/shared/ReuseComponents/ButtonComponent\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchUserRolePermissions, selectedUserRolePermissions } from \"app/redux/actions/fetchUserRolePermissions\";\r\n\r\n\r\nconst ListPartnerWorkflow = ({ scrollHeight }) => {\r\n  const token = localStorage.getItem(\"accesstoken\");\r\n\r\n  const header = {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n      \"Content-Type\": \"application/json\",\r\n      Accept: \"application/json\",\r\n    },\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n  const { userRolePermissions, formPermissions, modulePermissions } = useSelector(selectedUserRolePermissions);\r\n\r\n\r\n  const [listWorkflow, setListWorkflow] = useState(true);\r\n  const [createWorkflow, setCreateWorkflow] = useState(false);\r\n  const [editWorkflow, setEditWorkflow] = useState(false);\r\n  const [openDelete, setOpenDelete] = useState(false);\r\n\r\n  const [currentDeleteId, setCurrentDeleteId] = useState(\"\");\r\n  const [currentDeleteWorkflowNo, setCurrentDeleteWorkflowNo] = useState(\"\");\r\n\r\n  const [workflows, setWorkflows] = useState([]);\r\n  const [currentWorkflows, setCurrentWorkflows] = useState([]);\r\n\r\n  const [searchData, setSearchData] = useState(\"\")\r\n\r\n\r\n  // skeleton flag\r\n  const [skeleton, setSkeleton] = useState(false);\r\n\r\n\r\n  const [page, setPage] = useState(1);\r\n  const [count, setCount] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [visitedPages, setVisitedPages] = useState(page - 1);\r\n  const rowsPerPageOptions = [10];\r\n  const totalRecords = count;\r\n  const totalPages = Math.ceil(totalRecords / rowsPerPage);\r\n\r\n  let isMobile = useResponsive(\"down\", \"md\");\r\n\r\n\r\n  const handleChangePage = async (event, newPage) => {\r\n    setPage(newPage);\r\n    setSkeleton(true);\r\n\r\n    try {\r\n      //  search\r\n      if (Boolean(searchData) && Boolean(searchData?.length > 0)) {\r\n        await axios\r\n          .get(`${BASE_URL}/Erpapp/workflowsearch/?search=${searchData}&page=${newPage}`, header)\r\n          .then((res) => {\r\n            console.log(res?.data);\r\n            setWorkflows(res?.data);\r\n            setCount(res?.data?.length);\r\n          })\r\n          .catch((error) => {\r\n            console.log(\"ds\", error);\r\n          });\r\n      } else {\r\n        settingServices\r\n          .listWorkflows(newPage, header)\r\n          .then((res) => {\r\n            setWorkflows(res?.results);\r\n            setCount(res?.count);\r\n            setSkeleton(false);\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n            setSkeleton(false);\r\n          });\r\n      }\r\n    }\r\n    catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    // setRowsPerPage(parseInt(event.target.value, 10));\r\n    // setPage(1);\r\n    // setVisitedPages(visitedPages);\r\n    const newRowsPerPage = parseInt(event.target.value, 10);\r\n    const newPage = Math.floor(((page - 1) * rowsPerPage) / newRowsPerPage) + 1;\r\n\r\n    setRowsPerPage(newRowsPerPage);\r\n    setPage(newPage);\r\n  };\r\n\r\n  const listOfWorkflows = () => {\r\n    setSkeleton(true);\r\n    settingServices\r\n      .listWorkflows(page, header)\r\n      .then((res) => {\r\n        console.log(res?.count);\r\n        setWorkflows(res?.results);\r\n        setCount(res?.count);\r\n        setSkeleton(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        setSkeleton(false);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    listOfWorkflows();\r\n  }, [setWorkflows]);\r\n\r\n  const CreateWorkFlow = () => {\r\n    setListWorkflow(false);\r\n    setCreateWorkflow(true);\r\n  };\r\n\r\n  const handleEditPopup = (data) => {\r\n    setEditWorkflow(true);\r\n    setListWorkflow(false);\r\n    setCurrentWorkflows(data);\r\n  };\r\n\r\n  const handleDeletePopup = (data) => {\r\n    setOpenDelete(true);\r\n    setCurrentDeleteId(data?.id);\r\n    setCurrentDeleteWorkflowNo(data?.Workflow_Id);\r\n    setCurrentWorkflows(data);\r\n  };\r\n\r\n  const deleteData = (e) => {\r\n    e.preventDefault();\r\n\r\n    settingServices\r\n      .deleteWorkflow(currentDeleteWorkflowNo, header)\r\n      .then((response) => {\r\n        toast.success(`${currentWorkflows?.Document_Name} is Deleted Successfully`);\r\n        setOpenDelete(false);\r\n        listOfWorkflows();\r\n        // window.location.reload();\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n\r\n\r\n  const handleSearch = async (data) => {\r\n    await axios\r\n      .get(`${BASE_URL}/Erpapp/workflowsearch/?search=${data}`, header)\r\n      .then((res) => {\r\n        console.log(res?.data);\r\n        setWorkflows(res?.data);\r\n        setCount(res?.data?.length);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"ds\", error);\r\n      });\r\n  };\r\n\r\n\r\n  const handleSearchWorkflows = (e) => {\r\n    var data = e.target.value;\r\n    setSearchData(data);\r\n    data !== \"\" ? handleSearch(data) : listOfWorkflows();\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchUserRolePermissions(token))\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <>\r\n      <JumboContentLayoutMain>\r\n        <Div sx={{ display: listWorkflow === true ? \"block\" : \"none\" }}>\r\n          <Typography variant=\"h3\" sx={{ fontWeight: 600 }}>\r\n            Business Unit Workflow List - Count : {count || 0}\r\n          </Typography>\r\n          <Typography variant=\"h4\" sx={{ fontWeight: 500 }}>\r\n            User shall use this form to apply the workflow to business unit for\r\n            specific documents.\r\n          </Typography>\r\n\r\n          <Grid container sx={{ mt: 2 }}>\r\n            <Grid\r\n              item\r\n              className=\"filter\"\r\n              xs={12}\r\n              md={1}\r\n              lg={3}\r\n              xl={5}\r\n            ></Grid>\r\n\r\n            <Grid item xs={12} md={5} sm={12} lg={4} xl={4}>\r\n              <ErpSearchBox handleChange={handleSearchWorkflows} searchData={searchData} />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={6} sm={12} lg={5} xl={3} sx={{ display: \"flex\", justifyContent: \"flex-end\", mt: { xs: 1, md: 0 } }}>\r\n              {Array.isArray(userRolePermissions) && userRolePermissions.includes(217) && (\r\n                <ErpCreateButton handleClick={CreateWorkFlow} name={\"Create Workflow\"} />\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {/* code for purchase list table */}\r\n          <Div sx={{ mt: 1 }}>\r\n            <React.Fragment>\r\n              <JumboScrollbar\r\n                autoHeight={true}\r\n                autoHideTimeout={4000}\r\n                autoHeightMin={scrollHeight ? scrollHeight : 360}\r\n                autoHide={true}\r\n                hideTracksWhenNotNeeded\r\n                id=\"no-more-tables\"\r\n              >\r\n                <Table stickyHeader className=\"table\">\r\n                  <TableHead className=\"table-head\">\r\n                    <TableRow>\r\n                      <TableCell>Date</TableCell>\r\n                      <TableCell>\r\n                        Business Unit\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        Workflow Name\r\n                      </TableCell>\r\n                      <TableCell sx={{ minWidth: \"200px !important\" }}>\r\n                        Workflow Based On\r\n                      </TableCell>\r\n                      <TableCell sx={{ minWidth: \"200px !important\" }}>\r\n                        Document Name\r\n                      </TableCell>\r\n                      {/* <TableCell>\r\n                      Rule\r\n                    </TableCell> */}\r\n                      {/* <TableCell>Field Name</TableCell> */}\r\n                      <TableCell>No Of Levels</TableCell>\r\n                      <TableCell>Action</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {skeleton ? <CustomSkeleton headCount={7} rowCount={10} />\r\n                      : workflows?.length > 0 ? (\r\n                        workflows?.map((data) => {\r\n                            return (\r\n                              <TableRow hover key={data?.id} sx={{ fontSize: 14 }}>\r\n                                <TableCell data-title=\"Date\">\r\n                                  {/* {data.Created_Date.slice(0, 10)} */}\r\n                                  <DateFormatter date={data?.Created_Date} />\r\n                                </TableCell>\r\n                                <TableCell data-title=\"Business Unit\">\r\n                                  {data?.Partner_Id?.Partner_Name}\r\n                                </TableCell>\r\n                                <TableCell data-title=\"Workflow Name\">\r\n                                  {data?.Workflow_Name}\r\n                                </TableCell>\r\n                                <TableCell data-title=\"Workflow Based On\">\r\n                                  {data?.Workflow_Basedon}\r\n                                </TableCell>\r\n                                <TableCell data-title=\"Document Name\">\r\n                                  {data?.Document_Name}\r\n                                </TableCell>\r\n                                {/* <TableCell data-title=\"Field Name\">\r\n                              {data.Field_Name}\r\n                            </TableCell> */}\r\n                                <TableCell data-title=\"No Of Levels\">\r\n                                  {data?.Noof_Level}\r\n                                </TableCell>\r\n                                <TableCell data-title=\"Action\">\r\n                                  <ErpActionButton userRolePermissions={userRolePermissions} editPermissionId={218} deletePermissionId={219} onClickEdit={() => handleEditPopup(data)} onClickDelete={() => handleDeletePopup(data)} align=\"left\" />\r\n                                </TableCell>\r\n                              </TableRow>\r\n                            );\r\n                          })\r\n                      ) : (\r\n                        <TableRow>\r\n                          <TableCell colSpan={8} align=\"center\">\r\n                            No Workflows\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      )}\r\n                  </TableBody>\r\n                </Table>\r\n              </JumboScrollbar>\r\n\r\n              {/* pagination */}\r\n              <Div sx={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n                <CommonPagination\r\n                  totalPages={totalPages}\r\n                  page={page}\r\n                  handleChangePage={handleChangePage}\r\n                  rowsPerPageOptions={rowsPerPageOptions}\r\n                  rowsPerPage={rowsPerPage}\r\n                  handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n              </Div>\r\n            </React.Fragment>\r\n          </Div>\r\n\r\n          {/* Delete workflow popup */}\r\n          <ErpDeleteDialogBox flag={openDelete} setFlag={setOpenDelete} handleClick={deleteData} content={\"Are you sure you want to delete the workflow\"} id={currentWorkflows?.Document_Name} />\r\n\r\n\r\n        </Div>\r\n\r\n        <Div sx={{ display: createWorkflow === true ? \"block\" : \"none\" }}>\r\n          <CreatePartnerWorkflow\r\n            setCreateWorkflow={setCreateWorkflow}\r\n            setListWorkflow={setListWorkflow}\r\n            listOfWorkflows={listOfWorkflows}\r\n            workflows={workflows}\r\n          />\r\n        </Div>\r\n        <Div sx={{ display: editWorkflow === true ? \"block\" : \"none\" }}>\r\n          <EditPartnerWorkflow\r\n            setEditWorkflow={setEditWorkflow}\r\n            setListWorkflow={setListWorkflow}\r\n            listOfWorkflows={listOfWorkflows}\r\n            currentWorkflows={currentWorkflows}\r\n          />\r\n        </Div>\r\n        <ScrollToTop Scrollheight={180} />\r\n      </JumboContentLayoutMain>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListPartnerWorkflow;\r\n","import { useJumboLayoutSidebar } from \"@jumbo/hooks\";\r\nimport { Grid, MenuItem, Pagination, Select } from \"@mui/material\";\r\nimport useResponsive from \"app/pages/useResponsive\";\r\nimport React, { memo } from \"react\";\r\n\r\nconst CommonPagination = ({\r\n  totalPages,\r\n  page = 1,\r\n  handleChangePage = () => { },\r\n  rowsPerPageOptions,\r\n  rowsPerPage,\r\n  handleChangeRowsPerPage = () => { }\r\n}) => {\r\n\r\n  let isMobile = useResponsive(\"down\", \"md\");\r\n  let isTabOnly = useResponsive(\"down\", \"lg\");\r\n\r\n  const { sidebarOptions, setSidebarOptions } = useJumboLayoutSidebar();\r\n\r\n  console.log(\"sidebarOptions from pagination\", sidebarOptions?.open);\r\n\r\n  return (\r\n    <Grid container spacing={1} sx={{ mt: 2, display: \"flex\", alignItems: \"center\" }}>\r\n      <Grid item xs={12} md={0} lg={sidebarOptions?.open ? 1.5 : 3} xl={4.5}></Grid>\r\n      <Grid item xs={12} md={sidebarOptions?.open ? 5 : 4} lg={sidebarOptions?.open ? 4 : 4} xl={3.5} sx={{ display: \"flex\", justifyContent: { xs: \"center\", md: \"flex-end\" }, alignItems: \"center\", gap: \"10px !important\" }}>\r\n        {/* <label className=\"input-label\">Rows per page</label>\r\n        <Select\r\n          className=\"input-pagination-select\"\r\n          value={rowsPerPage}\r\n          onChange={handleChangeRowsPerPage}\r\n          variant=\"outlined\"\r\n          sx={{ minWidth: \"60px !important\" }}\r\n        >\r\n          {rowsPerPageOptions?.map((option) => (\r\n            <MenuItem key={option} value={option}>\r\n              {option}\r\n            </MenuItem>\r\n          ))}\r\n        </Select> */}\r\n      </Grid>\r\n      <Grid item xs={12} md={sidebarOptions?.open ? 7 : 8} lg={sidebarOptions?.open ? 6.5 : 5} xl={4} sx={{ display: \"flex\", justifyContent: { xs: \"center\", md: \"flex-end\" }, alignItems: \"center\", gap: \"10px !important\" }}>\r\n        <Pagination\r\n          color=\"primary\"\r\n          count={totalPages}\r\n          page={page}\r\n          onChange={(e, newValue) => handleChangePage(e, newValue)}\r\n          variant=\"outlined\"\r\n          shape=\"rounded\"\r\n          showFirstButton={Boolean(isMobile || isTabOnly) ? Boolean(sidebarOptions?.open || isMobile) ? false : true : true}\r\n          showLastButton={Boolean(isMobile || isTabOnly) ? Boolean(sidebarOptions?.open || isMobile) ? false : true : true}\r\n          siblingCount={0}\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default memo(CommonPagination);\r\n"],"names":["_ref","setListWorkflow","setCreateWorkflow","listOfWorkflows","scrollHeight","token","localStorage","getItem","header","headers","Authorization","concat","Accept","workflows","setWorkflows","useState","approverHead","setApproverHead","openForms","setOpenForms","employees","setEmployees","approvers","setApprovers","listModules","setListModules","listFormNames","setListFormNames","listDocumentNames","setListDocumentNames","listFieldNames","setListFieldNames","listFieldNames2","setListFieldNames2","partnerId","setPartnerId","partnerName","setPartnerName","documentId","setDocumentId","documentName","setDocumentName","ruleName","setRuleName","workflowName","setWorkflowName","fieldName","setFieldName","basedOnWorkflow","setBasedOnWorkflow","amount","setAmount","noOfLevels","setNoOfLevels","moduleName","setModuleName","formName","setFormName","fieldName2","setFieldName2","approverNameLists","setApproverNameLists","rows","setRows","id","level","from_value","to_value","approver_name","role","errors","setErrors","useEffect","hrApiServices","listofDropdownAllEmployees","then","res","console","log","catch","error","async","axios","BASE_URL","data","getPreviousWorkflows","handleValueChange","event","index","name","value","target","list","Number","loginUser","loginUserRole","filteroptions","filter","user","Employee_FirstName","Employee_LasttName","includes","_jsxs","_Fragment","children","_jsx","Setting","Typography","variant","sx","fontWeight","Div","onSubmit","e","_workflows$filter","preventDefault","validateForm","newErrors","undefined","Object","keys","length","i","_i$Partner_Id","Partner_Id","find","opt","Document_Name","toast","warning","payload","Workflow_Name","Assignworkflow_Id","Workflow_Basedon","Field_Name","Noof_Level","Amountjosn","leveljson","Head_Approval","parseInt","Company_Id","Created_By","Updated_By","Created_Date","todayDate","_res$data","status","success","handleError","className","minHeight","Grid","container","mt","ml","sm","md","item","xs","Autocomplete","onFocus","getListOfPartners","itemServices","listPartners","getOptionLabel","option","Partner_Name","options","onChange","newValue","isOptionEqualToValue","renderInput","params","TextField","_objectSpread","placeholder","autoComplete","style","color","getDocumentNames","_res$data$","_res$data$2","_res$data$3","_res$data$4","_res$data$5","_res$data$6","_res$data$7","Rule_Name","levels","newRows","push","filterWorkflowDocumentName","disabled","FormControlLabel","checked","control","Checkbox","size","label","labelPlacement","JumboScrollbar","autoHeight","autoHideTimeout","autoHeightMin","autoHide","hideTracksWhenNotNeeded","Table","width","TableHead","TableRow","TableCell","TableBody","map","minWidth","NumericTextField","FormControl","handleChangeApproverName","rowlist","previousApproverName","Designation","updatedApproverNameLists","prevIndex","indexOf","splice","newApproverName","ButtonGroup","type","lg","mr","Button","FaSave","onClick","TiCancel","Dialog","open","Form_Name","FieldShort_Name","DialogContent","getModuleNames","settingServices","filterFormNames","results","ModuleName","getFormNames","maxWidth","FormName","formname","filterlistFieldNames","_res$2","getFieldNames2","DialogActions","_currentWorkflows$Ass","setEditWorkflow","currentWorkflows","showCreatePage","setShowCreatePage","showUpdatePage","setShowUpdatePage","defaultPartnerName","defaultWorkflowName","defaultDocumentName","defaultFieldName","defaultRuleName","defaultNoofLevel","defaultHeadApprover","defaultRows","Array","from","_","_res$data$8","getFilteredOptions","currentIndex","_rows$map","selectedApprovers","row","userName","Workflow_Id","WorkflowName_Id","p","_updatedApproverNameL","handleClickCancel","dispatch","useDispatch","userRolePermissions","formPermissions","modulePermissions","useSelector","selectedUserRolePermissions","listWorkflow","createWorkflow","editWorkflow","openDelete","setOpenDelete","currentDeleteId","setCurrentDeleteId","currentDeleteWorkflowNo","setCurrentDeleteWorkflowNo","setCurrentWorkflows","searchData","setSearchData","skeleton","setSkeleton","page","setPage","count","setCount","rowsPerPage","setRowsPerPage","visitedPages","setVisitedPages","totalRecords","totalPages","Math","ceil","useResponsive","listWorkflows","fetchUserRolePermissions","JumboContentLayoutMain","display","xl","ErpSearchBox","handleChange","_res$data2","handleSearch","justifyContent","isArray","ErpCreateButton","handleClick","CreateWorkFlow","React","stickyHeader","CustomSkeleton","headCount","rowCount","_data$Partner_Id","hover","fontSize","DateFormatter","date","ErpActionButton","editPermissionId","deletePermissionId","onClickEdit","handleEditPopup","onClickDelete","handleDeletePopup","align","colSpan","flexWrap","CommonPagination","handleChangePage","newPage","Boolean","rowsPerPageOptions","handleChangeRowsPerPage","newRowsPerPage","floor","ErpDeleteDialogBox","flag","setFlag","deleteWorkflow","response","content","CreatePartnerWorkflow","EditPartnerWorkflow","ScrollToTop","Scrollheight","isMobile","isTabOnly","sidebarOptions","setSidebarOptions","useJumboLayoutSidebar","spacing","alignItems","gap","Pagination","shape","showFirstButton","showLastButton","siblingCount","memo"],"sourceRoot":""}